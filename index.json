[{"categories":["WPF"],"content":" 💡 GitHub 官方网址：https://github.com ","date":"2022-04-02","objectID":"/github%E6%93%8D%E4%BD%9C/:0:0","series":null,"tags":["WPF","Prism"],"title":"GitHub操作","uri":"/github%E6%93%8D%E4%BD%9C/#"},{"categories":["WPF"],"content":"创建远程仓库 输入仓库名点击创建 ","date":"2022-04-02","objectID":"/github%E6%93%8D%E4%BD%9C/:1:0","series":null,"tags":["WPF","Prism"],"title":"GitHub操作","uri":"/github%E6%93%8D%E4%BD%9C/#创建远程仓库"},{"categories":["WPF"],"content":"远程仓库操作 命令名称 作用 git remote -v 查看当前所有远程地址别名 git remote add 别名 远程地址 起别名 git push 别名 分支 推送本地分支上的内容到远程仓库 git clone 远程地址 将远程仓库的内容克隆到本地 git pull 远程仓库别名 远程分支名 将远程仓库对应分支最新内容拉下来后与当前本地分支直接合并 ","date":"2022-04-02","objectID":"/github%E6%93%8D%E4%BD%9C/:2:0","series":null,"tags":["WPF","Prism"],"title":"GitHub操作","uri":"/github%E6%93%8D%E4%BD%9C/#远程仓库操作"},{"categories":["WPF"],"content":"创建远程仓库别名 git remote -v 查看当前所有远程地址别名 git remote add 别名 远程地址 https://github.com/Sun-ZIFA/Git_Test.git 是创建仓库后的HTTPS地址 ZIFA@LAPTOP-OU8IUASF MINGW64 /e/Test/Git_Test (master) $ git remote -v ZIFA@LAPTOP-OU8IUASF MINGW64 /e/Test/Git_Test (master) $ git remote add git-test https://github.com/Sun-ZIFA/Git_Test.git ZIFA@LAPTOP-OU8IUASF MINGW64 /e/Test/Git_Test (master) $ git remote -v git-test https://github.com/Sun-ZIFA/Git_Test.git (fetch) git-test https://github.com/Sun-ZIFA/Git_Test.git (push) ","date":"2022-04-02","objectID":"/github%E6%93%8D%E4%BD%9C/:2:1","series":null,"tags":["WPF","Prism"],"title":"GitHub操作","uri":"/github%E6%93%8D%E4%BD%9C/#创建远程仓库别名"},{"categories":["WPF"],"content":"推送本地分支到远程库 git push 别名 分支 ZIFA@LAPTOP-OU8IUASF MINGW64 /e/Test/Git_Test (master) $ git push git-test master Enumerating objects: 13, done. Counting objects: 100% (13/13), done. Delta compression using up to 16 threads Compressing objects: 100% (5/5), done. Writing objects: 100% (13/13), 1.03 KiB | 1.03 MiB/s, done. Total 13 (delta 1), reused 0 (delta 0), pack-reused 0 remote: Resolving deltas: 100% (1/1), done. To https://github.com/Sun-ZIFA/Git_Test.git * [new branch] master -\u003e master ","date":"2022-04-02","objectID":"/github%E6%93%8D%E4%BD%9C/:2:2","series":null,"tags":["WPF","Prism"],"title":"GitHub操作","uri":"/github%E6%93%8D%E4%BD%9C/#推送本地分支到远程库"},{"categories":["WPF"],"content":"克隆远程仓库到本地 git clone 远程地址 ZIFA@LAPTOP-OU8IUASF MINGW64 /e/项目备份/ObjectDisk $ git clone https://github.com/Clover-You/ObjectDisk.git Cloning into 'ObjectDisk'... remote: Enumerating objects: 1228, done. remote: Counting objects: 100% (1228/1228), done. remote: Compressing objects: 100% (731/731), done. remote: Total 1228 (delta 766), reused 906 (delta 455), pack-reused 0 Receiving objects: 100% (1228/1228), 1.35 MiB | 718.00 KiB/s, done. Resolving deltas: 100% (766/766), done. ","date":"2022-04-02","objectID":"/github%E6%93%8D%E4%BD%9C/:2:3","series":null,"tags":["WPF","Prism"],"title":"GitHub操作","uri":"/github%E6%93%8D%E4%BD%9C/#克隆远程仓库到本地"},{"categories":["WPF"],"content":"拉取远程库内容 git pull 远程库别名 远程库分支名 //远程库修改后，将远程仓库对于分支最新内容拉下来后与当前本地分支直接合并 ZIFA@LAPTOP-OU8IUASF MINGW64 /e/Test/Git_Test (master) $ git pull git-test master remote: Enumerating objects: 5, done. remote: Counting objects: 100% (5/5), done. remote: Compressing objects: 100% (2/2), done. remote: Total 3 (delta 0), reused 0 (delta 0), pack-reused 0 Unpacking objects: 100% (3/3), 686 bytes | 76.00 KiB/s, done. From https://github.com/Sun-ZIFA/Git_Test * branch master -\u003e FETCH_HEAD cd27077..568ea4b master -\u003e git-test/master Updating cd27077..568ea4b Fast-forward hello.txt | 1 + 1 file changed, 1 insertion(+) ","date":"2022-04-02","objectID":"/github%E6%93%8D%E4%BD%9C/:2:4","series":null,"tags":["WPF","Prism"],"title":"GitHub操作","uri":"/github%E6%93%8D%E4%BD%9C/#拉取远程库内容"},{"categories":["WPF"],"content":"什么是分支 在版本控制过程中，同时推进多个任务，为每个任务，我们就可以创建每个任务的单独分支。使用分支意味着程序员可以把自己的工作从开发主线上分离开来，开发自己分支的时候，不会影响主线分支的运行。对于初学者而言，分支可以简单理解为副本，一个分支就是一个单独的副本。（分支底层其实也是指针的引用） ","date":"2022-04-02","objectID":"/git%E5%88%86%E6%94%AF%E6%93%8D%E4%BD%9C/:1:0","series":null,"tags":["WPF","Prism"],"title":"Git分支操作","uri":"/git%E5%88%86%E6%94%AF%E6%93%8D%E4%BD%9C/#什么是分支"},{"categories":["WPF"],"content":"分支的好处 同时并行推进多个功能开发，提高开发效率。 各个分支在开发过程中，如果某一个分支开发失败，不会对其他分支有任何影响。失败的分支删除重新开始即可。 ","date":"2022-04-02","objectID":"/git%E5%88%86%E6%94%AF%E6%93%8D%E4%BD%9C/:2:0","series":null,"tags":["WPF","Prism"],"title":"Git分支操作","uri":"/git%E5%88%86%E6%94%AF%E6%93%8D%E4%BD%9C/#分支的好处"},{"categories":["WPF"],"content":"分支的操作 命令名称 作用 git branch 分支名 创建分支 git branch -v 查看分支 git checkout 分支名 切换分支 git merge 分支名 把指定的分支合并到当前分支上 ","date":"2022-04-02","objectID":"/git%E5%88%86%E6%94%AF%E6%93%8D%E4%BD%9C/:3:0","series":null,"tags":["WPF","Prism"],"title":"Git分支操作","uri":"/git%E5%88%86%E6%94%AF%E6%93%8D%E4%BD%9C/#分支的操作"},{"categories":["WPF"],"content":"查看分支 git branch -v ZIFA@LAPTOP-OU8IUASF MINGW64 /e/Test/Git_Test (master) $ git branch -v * master a6fa5e1 first commit （*代表当前所在的分区） ","date":"2022-04-02","objectID":"/git%E5%88%86%E6%94%AF%E6%93%8D%E4%BD%9C/:3:1","series":null,"tags":["WPF","Prism"],"title":"Git分支操作","uri":"/git%E5%88%86%E6%94%AF%E6%93%8D%E4%BD%9C/#查看分支"},{"categories":["WPF"],"content":"创建分支 git branch 分支名 ZIFA@LAPTOP-OU8IUASF MINGW64 /e/Test/Git_Test (master) $ git branch hot-fix ZIFA@LAPTOP-OU8IUASF MINGW64 /e/Test/Git_Test (master) $ git branch -v hot-fix a6fa5e1 first commit * master a6fa5e1 first commit ","date":"2022-04-02","objectID":"/git%E5%88%86%E6%94%AF%E6%93%8D%E4%BD%9C/:3:2","series":null,"tags":["WPF","Prism"],"title":"Git分支操作","uri":"/git%E5%88%86%E6%94%AF%E6%93%8D%E4%BD%9C/#创建分支"},{"categories":["WPF"],"content":"切换分支 git checkout 分支名 ZIFA@LAPTOP-OU8IUASF MINGW64 /e/Test/Git_Test (master) $ git checkout hot-fix Switched to branch 'hot-fix' ZIFA@LAPTOP-OU8IUASF MINGW64 /e/Test/Git_Test (hot-fix) $ ","date":"2022-04-02","objectID":"/git%E5%88%86%E6%94%AF%E6%93%8D%E4%BD%9C/:3:3","series":null,"tags":["WPF","Prism"],"title":"Git分支操作","uri":"/git%E5%88%86%E6%94%AF%E6%93%8D%E4%BD%9C/#切换分支"},{"categories":["WPF"],"content":"合并分支 git merge 分支名 //切换到hot-fix分支 ZIFA@LAPTOP-OU8IUASF MINGW64 /e/Test/Git_Test (master) $ git checkout hot-fix Switched to branch 'hot-fix' //修改hot-fix分支下的hello.txt Welcome to you ZIFA@LAPTOP-OU8IUASF MINGW64 /e/Test/Git_Test (hot-fix) $ vim hello.txt //添加到暂存区 ZIFA@LAPTOP-OU8IUASF MINGW64 /e/Test/Git_Test (hot-fix) $ git add hello.txt //提交到本地库 ZIFA@LAPTOP-OU8IUASF MINGW64 /e/Test/Git_Test (hot-fix) $ git commit -m \"hot-fix first commit\" hello.txt [hot-fix 7aab108] hot-fix first commit 1 file changed, 1 insertion(+), 1 deletion(-) //切换到主分区master ZIFA@LAPTOP-OU8IUASF MINGW64 /e/Test/Git_Test (hot-fix) $ git checkout master Switched to branch 'master' //在主分区master下合并hot-fix分区 ZIFA@LAPTOP-OU8IUASF MINGW64 /e/Test/Git_Test (master) $ git merge hot-fix Updating a6fa5e1..7aab108 Fast-forward hello.txt | 2 +- 1 file changed, 1 insertion(+), 1 deletion(-) //查看hello.txt文件 已经修改 ZIFA@LAPTOP-OU8IUASF MINGW64 /e/Test/Git_Test (master) $ cat hello.txt Hello World! Welcome to you! ","date":"2022-04-02","objectID":"/git%E5%88%86%E6%94%AF%E6%93%8D%E4%BD%9C/:3:4","series":null,"tags":["WPF","Prism"],"title":"Git分支操作","uri":"/git%E5%88%86%E6%94%AF%E6%93%8D%E4%BD%9C/#合并分支"},{"categories":["WPF"],"content":"产生冲突 冲突产生的表现：后面状态为 MERGING ZIFA@LAPTOP-OU8IUASF MINGW64 /e/Test/Git_Test (master|MERGING) 冲突产生的原因： 合并分支时，两个分支在同一个文件的同一个位置有两套完全不同的修改。Git 无法替 我们决定使用哪一个。必须人为决定新代码内容。 //修改master分支上的hello.txt 添加一行Hello WPF！ ZIFA@LAPTOP-OU8IUASF MINGW64 /e/Test/Git_Test (master) $ vim hello.txt //添加到暂存区 ZIFA@LAPTOP-OU8IUASF MINGW64 /e/Test/Git_Test (master) $ git add hello.txt //提交到本地库 ZIFA@LAPTOP-OU8IUASF MINGW64 /e/Test/Git_Test (master) $ git commit -m \"update 1\" hello.txt [master 4e3f85c] update 1 1 file changed, 1 insertion(+) //切换到hot-fix分区 ZIFA@LAPTOP-OU8IUASF MINGW64 /e/Test/Git_Test (master) $ git checkout hot-fix Switched to branch 'hot-fix' //修改hot-fix分区的hello.txt 添加一行Hello Git！ ZIFA@LAPTOP-OU8IUASF MINGW64 /e/Test/Git_Test (hot-fix) $ vim hello.txt //添加到暂存区 ZIFA@LAPTOP-OU8IUASF MINGW64 /e/Test/Git_Test (hot-fix) $ git add hello.txt //提交到本地库 ZIFA@LAPTOP-OU8IUASF MINGW64 /e/Test/Git_Test (hot-fix) $ git commit -m \"update 2\" [hot-fix fc47191] update 2 1 file changed, 1 insertion(+) //切换到master主分区 ZIFA@LAPTOP-OU8IUASF MINGW64 /e/Test/Git_Test (hot-fix) $ git checkout master Switched to branch 'master' //合并hot-fix分区，提示需要手动合并代码 后面状态为MERGING ZIFA@LAPTOP-OU8IUASF MINGW64 /e/Test/Git_Test (master) $ git merge hot-fix Auto-merging hello.txt CONFLICT (content): Merge conflict in hello.txt Automatic merge failed; fix conflicts and then commit the result. //编辑有冲突的文件hello.txt，删除特殊符号，保留要使用的内容 //特殊符号：\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD 当前分支的代码 ======= 合并过来的代码 \u003e\u003e\u003e\u003e\u003e\u003e\u003e hot-fix ZIFA@LAPTOP-OU8IUASF MINGW64 /e/Test/Git_Test (master|MERGING) $ vim hello.txt //添加到暂存区 ZIFA@LAPTOP-OU8IUASF MINGW64 /e/Test/Git_Test (master|MERGING) $ git add hello.txt //提交到本地库时不能带文件名，不然报错 ZIFA@LAPTOP-OU8IUASF MINGW64 /e/Test/Git_Test (master|MERGING) $ git commit -m \"update 3\" hello.txt fatal: cannot do a partial commit during a merge. //提交到本地库 ZIFA@LAPTOP-OU8IUASF MINGW64 /e/Test/Git_Test (master|MERGING) $ git commit -m \"update 3\" [master cd27077] update 3 //发现后面MERGING消失，变为正常 ZIFA@LAPTOP-OU8IUASF MINGW64 /e/Test/Git_Test (master) $ ","date":"2022-04-02","objectID":"/git%E5%88%86%E6%94%AF%E6%93%8D%E4%BD%9C/:3:5","series":null,"tags":["WPF","Prism"],"title":"Git分支操作","uri":"/git%E5%88%86%E6%94%AF%E6%93%8D%E4%BD%9C/#产生冲突"},{"categories":["WPF"],"content":" 💡 Git官方地址：https://git-scm.com/ 根据自己电脑系统安装最新的Git，安装过程中所有配置可以直接默认下一步 选择 Git 安装位置，要求是非中文并且没有空格的目录，然后下一步。 Git 选项配置，推荐默认设置，然后下一步。 Git 安装目录名，不用修改，直接点击下一步。 Git 的默认编辑器，建议使用默认的 Vim 编辑器，然后点击下一步。 默认分支名设置，选择让 Git 决定，分支名默认为 master，下一步。 修改 Git 的环境变量，选第一个，不修改环境变量，只在 Git Bash 里使用 Git。 选择后台客户端连接协议，选默认值 OpenSSL，然后下一步。 配置 Git 文件的行末换行符，Windows 使用 CRLF，Linux 使用 LF，选择第一个自动转换，然后继续下一步。 选择 Git 终端类型，选择默认的 Git Bash 终端，然后继续下一步。 选择 Git pull 合并的模式，选择默认，然后下一步。 选择 Git 的凭据管理器，选择默认的跨平台的凭据管理器，然后下一步。 其他配置，选择默认设置，然后下一步。 实验室功能，技术还不成熟，有已知的 bug，不要勾选，然后点击右下角的 Install按钮，开始安装 Git。 点击 Finsh 按钮，Git 安装成功！ 右键任意位置，在右键菜单里选择 Git Bash Here 即可打开 Git Bash 命令行终端。 在 Git Bash 终端里输入 git –version 查看 git 版本，如图所示，说明 Git 安装成功。 ","date":"2022-04-02","objectID":"/git%E5%AE%89%E8%A3%85/:0:0","series":null,"tags":["WPF","Prism"],"title":"Git安装","uri":"/git%E5%AE%89%E8%A3%85/#"},{"categories":["WPF"],"content":" 命令名称 作用 git config – global user.name 用户名 设置用户签名 git config – global user.email 邮箱 设置用户签名 git init 初始化本地库 git status 查看本地库状态 git add 文件名 添加到暂存区 git commit -m “日志信息” 文件名 提交到本地库 git reflog 查看历史记录 git reset – hard 版本号 版本穿梭 ","date":"2022-04-02","objectID":"/git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/:0:0","series":null,"tags":["WPF","Prism"],"title":"Git常用命令","uri":"/git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#"},{"categories":["WPF"],"content":"设置用户签名 签名的作用是区分不同操作者身份。用户的签名信息在每一个版本的提交信息中能够看到，以此确认本次提交是谁做的。Git 首次安装必须设置一下用户签名，否则无法提交代码。 这里设置用户签名和将来登录 GitHub（或其他代码托管中心）的账号没有任何关系。 git config –global user.name 用户名 git config –global user.email 邮箱 ZIFA@LAPTOP-OU8IUASF MINGW64 ~ $ git config --global user.name ZIFA ZIFA@LAPTOP-OU8IUASF MINGW64 ~ $ git config --global user.email 1697838602@qq.com ","date":"2022-04-02","objectID":"/git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/:1:0","series":null,"tags":["WPF","Prism"],"title":"Git常用命令","uri":"/git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#设置用户签名"},{"categories":["WPF"],"content":"初始化本地库 git init ZIFA@LAPTOP-OU8IUASF MINGW64 /e/Test/Git_Test $ git init Initialized empty Git repository in E:/Test/Git_Test/.git/ 初始化会在项目地址生成.git文件夹，需要显示隐藏文件 ","date":"2022-04-02","objectID":"/git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/:2:0","series":null,"tags":["WPF","Prism"],"title":"Git常用命令","uri":"/git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#初始化本地库"},{"categories":["WPF"],"content":"查看本地库状态 git status 首次查看 工作区没有任何文件 ZIFA@LAPTOP-OU8IUASF MINGW64 /e/Test/Git_Test (master) $ git status On branch master No commits yet nothing to commit (create/copy files and use \"git add\" to track) 新增hello.txt文件 //内容：Hello World！ ZIFA@LAPTOP-OU8IUASF MINGW64 /e/Test/Git_Test (master) $ vim hello.txt 再次查看 检测到未追踪的文件 ZIFA@LAPTOP-OU8IUASF MINGW64 /e/Test/Git_Test (master) $ git status On branch master No commits yet Untracked files: (use \"git add \u003cfile\u003e...\" to include in what will be committed) hello.txt nothing added to commit but untracked files present (use \"git add\" to track) ","date":"2022-04-02","objectID":"/git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/:3:0","series":null,"tags":["WPF","Prism"],"title":"Git常用命令","uri":"/git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#查看本地库状态"},{"categories":["WPF"],"content":"添加暂存区 git add 文件名 ZIFA@LAPTOP-OU8IUASF MINGW64 /e/Test/Git_Test (master) $ git add hello.txt warning: LF will be replaced by CRLF in hello.txt. The file will have its original line endings in your working directory 查看状态 检测到暂存区有新文件 ZIFA@LAPTOP-OU8IUASF MINGW64 /e/Test/Git_Test (master) $ git status On branch master No commits yet Changes to be committed: (use \"git rm --cached \u003cfile\u003e...\" to unstage) new file: hello.txt ","date":"2022-04-02","objectID":"/git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/:4:0","series":null,"tags":["WPF","Prism"],"title":"Git常用命令","uri":"/git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#添加暂存区"},{"categories":["WPF"],"content":"提交到本地库 git commit -m “日志信息” 文件名 ZIFA@LAPTOP-OU8IUASF MINGW64 /e/Test/Git_Test (master) $ git commit -m \"first commit\" hello.txt warning: LF will be replaced by CRLF in hello.txt. The file will have its original line endings in your working directory [master (root-commit) a6fa5e1] first commit 1 file changed, 1 insertion(+) create mode 100644 hello.txt 查看状态 没有文件需要提交 ZIFA@LAPTOP-OU8IUASF MINGW64 /e/Test/Git_Test (master) $ git status On branch master nothing to commit, working tree clean ","date":"2022-04-02","objectID":"/git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/:5:0","series":null,"tags":["WPF","Prism"],"title":"Git常用命令","uri":"/git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#提交到本地库"},{"categories":["WPF"],"content":"修改文件 //修改hello.txt里面的内容 另添加一行Hello Git！ ZIFA@LAPTOP-OU8IUASF MINGW64 /e/Test/Git_Test (master) $ vim hello.txt //查看状态 检测到工作区有文件被修改 ZIFA@LAPTOP-OU8IUASF MINGW64 /e/Test/Git_Test (master) $ git status On branch master Changes not staged for commit: (use \"git add \u003cfile\u003e...\" to update what will be committed) (use \"git restore \u003cfile\u003e...\" to discard changes in working directory) modified: hello.txt no changes added to commit (use \"git add\" and/or \"git commit -a\") //将修改的文件再次添加到暂存区 ZIFA@LAPTOP-OU8IUASF MINGW64 /e/Test/Git_Test (master) $ git add hello.txt warning: LF will be replaced by CRLF in hello.txt. The file will have its original line endings in your working directory //查看状态 工作区的修改添加到了暂存区 ZIFA@LAPTOP-OU8IUASF MINGW64 /e/Test/Git_Test (master) $ git status On branch master Changes to be committed: (use \"git restore --staged \u003cfile\u003e...\" to unstage) modified: hello.txt //提交到本地库 ZIFA@LAPTOP-OU8IUASF MINGW64 /e/Test/Git_Test (master) $ git commit -m \"second commit\" hello.txt warning: LF will be replaced by CRLF in hello.txt. The file will have its original line endings in your working directory [master 6935bb4] second commit 1 file changed, 1 insertion(+) //查看状态 ZIFA@LAPTOP-OU8IUASF MINGW64 /e/Test/Git_Test (master) $ git status On branch master nothing to commit, working tree clean ","date":"2022-04-02","objectID":"/git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/:6:0","series":null,"tags":["WPF","Prism"],"title":"Git常用命令","uri":"/git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#修改文件"},{"categories":["WPF"],"content":"历史版本 ","date":"2022-04-02","objectID":"/git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/:7:0","series":null,"tags":["WPF","Prism"],"title":"Git常用命令","uri":"/git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#历史版本"},{"categories":["WPF"],"content":"查看历史版本 git reflog 查看版本信息 git log 查看版本详细信息 ZIFA@LAPTOP-OU8IUASF MINGW64 /e/Test/Git_Test (master) $ git reflog 6935bb4 (HEAD -\u003e master) HEAD@{0}: commit: second commit a6fa5e1 HEAD@{1}: commit (initial): first commit ZIFA@LAPTOP-OU8IUASF MINGW64 /e/Test/Git_Test (master) $ git log commit 6935bb458799fafc90d83a30345dc154f634ef16 (HEAD -\u003e master) Author: liuzifa \u003c1697838602@qq.com\u003e Date: Wed Mar 30 10:00:11 2022 +0800 second commit commit a6fa5e1bd1b3bc5f757cf434241868b80622d0dc Author: liuzifa \u003c1697838602@qq.com\u003e Date: Wed Mar 30 09:19:37 2022 +0800 first commit ","date":"2022-04-02","objectID":"/git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/:7:1","series":null,"tags":["WPF","Prism"],"title":"Git常用命令","uri":"/git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#查看历史版本"},{"categories":["WPF"],"content":"版本穿梭 git reset –hard 版本号 //首先查看当前的历史记录，可以看到当前是在 6935bb4 这个版本 ZIFA@LAPTOP-OU8IUASF MINGW64 /e/Test/Git_Test (master) $ git reflog 6935bb4 (HEAD -\u003e master) HEAD@{0}: commit: second commit a6fa5e1 HEAD@{1}: commit (initial): first commit //切换到 a6fa5e1 版本，也就是我们第一次提交的版本 ZIFA@LAPTOP-OU8IUASF MINGW64 /e/Test/Git_Test (master) $ git reset --hard a6fa5e1 HEAD is now at a6fa5e1 first commit //切换完毕之后再查看历史记录，当前成功切换到了 a6fa5e1 版本 ZIFA@LAPTOP-OU8IUASF MINGW64 /e/Test/Git_Test (master) $ git reflog a6fa5e1 (HEAD -\u003e master) HEAD@{0}: reset: moving to a6fa5e1 6935bb4 HEAD@{1}: commit: second commit a6fa5e1 (HEAD -\u003e master) HEAD@{2}: commit (initial): first commit //然后查看文件 hello.txt，发现文件内容已经变化 ZIFA@LAPTOP-OU8IUASF MINGW64 /e/Test/Git_Test (master) $ cat hello.txt Hello World! ","date":"2022-04-02","objectID":"/git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/:7:2","series":null,"tags":["WPF","Prism"],"title":"Git常用命令","uri":"/git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#版本穿梭"},{"categories":["WPF"],"content":" 💡 Git是一个免费的、开源的分布式版本控制系统 ","date":"2022-04-02","objectID":"/git%E6%A6%82%E8%BF%B0/:0:0","series":null,"tags":["WPF","Prism"],"title":"Git概述","uri":"/git%E6%A6%82%E8%BF%B0/#"},{"categories":["WPF"],"content":"什么是版本控制 记录文件修改历史记录，能让用户查看历史版本，方便版本切换 ","date":"2022-04-02","objectID":"/git%E6%A6%82%E8%BF%B0/:1:0","series":null,"tags":["WPF","Prism"],"title":"Git概述","uri":"/git%E6%A6%82%E8%BF%B0/#什么是版本控制"},{"categories":["WPF"],"content":"为什么需要版本控制 个人开发过渡到团队协助 ","date":"2022-04-02","objectID":"/git%E6%A6%82%E8%BF%B0/:2:0","series":null,"tags":["WPF","Prism"],"title":"Git概述","uri":"/git%E6%A6%82%E8%BF%B0/#为什么需要版本控制"},{"categories":["WPF"],"content":"版本控制工具 ","date":"2022-04-02","objectID":"/git%E6%A6%82%E8%BF%B0/:3:0","series":null,"tags":["WPF","Prism"],"title":"Git概述","uri":"/git%E6%A6%82%E8%BF%B0/#版本控制工具"},{"categories":["WPF"],"content":"集中式版本控制工具 CVS、SVN、VSS…… 有一个单一的集中管理的服务器，保存所有文件的修订版本，协同工作的人们都通过客户端连到这台服务器，取出最新的文件或者提交更新 显而易见的缺点是中央服务器的单点故障。如果服务器宕机一小时，那么在这一小时内，谁都无法提交更新，也就无法协同工作 ","date":"2022-04-02","objectID":"/git%E6%A6%82%E8%BF%B0/:3:1","series":null,"tags":["WPF","Prism"],"title":"Git概述","uri":"/git%E6%A6%82%E8%BF%B0/#集中式版本控制工具"},{"categories":["WPF"],"content":"分布式版本控制工具 Git、Mercurial、Bazaar、Darcs…… 像 Git 这种分布式版本控制工具，客户端提取的不是最新版本的文件快照，而是把代码仓库完整地镜像下来（本地库）。这样任何一处协同工作用的文件发生故障，事后都可以用其他客户端的本地仓库进行恢复 服务器断网的情况下也可以进行开发（因为版本控制是在本地进行的），每个客户端保存的也都是整个完整的项目（包含历史记录，更加安全） ","date":"2022-04-02","objectID":"/git%E6%A6%82%E8%BF%B0/:3:2","series":null,"tags":["WPF","Prism"],"title":"Git概述","uri":"/git%E6%A6%82%E8%BF%B0/#分布式版本控制工具"},{"categories":["WPF"],"content":"Git和代码托管中心 ","date":"2022-04-02","objectID":"/git%E6%A6%82%E8%BF%B0/:4:0","series":null,"tags":["WPF","Prism"],"title":"Git概述","uri":"/git%E6%A6%82%E8%BF%B0/#git和代码托管中心"},{"categories":["WPF"],"content":"局域网 GitLab ","date":"2022-04-02","objectID":"/git%E6%A6%82%E8%BF%B0/:4:1","series":null,"tags":["WPF","Prism"],"title":"Git概述","uri":"/git%E6%A6%82%E8%BF%B0/#局域网"},{"categories":["WPF"],"content":"互联网 GitHub（外网） Gitee（国内网站） ","date":"2022-04-02","objectID":"/git%E6%A6%82%E8%BF%B0/:4:2","series":null,"tags":["WPF","Prism"],"title":"Git概述","uri":"/git%E6%A6%82%E8%BF%B0/#互联网"},{"categories":["WPF"],"content":" 💡 在WPF应用程序+Prism框架中，一般都是使用Navigation导航进行区域页面的切换，当我配置默认首页的时候出现了一些问题，所以这里来记录一下 配置默认首页的时候，我一开始的想法就是在构造函数中进行导航到首页 public class MainViewModel { public MainViewModel(IRegionManager regionManager) { regionManager.Regions[\"regionManager\"].RequestNavigate(\"IndexView\"); } } 但是在元素的构造函数被调用时，元素的很多属性都没准备好，就例如ContentControl中区域部分，从而导致异常，The region manager does not contain the regionManager region.   这时候就要去程序入口App.xaml.cs重写OnInitialized这个方法，如下 //App.xaml.cs protected override void OnInitialized() { var service = App.Current.MainWindow.DataContext as IConfigService; if(service != null) { //去执行Configure方法 service.Configure(); } base.OnInitialized(); } 这里使用了IConfigService接口存放程序初始配置项 //IConfigService.cs public interface IConfigService { void Configure(); } 继承IConfigService接口，实现Configure方法去进行导航切换 public class MainViewModel : IConfigService { private readonly IRegionManager regionManager; public MainViewModel(IRegionManager regionManager) { this.regionManager = regionManager; } public void Configure() { regionManager.Regions[\"regionManager\"].RequestNavigate(\"IndexView\"); } } ","date":"2022-04-02","objectID":"/%E9%85%8D%E7%BD%AE%E9%BB%98%E8%AE%A4%E9%A6%96%E9%A1%B5/:0:0","series":null,"tags":["WPF","Prism"],"title":"配置默认首页","uri":"/%E9%85%8D%E7%BD%AE%E9%BB%98%E8%AE%A4%E9%A6%96%E9%A1%B5/#"},{"categories":["JavaScript"],"content":" 日常开发中会有很多经常使用的正则表达式，这里整理20个常用的正则，可以方便以后使用，提高开发效率，copy使我快乐  ","date":"2022-03-20","objectID":"/20%E4%B8%AA%E5%B8%B8%E7%94%A8%E7%9A%84%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/:0:0","series":null,"tags":["JavaScript"],"title":"20个常用的正则表达式协议","uri":"/20%E4%B8%AA%E5%B8%B8%E7%94%A8%E7%9A%84%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/#"},{"categories":["JavaScript"],"content":"1、手机号码的校验 const phoneReg = /^[1][3,4,5,6,7,8,9][0-9]{9}$/ const phoneStr1 = '18886233487' console.log(phoneReg.test(phoneStr1)) // true const phoneStr2 = '17283017203897' console.log(phoneReg.test(phoneStr2)) // false  ","date":"2022-03-20","objectID":"/20%E4%B8%AA%E5%B8%B8%E7%94%A8%E7%9A%84%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/:0:0","series":null,"tags":["JavaScript"],"title":"20个常用的正则表达式协议","uri":"/20%E4%B8%AA%E5%B8%B8%E7%94%A8%E7%9A%84%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/#1手机号码的校验"},{"categories":["JavaScript"],"content":"2、身份证的校验 const sfzReg = /^[1-9]\\d{5}(18|19|([23]\\d))\\d{2}((0[1-9])|(10|11|12))(([0-2][1-9])|10|20|30|31)\\d{3}[0-9Xx]$/ const sfzStr1 = '415106199801012130' console.log(sfzReg.test(sfzStr1)) // true const sfzStr2 = '718381298381212183' console.log(sfzReg.test(sfzStr2)) // false  ","date":"2022-03-20","objectID":"/20%E4%B8%AA%E5%B8%B8%E7%94%A8%E7%9A%84%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/:0:0","series":null,"tags":["JavaScript"],"title":"20个常用的正则表达式协议","uri":"/20%E4%B8%AA%E5%B8%B8%E7%94%A8%E7%9A%84%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/#2身份证的校验"},{"categories":["JavaScript"],"content":"3、邮箱的校验 const emailReg = /^([A-Za-z0-9_\\-\\.])+\\@([A-Za-z0-9_\\-\\.])+\\.([A-Za-z]{2,4})$/ const emailStrWY = '956666@163.com' // 163邮箱 const emailStrQQ = '956666@qq.com' // qq邮箱 console.log(emailReg.test(emailStrWY)) // true console.log(emailReg.test(emailStrQQ)) // true const noEmail = '72873213.com' console.log(emailReg.test(noEmail)) // false  ","date":"2022-03-20","objectID":"/20%E4%B8%AA%E5%B8%B8%E7%94%A8%E7%9A%84%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/:0:0","series":null,"tags":["JavaScript"],"title":"20个常用的正则表达式协议","uri":"/20%E4%B8%AA%E5%B8%B8%E7%94%A8%E7%9A%84%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/#3邮箱的校验"},{"categories":["JavaScript"],"content":"4、URL的校验 const urlReg = /^((https?|ftp|file):\\/\\/)?([\\da-z\\.-]+)\\.([a-z\\.]{2,6})([\\/\\w \\.-]*)*\\/?$/ const urlStr1 = 'https://haha.sunshine.com/xxx/xxx' console.log(urlReg.test(urlStr1)) // true const urlStr2 = 'sss://haha.sunshine.com/xxx/xxx' console.log(urlReg.test(urlStr2)) // false  ","date":"2022-03-20","objectID":"/20%E4%B8%AA%E5%B8%B8%E7%94%A8%E7%9A%84%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/:0:0","series":null,"tags":["JavaScript"],"title":"20个常用的正则表达式协议","uri":"/20%E4%B8%AA%E5%B8%B8%E7%94%A8%E7%9A%84%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/#4url的校验"},{"categories":["JavaScript"],"content":"5、IPv4的校验 const ipv4Reg = /^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/ const ipv4Str1 = '122.12.56.65' console.log(ipv4Reg.test(ipv4Str1)) // true const ipv4Str2 = '122.12.56.655' console.log(ipv4Reg.test(ipv4Str2)) // false  ","date":"2022-03-20","objectID":"/20%E4%B8%AA%E5%B8%B8%E7%94%A8%E7%9A%84%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/:0:0","series":null,"tags":["JavaScript"],"title":"20个常用的正则表达式协议","uri":"/20%E4%B8%AA%E5%B8%B8%E7%94%A8%E7%9A%84%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/#5ipv4的校验"},{"categories":["JavaScript"],"content":"6、16进制颜色的校验 const color16Reg = /^#?([a-fA-F0-9]{6}|[a-fA-F0-9]{3})$/ const color16Str1 = '#fff' console.log(color16Reg.test(color16Str1)) // true const color16Str2 = '#1234567' console.log(color16Reg.test(color16Str2)) // false  ","date":"2022-03-20","objectID":"/20%E4%B8%AA%E5%B8%B8%E7%94%A8%E7%9A%84%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/:0:0","series":null,"tags":["JavaScript"],"title":"20个常用的正则表达式协议","uri":"/20%E4%B8%AA%E5%B8%B8%E7%94%A8%E7%9A%84%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/#616进制颜色的校验"},{"categories":["JavaScript"],"content":"7、日期 YYYY-MM-DD const dateReg = /^\\d{4}(\\-)\\d{1,2}\\1\\d{1,2}$/ const dateStr1 = '2021-10-10' console.log(dateReg.test(dateStr1)) // true const dateStr2 = '2021-01-01 1' console.log(dateReg.test(dateStr2)) // false  ","date":"2022-03-20","objectID":"/20%E4%B8%AA%E5%B8%B8%E7%94%A8%E7%9A%84%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/:0:0","series":null,"tags":["JavaScript"],"title":"20个常用的正则表达式协议","uri":"/20%E4%B8%AA%E5%B8%B8%E7%94%A8%E7%9A%84%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/#7日期-yyyy-mm-dd"},{"categories":["JavaScript"],"content":"8、日期 YYYY-MM-DD hh:mm:ss const dateReg = /^(\\d{1,4})(-|\\/)(\\d{1,2})\\2(\\d{1,2}) (\\d{1,2}):(\\d{1,2}):(\\d{1,2})$/ const dateStr1 = '2021-10-10 16:16:16' console.log(dateReg.test(dateStr1)) // true const dateStr2 = '2021-10-10 16:' console.log(dateReg.test(dateStr2)) // false  ","date":"2022-03-20","objectID":"/20%E4%B8%AA%E5%B8%B8%E7%94%A8%E7%9A%84%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/:0:0","series":null,"tags":["JavaScript"],"title":"20个常用的正则表达式协议","uri":"/20%E4%B8%AA%E5%B8%B8%E7%94%A8%E7%9A%84%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/#8日期-yyyy-mm-dd-hhmmss"},{"categories":["JavaScript"],"content":"9、整数的校验 const intReg = /^[-+]?\\d*$/ const intNum1 = 12345 console.log(intReg.test(intNum1)) // true const intNum2 = 12345.1 console.log(intReg.test(intNum2)) // false  ","date":"2022-03-20","objectID":"/20%E4%B8%AA%E5%B8%B8%E7%94%A8%E7%9A%84%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/:0:0","series":null,"tags":["JavaScript"],"title":"20个常用的正则表达式协议","uri":"/20%E4%B8%AA%E5%B8%B8%E7%94%A8%E7%9A%84%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/#9整数的校验"},{"categories":["JavaScript"],"content":"10、小数的校验 const floatReg = /^[-\\+]?\\d+(\\.\\d+)?$/ const floatNum = 1234.5 console.log(floatReg.test(floatNum)) // true  ","date":"2022-03-20","objectID":"/20%E4%B8%AA%E5%B8%B8%E7%94%A8%E7%9A%84%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/:0:0","series":null,"tags":["JavaScript"],"title":"20个常用的正则表达式协议","uri":"/20%E4%B8%AA%E5%B8%B8%E7%94%A8%E7%9A%84%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/#10小数的校验"},{"categories":["JavaScript"],"content":"11、保留n位小数 function checkFloat(n) { return new RegExp(`^([1-9]+[\\d]*(.[0-9]{1,${n}})?)$`) } // 保留2位小数 const floatReg = checkFloat(2) const floatNum1 = 1234.5 console.log(floatReg.test(floatNum1)) // true const floatNum2 = 1234.55 console.log(floatReg.test(floatNum2)) // true const floatNum3 = 1234.555 console.log(floatReg.test(floatNum3)) // false  ","date":"2022-03-20","objectID":"/20%E4%B8%AA%E5%B8%B8%E7%94%A8%E7%9A%84%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/:0:0","series":null,"tags":["JavaScript"],"title":"20个常用的正则表达式协议","uri":"/20%E4%B8%AA%E5%B8%B8%E7%94%A8%E7%9A%84%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/#11保留n位小数"},{"categories":["JavaScript"],"content":"12、邮政编号的校验 const postalNoReg = /^\\d{6}$/ const postalNoStr1 = '522000' console.log(postalNoReg.test(postalNoStr1)) // true const postalNoStr2 = '5220000' console.log(postalNoReg.test(postalNoStr2)) // false  ","date":"2022-03-20","objectID":"/20%E4%B8%AA%E5%B8%B8%E7%94%A8%E7%9A%84%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/:0:0","series":null,"tags":["JavaScript"],"title":"20个常用的正则表达式协议","uri":"/20%E4%B8%AA%E5%B8%B8%E7%94%A8%E7%9A%84%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/#12邮政编号的校验"},{"categories":["JavaScript"],"content":"13、QQ号的校验 说明：5-11位数字 const qqReg = /^[1-9][0-9]{4,10}$/ const qqStr1 = '1915801633' console.log(qqReg.test(qqStr1)) // true const qqStr2 = '191580163333' console.log(qqReg.test(qqStr2)) // false  ","date":"2022-03-20","objectID":"/20%E4%B8%AA%E5%B8%B8%E7%94%A8%E7%9A%84%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/:0:0","series":null,"tags":["JavaScript"],"title":"20个常用的正则表达式协议","uri":"/20%E4%B8%AA%E5%B8%B8%E7%94%A8%E7%9A%84%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/#13qq号的校验"},{"categories":["JavaScript"],"content":"14、微信号的校验 说明：6至20位，以字母开头，字母，数字，减号，下划线 const wxReg = /^[a-zA-Z]([-_a-zA-Z0-9]{5,19})+$/ const wxStr1 = 'linsanxin885577' console.log(wxReg.test(wxStr1)) // true const wxStr2 = '厉害了我的vx' console.log(wxReg.test(wxStr2)) // false  ","date":"2022-03-20","objectID":"/20%E4%B8%AA%E5%B8%B8%E7%94%A8%E7%9A%84%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/:0:0","series":null,"tags":["JavaScript"],"title":"20个常用的正则表达式协议","uri":"/20%E4%B8%AA%E5%B8%B8%E7%94%A8%E7%9A%84%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/#14微信号的校验"},{"categories":["JavaScript"],"content":"15、车牌号的校验 const carNoReg = /^[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z]{1}[A-Z]{1}[A-Z0-9]{4}[A-Z0-9挂学警港澳]{1}$/ const carNoStr1 = '粤A12345' console.log(carNoReg.test(carNoStr1)) // true const carNoStr2 = '广东A12345' console.log(carNoReg.test(carNoStr2)) // false  ","date":"2022-03-20","objectID":"/20%E4%B8%AA%E5%B8%B8%E7%94%A8%E7%9A%84%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/:0:0","series":null,"tags":["JavaScript"],"title":"20个常用的正则表达式协议","uri":"/20%E4%B8%AA%E5%B8%B8%E7%94%A8%E7%9A%84%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/#15车牌号的校验"},{"categories":["JavaScript"],"content":"16、只含字母的字符串 const letterReg = /^[a-zA-Z]+$/ const letterStr1 = 'sunshineLin' console.log(letterReg.test(letterStr1)) // true const letterStr2 = 'sunshine_Lin' console.log(letterReg.test(letterStr2)) // false  ","date":"2022-03-20","objectID":"/20%E4%B8%AA%E5%B8%B8%E7%94%A8%E7%9A%84%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/:0:0","series":null,"tags":["JavaScript"],"title":"20个常用的正则表达式协议","uri":"/20%E4%B8%AA%E5%B8%B8%E7%94%A8%E7%9A%84%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/#16只含字母的字符串"},{"categories":["JavaScript"],"content":"17、包含中文的字符串 const cnReg = /[\\u4E00-\\u9FA5]/ const cnStr1 = '我是sunshine_Lin，林三心' console.log(cnReg.test(cnStr1)) // true const cnStr2 = 'sunshine_Lin' console.log(cnReg.test(cnStr2)) // false  ","date":"2022-03-20","objectID":"/20%E4%B8%AA%E5%B8%B8%E7%94%A8%E7%9A%84%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/:0:0","series":null,"tags":["JavaScript"],"title":"20个常用的正则表达式协议","uri":"/20%E4%B8%AA%E5%B8%B8%E7%94%A8%E7%9A%84%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/#17包含中文的字符串"},{"categories":["JavaScript"],"content":"18、密码强度的校验 说明：密码中必须包含字母、数字、特称字符，至少8个字符，最多30个字符 const passwordReg = /(?=.*[0-9])(?=.*[a-zA-Z])(?=.*[^a-zA-Z0-9]).{8,30}/ const password1 = 'sunshine_Lin12345..' console.log(passwordReg.test(password1)) // true const password2 = 'sunshineLin12345' console.log(passwordReg.test(password2)) // false  ","date":"2022-03-20","objectID":"/20%E4%B8%AA%E5%B8%B8%E7%94%A8%E7%9A%84%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/:0:0","series":null,"tags":["JavaScript"],"title":"20个常用的正则表达式协议","uri":"/20%E4%B8%AA%E5%B8%B8%E7%94%A8%E7%9A%84%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/#18密码强度的校验"},{"categories":["JavaScript"],"content":"19、字符串长度n的校验 function checkStrLength(n) { return new RegExp(`^.{${n}}$`) } // 校验长度为3的字符串 const lengthReg = checkStrLength(3) const str1 = 'hhh' console.log(lengthReg.test(str1)) // true const str2 = 'hhhhh' console.log(lengthReg.test(str2)) // false  ","date":"2022-03-20","objectID":"/20%E4%B8%AA%E5%B8%B8%E7%94%A8%E7%9A%84%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/:0:0","series":null,"tags":["JavaScript"],"title":"20个常用的正则表达式协议","uri":"/20%E4%B8%AA%E5%B8%B8%E7%94%A8%E7%9A%84%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/#19字符串长度n的校验"},{"categories":["JavaScript"],"content":"20、文件拓展名的校验 function checkFileName (arr) { arr = arr.map(name =\u003e `.${name}`).join('|') return new RegExp(`(${arr})$`) } const filenameReg = checkFileName(['jpg', 'png', 'txt']) const filename1 = 'sunshine.jpg' console.log(filenameReg.test(filename1)) // true const filename2 = 'sunshine.png' console.log(filenameReg.test(filename2)) // true const filename3 = 'sunshine.txt' console.log(filenameReg.test(filename3)) // true const filename4 = 'sunshine.md' console.log(filenameReg.test(filename4)) // false ","date":"2022-03-20","objectID":"/20%E4%B8%AA%E5%B8%B8%E7%94%A8%E7%9A%84%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/:0:0","series":null,"tags":["JavaScript"],"title":"20个常用的正则表达式协议","uri":"/20%E4%B8%AA%E5%B8%B8%E7%94%A8%E7%9A%84%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/#20文件拓展名的校验"},{"categories":["DoIt文档"],"content":"探索 Hugo - DoIt 主题的全部内容和背后的核心概念.","date":"2021-04-01","objectID":"/%E4%B8%BB%E9%A2%98%E6%96%87%E6%A1%A3%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/","series":null,"tags":["DoIt"],"title":"主题文档 - 基本概念","uri":"/%E4%B8%BB%E9%A2%98%E6%96%87%E6%A1%A3%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/"},{"categories":["DoIt文档"],"content":"探索 Hugo - DoIt 主题的全部内容和背后的核心概念. ","date":"2021-04-01","objectID":"/%E4%B8%BB%E9%A2%98%E6%96%87%E6%A1%A3%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/:0:0","series":null,"tags":["DoIt"],"title":"主题文档 - 基本概念","uri":"/%E4%B8%BB%E9%A2%98%E6%96%87%E6%A1%A3%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/#"},{"categories":["DoIt文档"],"content":"1 准备 由于 Hugo 提供的便利性, Hugo 本身是这个主题唯一的依赖. 直接安装满足你操作系统 (Windows, Linux, macOS) 的最新版本  Hugo (\u003e 0.83.0). 为什么不支持早期版本的 Hugo? 由于 WebP 图像处理 在 Hugo 0.83.0版本 中被引入, 本主题只支持高于 0.83.0 的 Hugo 版本. 推荐使用 Hugo extended 版本 由于这个主题的一些特性需要将  SCSS 转换为  CSS, 推荐使用 Hugo extended 版本来获得更好的使用体验. ","date":"2021-04-01","objectID":"/%E4%B8%BB%E9%A2%98%E6%96%87%E6%A1%A3%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/:1:0","series":null,"tags":["DoIt"],"title":"主题文档 - 基本概念","uri":"/%E4%B8%BB%E9%A2%98%E6%96%87%E6%A1%A3%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/#1-准备"},{"categories":["DoIt文档"],"content":"2 安装 以下步骤可帮助你初始化新网站. 如果你根本不了解 Hugo, 我们强烈建议你按照此 快速入门文档 进一步了解它. ","date":"2021-04-01","objectID":"/%E4%B8%BB%E9%A2%98%E6%96%87%E6%A1%A3%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/:2:0","series":null,"tags":["DoIt"],"title":"主题文档 - 基本概念","uri":"/%E4%B8%BB%E9%A2%98%E6%96%87%E6%A1%A3%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/#2-安装"},{"categories":["DoIt文档"],"content":"2.1 创建你的项目 Hugo 提供了一个 new 命令来创建一个新的网站: hugo new site my_website cd my_website ","date":"2021-04-01","objectID":"/%E4%B8%BB%E9%A2%98%E6%96%87%E6%A1%A3%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/:2:1","series":null,"tags":["DoIt"],"title":"主题文档 - 基本概念","uri":"/%E4%B8%BB%E9%A2%98%E6%96%87%E6%A1%A3%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/#21-创建你的项目"},{"categories":["DoIt文档"],"content":"2.2 安装主题 DoIt 主题的仓库是: https://github.com/HEIGE-PCloud/DoIt. 你可以下载主题的 最新版本  .zip 文件 并且解压放到 themes 目录. 另外, 也可以直接把这个主题克隆到 themes 目录: git clone https://github.com/HEIGE-PCloud/DoIt.git themes/DoIt 或者, 初始化你的项目目录为 git 仓库, 并且把主题仓库作为你的网站目录的子模块: git init git submodule add https://github.com/HEIGE-PCloud/DoIt.git themes/DoIt ","date":"2021-04-01","objectID":"/%E4%B8%BB%E9%A2%98%E6%96%87%E6%A1%A3%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/:2:2","series":null,"tags":["DoIt"],"title":"主题文档 - 基本概念","uri":"/%E4%B8%BB%E9%A2%98%E6%96%87%E6%A1%A3%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/#22-安装主题"},{"categories":["DoIt文档"],"content":"2.3 基础配置 以下是 DoIt 主题的基本配置: baseURL = \"http://example.org/\" # [en, zh-cn, fr, ...] 设置默认的语言 defaultContentLanguage = \"zh-cn\" # 网站语言, 仅在这里 CN 大写 languageCode = \"zh-CN\" # 是否包括中日韩文字 hasCJKLanguage = true # 网站标题 title = \"我的全新 Hugo 网站\" # 更改使用 Hugo 构建网站时使用的默认主题 theme = \"DoIt\" [params] # DoIt 主题版本 version = \"0.2.X\" [menu] [[menu.main]] identifier = \"posts\" # 你可以在名称 (允许 HTML 格式) 之前添加其他信息, 例如图标 pre = \"\" # 你可以在名称 (允许 HTML 格式) 之后添加其他信息, 例如图标 post = \"\" name = \"文章\" url = \"/posts/\" # 当你将鼠标悬停在此菜单链接上时, 将显示的标题 title = \"\" weight = 1 [[menu.main]] identifier = \"tags\" pre = \"\" post = \"\" name = \"标签\" url = \"/tags/\" title = \"\" weight = 2 [[menu.main]] identifier = \"categories\" pre = \"\" post = \"\" name = \"分类\" url = \"/categories/\" title = \"\" weight = 3 # Hugo 解析文档的配置 [markup] # 语法高亮设置 (https://gohugo.io/content-management/syntax-highlighting) [markup.highlight] # false 是必要的设置 (https://github.com/dillonzq/LoveIt/issues/158) noClasses = false 注意 在构建网站时, 你可以使用 --theme 选项设置主题. 但是, 我建议你修改配置文件 (config.toml) 将本主题设置为默认主题. ","date":"2021-04-01","objectID":"/%E4%B8%BB%E9%A2%98%E6%96%87%E6%A1%A3%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/:2:3","series":null,"tags":["DoIt"],"title":"主题文档 - 基本概念","uri":"/%E4%B8%BB%E9%A2%98%E6%96%87%E6%A1%A3%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/#basic-configuration"},{"categories":["DoIt文档"],"content":"2.4 创建你的第一篇文章 以下是创建第一篇文章的方法: hugo new posts/first_post.md 通过添加一些示例内容并替换文件开头的标题, 你可以随意编辑文章. 注意 默认情况下, 所有文章和页面均作为草稿创建. 如果想要渲染这些页面, 请从元数据中删除属性 draft: true, 设置属性 draft: false 或者为 hugo 命令添加 -D/--buildDrafts 参数. ","date":"2021-04-01","objectID":"/%E4%B8%BB%E9%A2%98%E6%96%87%E6%A1%A3%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/:2:4","series":null,"tags":["DoIt"],"title":"主题文档 - 基本概念","uri":"/%E4%B8%BB%E9%A2%98%E6%96%87%E6%A1%A3%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/#24-创建你的第一篇文章"},{"categories":["DoIt文档"],"content":"2.5 在本地启动网站 使用以下命令启动网站: hugo serve 去查看 http://localhost:1313. 基本配置下的预览\" 基本配置下的预览 技巧 当你运行 hugo serve 时, 当文件内容更改时, 页面会随着更改自动刷新. 注意 由于本主题使用了 Hugo 中的 .Scratch 来实现一些特性, 非常建议你为 hugo server 命令添加 --disableFastRender 参数来实时预览你正在编辑的文章页面. hugo serve --disableFastRender ","date":"2021-04-01","objectID":"/%E4%B8%BB%E9%A2%98%E6%96%87%E6%A1%A3%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/:2:5","series":null,"tags":["DoIt"],"title":"主题文档 - 基本概念","uri":"/%E4%B8%BB%E9%A2%98%E6%96%87%E6%A1%A3%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/#25-在本地启动网站"},{"categories":["DoIt文档"],"content":"2.6 构建网站 当你准备好部署你的网站时, 运行以下命令: hugo 会生成一个 public 目录, 其中包含你网站的所有静态内容和资源. 现在可以将其部署在任何 Web 服务器上. 技巧 网站内容可以通过 Netlify 自动发布和托管 (了解有关通过 Netlify 进行 HUGO 自动化部署 的更多信息). 或者, 您可以使用 AWS Amplify, Github pages, Render 以及更多… ","date":"2021-04-01","objectID":"/%E4%B8%BB%E9%A2%98%E6%96%87%E6%A1%A3%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/:2:6","series":null,"tags":["DoIt"],"title":"主题文档 - 基本概念","uri":"/%E4%B8%BB%E9%A2%98%E6%96%87%E6%A1%A3%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/#26-构建网站"},{"categories":["DoIt文档"],"content":"3 配置 ","date":"2021-04-01","objectID":"/%E4%B8%BB%E9%A2%98%E6%96%87%E6%A1%A3%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/:3:0","series":null,"tags":["DoIt"],"title":"主题文档 - 基本概念","uri":"/%E4%B8%BB%E9%A2%98%E6%96%87%E6%A1%A3%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/#3-配置"},{"categories":["DoIt文档"],"content":"3.1 网站配置 除了 Hugo 全局配置 和 菜单配置 之外, DoIt 主题还允许您在网站配置中定义以下参数 (这是一个示例 config.toml, 其内容为默认值). 请打开下面的代码块查看完整的示例配置 : [params] # DoIt 主题版本 version = \"0.2.X\" # 网站名称 title = \"我的全新 Hugo 网站\" # 网站描述 description = \"这是我的全新 Hugo 网站\" # 网站关键词 keywords = [\"Theme\", \"Hugo\"] # 网站默认主题样式 (\"light\", \"dark\", \"black\", \"auto\") defaultTheme = \"auto\" # 公共 git 仓库路径, 仅在 enableGitInfo 设为 true 时有效 gitRepo = \"\" # 哪种哈希函数用来 SRI, 为空时表示不使用 SRI # (\"sha256\", \"sha384\", \"sha512\", \"md5\") fingerprint = \"\" # 日期格式 dateFormat = \"2006-01-02\" # 网站图片, 用于 Open Graph 和 Twitter Cards images = [\"/logo.png\"] # 开启PWA支持 enablePWA = false # 应用图标配置 [params.app] # 当添加到 iOS 主屏幕或者 Android 启动器时的标题, 覆盖默认标题 title = \"DoIt\" # 是否隐藏网站图标资源链接 noFavicon = false # 更现代的 SVG 网站图标, 可替代旧的 .png 和 .ico 文件 svgFavicon = \"\" # Safari 图标颜色 iconColor = \"#5bbad5\" # Windows v8-10磁贴颜色 tileColor = \"#da532c\" # 搜索配置 [params.search] enable = true # 搜索引擎的类型 (\"lunr\", \"algolia\", \"fuse\") type = \"fuse\" # 文章内容最长索引长度 contentLength = 4000 # 搜索框的占位提示语 placeholder = \"\" # 最大结果数目 maxResultLength = 10 # 结果内容片段长度 snippetLength = 50 # 搜索结果中高亮部分的 HTML 标签 highlightTag = \"em\" # 是否在搜索索引中使用基于 baseURL 的绝对路径 absoluteURL = false [params.search.algolia] index = \"\" appID = \"\" searchKey = \"\" [params.search.fuse] # https://fusejs.io/api/options.html isCaseSensitive = false minMatchCharLength = 2 findAllMatches = false location = 0 threshold = 0.3 distance = 100 ignoreLocation = false useExtendedSearch = false ignoreFieldNorm = false # 页面头部导航栏配置 [params.header] # 桌面端导航栏模式 (\"fixed\", \"normal\", \"auto\") desktopMode = \"fixed\" # 移动端导航栏模式 (\"fixed\", \"normal\", \"auto\") mobileMode = \"auto\" # 主题切换模式 # 主题切换模式 (\"switch\", \"select\") themeChangeMode = \"select\" # 页面头部导航栏标题配置 [params.header.title] # LOGO 的 URL logo = \"\" # 标题名称 name = \"\" # 你可以在名称 (允许 HTML 格式) 之前添加其他信息, 例如图标 pre = \"\" # 你可以在名称 (允许 HTML 格式) 之后添加其他信息, 例如图标 post = \"\" # 是否为标题显示打字机动画 typeit = false # 页面底部信息配置 [params.footer] enable = true # 自定义内容 (支持 HTML 格式) custom = '' # 是否显示 Hugo 和主题信息 hugo = true # 是否显示版权信息 copyright = true # 是否显示作者 author = true # 网站创立年份 since = 2019 # ICP 备案信息, 仅在中国使用 (支持 HTML 格式) icp = \"\" # 许可协议信息 (支持 HTML 格式) license = '\u003ca rel=\"license external nofollow noopener noreffer\" href=\"https://creativecommons.org/licenses/by-nc/4.0/\" target=\"_blank\"\u003eCC BY-NC 4.0\u003c/a\u003e' # Section (所有文章) 页面配置 [params.section] # section 页面每页显示文章数量 paginate = 20 # 日期格式 (月和日) dateFormat = \"01-02\" # RSS 文章数目 rss = 10 # 最近更新文章设置 [params.section.recentlyUpdated] enable = false rss = false days = 30 maxCount = 10 # List (目录或标签) 页面配置 [params.list] # list 页面每页显示文章数量 paginate = 20 # 日期格式 (月和日) dateFormat = \"01-02\" # RSS 文章数目 rss = 10 # 主页配置 [params.home] # RSS 文章数目 rss = 10 # 主页个人信息 [params.home.profile] enable = true # Gravatar 邮箱, 用于优先在主页显示的头像 gravatarEmail = \"\" # 主页显示头像的 URL # 将你的头像文件放置于 static 或者 assets 目录下 # 文件路径是相对于 static 或者 assets 目录的 avatarURL = \"/images/avatar.webp\" # 主页显示的网站标题 (支持 HTML 格式) title = \"\" # 主页显示的网站副标题 subtitle = \"这是我的全新 Hugo 网站\" # 是否为副标题显示打字机动画 typeit = true # 是否显示社交账号 social = true # 免责声明 (支持 HTML 格式) disclaimer = \"\" # 主页文章列表 [params.home.posts] enable = true # 主页每页显示文章数量 paginate = 6 # 被 params.page 中的 hiddenFromHomePage 替代 # 当你没有在文章前置参数中设置 \"hiddenFromHomePage\" 时的默认行为 defaultHiddenFromHomePage = false # 作者的社交信息设置 [params.social] GitHub = \"xxxx\" Linkedin = \"\" Twitter = \"xxxx\" Instagram = \"xxxx\" Facebook = \"xxxx\" Telegram = \"xxxx\" Medium = \"\" Gitlab = \"\" Youtubelegacy = \"\" Youtubecustom = \"\" Youtubechannel = \"\" Tumblr = \"\" Quora = \"\" Keybase = \"\" Pinterest = \"\" Reddit = \"\" Codepen = \"\" FreeCodeCamp = \"\" Bitbucket = \"\" Stackoverflow = \"\" Weibo = \"\" Odnoklassniki = \"\" VK = \"\" Flickr = \"\" Xing = \"\" Snapchat = \"\" Soundcloud = \"\" Spotify = \"\" Bandcamp = \"\" Paypal = \"\" Fivehundredpx = \"\" Mix = \"\" Goodreads = \"\" Lastfm = \"\" Foursquare = \"\" Hackernews = \"\" Kickstarter = \"\" Patreon = \"\" Steam = \"\" Twitch = \"\" Strava = \"\" Skype = \"\" Whatsapp = \"\" Zhihu = \"\" Douban = \"\" Angellist = \"\" Slidershare = \"\" Jsfiddle = \"\" Deviantart = \"\" Behance = \"\" Dribbble = \"\" Wordpress = \"\" Vine = \"\" Googlescholar = \"\" Research","date":"2021-04-01","objectID":"/%E4%B8%BB%E9%A2%98%E6%96%87%E6%A1%A3%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/:3:1","series":null,"tags":["DoIt"],"title":"主题文档 - 基本概念","uri":"/%E4%B8%BB%E9%A2%98%E6%96%87%E6%A1%A3%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/#site-configuration"},{"categories":["DoIt文档"],"content":"3.2 网站图标, 浏览器配置, 网站清单 强烈建议你把: apple-touch-icon.png (180x180) favicon-32x32.png (32x32) favicon-16x16.png (16x16) mstile-150x150.png (150x150) android-chrome-192x192.png (192x192) android-chrome-512x512.png (512x512) 放在 /static 目录. 利用 https://realfavicongenerator.net/ 可以很容易地生成这些文件. 可以自定义 browserconfig.xml 和 site.webmanifest 文件来设置 theme-color 和 background-color. ","date":"2021-04-01","objectID":"/%E4%B8%BB%E9%A2%98%E6%96%87%E6%A1%A3%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/:3:2","series":null,"tags":["DoIt"],"title":"主题文档 - 基本概念","uri":"/%E4%B8%BB%E9%A2%98%E6%96%87%E6%A1%A3%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/#32-网站图标-浏览器配置-网站清单"},{"categories":["DoIt文档"],"content":"3.3 自定义样式 注意 Hugo extended 版本对于自定义样式是必需的. 通过定义自定义 .scss 样式文件, DoIt 主题支持可配置的样式. 包含自定义 .scss 样式文件的目录相对于 你的项目根目录 的路径为 assets/css. 在 assets/css/_override.scss 中, 你可以覆盖 themes/DoIt/assets/css/_variables.scss 中的变量以自定义样式. 这是一个例子: @import url('https://fonts.googleapis.com/css?family=Fira+Mono:400,700\u0026display=swap\u0026subset=latin-ext'); $code-font-family: Fira Mono, Source Code Pro, Menlo, Consolas, Monaco, monospace; 在 assets/css/_custom.scss 中, 你可以添加一些 CSS 样式代码以自定义样式. ","date":"2021-04-01","objectID":"/%E4%B8%BB%E9%A2%98%E6%96%87%E6%A1%A3%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/:3:3","series":null,"tags":["DoIt"],"title":"主题文档 - 基本概念","uri":"/%E4%B8%BB%E9%A2%98%E6%96%87%E6%A1%A3%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/#33-自定义样式"},{"categories":["DoIt文档"],"content":"4 多语言和 i18n DoIt 主题完全兼容 Hugo 的多语言模式, 并且支持在网页上切换语言. 语言切换\" 语言切换 ","date":"2021-04-01","objectID":"/%E4%B8%BB%E9%A2%98%E6%96%87%E6%A1%A3%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/:4:0","series":null,"tags":["DoIt"],"title":"主题文档 - 基本概念","uri":"/%E4%B8%BB%E9%A2%98%E6%96%87%E6%A1%A3%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/#4-多语言和-i18n"},{"categories":["DoIt文档"],"content":"4.1 兼容性 语言 Hugo 代码 HTML lang 属性 主题文档 Lunr.js 支持 英语 en en 简体中文 zh-cn zh-CN 法语 fr fr 波兰语 pl pl 巴西葡萄牙语 pt-br pt-BR 意大利语 it it 西班牙语 es es 德语 de de 塞尔维亚语 pl pl 俄语 ru ru 罗马尼亚语 ro ro 越南语 vi vi ","date":"2021-04-01","objectID":"/%E4%B8%BB%E9%A2%98%E6%96%87%E6%A1%A3%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/:4:1","series":null,"tags":["DoIt"],"title":"主题文档 - 基本概念","uri":"/%E4%B8%BB%E9%A2%98%E6%96%87%E6%A1%A3%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/#language-compatibility"},{"categories":["DoIt文档"],"content":"4.2 基本配置 学习了 Hugo如何处理多语言网站 之后, 请在 站点配置 中定义你的网站语言. 例如, 一个支持英语, 中文和法语的网站配置: # [en, zh-cn, fr, pl, ...] 设置默认的语言 defaultContentLanguage = \"zh-cn\" [languages] [languages.en] weight = 1 title = \"My New Hugo Site\" languageCode = \"en\" languageName = \"English\" [[languages.en.menu.main]] identifier = \"posts\" pre = \"\" post = \"\" name = \"Posts\" url = \"/posts/\" title = \"\" weight = 1 [[languages.en.menu.main]] identifier = \"tags\" pre = \"\" post = \"\" name = \"Tags\" url = \"/tags/\" title = \"\" weight = 2 [[languages.en.menu.main]] identifier = \"categories\" pre = \"\" post = \"\" name = \"Categories\" url = \"/categories/\" title = \"\" weight = 3 [languages.zh-cn] weight = 2 title = \"我的全新 Hugo 网站\" # 网站语言, 仅在这里 CN 大写 languageCode = \"zh-CN\" languageName = \"简体中文\" # 是否包括中日韩文字 hasCJKLanguage = true [[languages.zh-cn.menu.main]] identifier = \"posts\" pre = \"\" post = \"\" name = \"文章\" url = \"/posts/\" title = \"\" weight = 1 [[languages.zh-cn.menu.main]] identifier = \"tags\" pre = \"\" post = \"\" name = \"标签\" url = \"/tags/\" title = \"\" weight = 2 [[languages.zh-cn.menu.main]] identifier = \"categories\" pre = \"\" post = \"\" name = \"分类\" url = \"/categories/\" title = \"\" weight = 3 然后, 对于每个新页面, 将语言代码附加到文件名中. 单个文件 my-page.md 需要分为两个文件: 英语: my-page.en.md 中文: my-page.zh-cn.md 注意 请注意, 菜单中仅显示翻译的页面. 它不会替换为默认语言内容. 技巧 也可以使用 文章前置参数 来翻译网址. ","date":"2021-04-01","objectID":"/%E4%B8%BB%E9%A2%98%E6%96%87%E6%A1%A3%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/:4:2","series":null,"tags":["DoIt"],"title":"主题文档 - 基本概念","uri":"/%E4%B8%BB%E9%A2%98%E6%96%87%E6%A1%A3%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/#42-基本配置"},{"categories":["DoIt文档"],"content":"4.3 修改默认的翻译字符串 翻译字符串用于在主题中使用的常见默认值. 目前提供一些语言的翻译, 但你可能自定义其他语言或覆盖默认值. 要覆盖默认值, 请在你项目的 i18n 目录 i18n/\u003clanguageCode\u003e.toml 中创建一个新文件, 并从 themes/DoIt/i18n/en.toml 中获得提示. 另外, 由于你的翻译可能会帮助到其他人, 请花点时间通过  创建一个 PR 来贡献主题翻译, 谢谢! ","date":"2021-04-01","objectID":"/%E4%B8%BB%E9%A2%98%E6%96%87%E6%A1%A3%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/:4:3","series":null,"tags":["DoIt"],"title":"主题文档 - 基本概念","uri":"/%E4%B8%BB%E9%A2%98%E6%96%87%E6%A1%A3%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/#43-修改默认的翻译字符串"},{"categories":["DoIt文档"],"content":"5 搜索 基于 Lunr.js 或 algolia, DoIt 主题支持搜索功能. ","date":"2021-04-01","objectID":"/%E4%B8%BB%E9%A2%98%E6%96%87%E6%A1%A3%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/:5:0","series":null,"tags":["DoIt"],"title":"主题文档 - 基本概念","uri":"/%E4%B8%BB%E9%A2%98%E6%96%87%E6%A1%A3%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/#5-搜索"},{"categories":["DoIt文档"],"content":"5.1 输出配置 为了生成搜索功能所需要的 index.json, 请在你的 网站配置 中添加 JSON 输出文件类型到 outputs 部分的 home 字段中. [outputs] home = [\"HTML\", \"RSS\", \"JSON\"] ","date":"2021-04-01","objectID":"/%E4%B8%BB%E9%A2%98%E6%96%87%E6%A1%A3%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/:5:1","series":null,"tags":["DoIt"],"title":"主题文档 - 基本概念","uri":"/%E4%B8%BB%E9%A2%98%E6%96%87%E6%A1%A3%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/#51-输出配置"},{"categories":["DoIt文档"],"content":"5.2 搜索配置 基于 Hugo 生成的 index.json 文件, 你可以激活搜索功能. 这是你的 网站配置 中的搜索部分: [params.search] enable = true # 搜索引擎的类型 (\"lunr\", \"algolia\", \"fuse\") type = \"fuse\" # 文章内容最长索引长度 contentLength = 4000 # 搜索框的占位提示语 placeholder = \"\" # 最大结果数目 maxResultLength = 10 # 结果内容片段长度 snippetLength = 50 # 搜索结果中高亮部分的 HTML 标签 highlightTag = \"em\" # 是否在搜索索引中使用基于 baseURL 的绝对路径 absoluteURL = false [params.search.algolia] index = \"\" appID = \"\" searchKey = \"\" [params.search.fuse] # https://fusejs.io/api/options.html isCaseSensitive = false minMatchCharLength = 2 findAllMatches = false location = 0 threshold = 0.3 distance = 100 ignoreLocation = false useExtendedSearch = false ignoreFieldNorm = false 怎样选择搜索引擎? 以下是两种搜索引擎的对比: fuse: 简单, 无需同步 index.json, 没有 contentLength 的限制, 性能高 lunr: 简单, 无需同步 index.json, 没有 contentLength 的限制, 但占用带宽大且性能低 (特别是中文需要一个较大的分词依赖库) algolia: 高性能并且占用带宽低, 但需要同步 index.json 且有 contentLength 的限制 \u003cimg class=“lazyload version” data-src=\"/svg/version/0.2.3-new.min.svg\" data-srcset=\"/svg/version/0.2.3-new.min.svg, /svg/version/0.2.3-new.min.svg 1.5x, /svg/version/0.2.3-new.min.svg 2x\" data-sizes=“auto” alt=“DoIt 新增 | 0.2.3” title=“DoIt 新增 | 0.2.3” /\u003e 文章内容被 h2 和 h3 HTML 标签切分来提高查询效果并且基本实现全文搜索. contentLength 用来限制 h2 和 h3 HTML 标签开头的内容部分的最大长度. 关于 algolia 的使用技巧 你需要上传 index.json 到 algolia 来激活搜索功能. 你可以使用浏览器来上传 index.json 文件但是一个自动化的脚本可能效果更好. Algolia Atomic 是一个不错的选择. 为了兼容 Hugo 的多语言模式, 你需要上传不同语言的 index.json 文件到对应的 algolia index, 例如 zh-cn/index.json 或 fr/index.json… ","date":"2021-04-01","objectID":"/%E4%B8%BB%E9%A2%98%E6%96%87%E6%A1%A3%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/:5:2","series":null,"tags":["DoIt"],"title":"主题文档 - 基本概念","uri":"/%E4%B8%BB%E9%A2%98%E6%96%87%E6%A1%A3%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/#52-搜索配置"},{"categories":["DoIt文档"],"content":"Hugo 和 DoIt 中的 Emoji 的用法指南.","date":"2021-04-01","objectID":"/emoji%E6%94%AF%E6%8C%81/","series":null,"tags":["DoIt"],"title":"Emoji 支持","uri":"/emoji%E6%94%AF%E6%8C%81/"},{"categories":["DoIt文档"],"content":"Emoji 可以通过多种方式在 Hugo 项目中启用. emojify 方法可以直接在模板中调用, 或者使用行内 Shortcodes. 要全局使用 emoji, 需要在你的网站配置中设置 enableEmoji 为 true, 然后你就可以直接在文章中输入 emoji 的代码. 它们以冒号开头和结尾, 并且包含 emoji 的 代码: 去露营啦! :tent: 很快就回来. 真开心! :joy: 呈现的输出效果如下: 去露营啦! ⛺ 很快就回来. 真开心! 😂 以下符号清单是 emoji 代码的非常有用的参考. ","date":"2021-04-01","objectID":"/emoji%E6%94%AF%E6%8C%81/:0:0","series":null,"tags":["DoIt"],"title":"Emoji 支持","uri":"/emoji%E6%94%AF%E6%8C%81/#"},{"categories":["DoIt文档"],"content":"表情与情感 ","date":"2021-04-01","objectID":"/emoji%E6%94%AF%E6%8C%81/:1:0","series":null,"tags":["DoIt"],"title":"Emoji 支持","uri":"/emoji%E6%94%AF%E6%8C%81/#表情与情感"},{"categories":["DoIt文档"],"content":"笑脸表情 图标 代码 图标 代码 😀 grinning 😃 smiley 😄 smile 😁 grin 😆 laughing satisfied 😅 sweat_smile 🤣 rofl 😂 joy 🙂 slightly_smiling_face 🙃 upside_down_face 😉 wink 😊 blush 😇 innocent ","date":"2021-04-01","objectID":"/emoji%E6%94%AF%E6%8C%81/:1:1","series":null,"tags":["DoIt"],"title":"Emoji 支持","uri":"/emoji%E6%94%AF%E6%8C%81/#笑脸表情"},{"categories":["DoIt文档"],"content":"爱意表情 图标 代码 图标 代码 😍 heart_eyes 😘 kissing_heart 😗 kissing ☺️ relaxed 😚 kissing_closed_eyes 😙 kissing_smiling_eyes ","date":"2021-04-01","objectID":"/emoji%E6%94%AF%E6%8C%81/:1:2","series":null,"tags":["DoIt"],"title":"Emoji 支持","uri":"/emoji%E6%94%AF%E6%8C%81/#爱意表情"},{"categories":["DoIt文档"],"content":"吐舌头表情 图标 代码 图标 代码 😋 yum 😛 stuck_out_tongue 😜 stuck_out_tongue_winking_eye 😝 stuck_out_tongue_closed_eyes 🤑 money_mouth_face ","date":"2021-04-01","objectID":"/emoji%E6%94%AF%E6%8C%81/:1:3","series":null,"tags":["DoIt"],"title":"Emoji 支持","uri":"/emoji%E6%94%AF%E6%8C%81/#吐舌头表情"},{"categories":["DoIt文档"],"content":"带手的表情 图标 代码 图标 代码 🤗 hugs 🤔 thinking ","date":"2021-04-01","objectID":"/emoji%E6%94%AF%E6%8C%81/:1:4","series":null,"tags":["DoIt"],"title":"Emoji 支持","uri":"/emoji%E6%94%AF%E6%8C%81/#带手的表情"},{"categories":["DoIt文档"],"content":"中性表情 图标 代码 图标 代码 🤐 zipper_mouth_face 😐 neutral_face 😑 expressionless 😶 no_mouth 😏 smirk 😒 unamused 🙄 roll_eyes 😬 grimacing 🤥 lying_face ","date":"2021-04-01","objectID":"/emoji%E6%94%AF%E6%8C%81/:1:5","series":null,"tags":["DoIt"],"title":"Emoji 支持","uri":"/emoji%E6%94%AF%E6%8C%81/#中性表情"},{"categories":["DoIt文档"],"content":"困倦的表情 图标 代码 图标 代码 😌 relieved 😔 pensive 😪 sleepy 🤤 drooling_face 😴 sleeping ","date":"2021-04-01","objectID":"/emoji%E6%94%AF%E6%8C%81/:1:6","series":null,"tags":["DoIt"],"title":"Emoji 支持","uri":"/emoji%E6%94%AF%E6%8C%81/#困倦的表情"},{"categories":["DoIt文档"],"content":"不适的表情 图标 代码 图标 代码 😷 mask 🤒 face_with_thermometer 🤕 face_with_head_bandage 🤢 nauseated_face 🤧 sneezing_face 😵 dizzy_face ","date":"2021-04-01","objectID":"/emoji%E6%94%AF%E6%8C%81/:1:7","series":null,"tags":["DoIt"],"title":"Emoji 支持","uri":"/emoji%E6%94%AF%E6%8C%81/#不适的表情"},{"categories":["DoIt文档"],"content":"戴帽子的表情 图标 代码 图标 代码 🤠 cowboy_hat_face ","date":"2021-04-01","objectID":"/emoji%E6%94%AF%E6%8C%81/:1:8","series":null,"tags":["DoIt"],"title":"Emoji 支持","uri":"/emoji%E6%94%AF%E6%8C%81/#戴帽子的表情"},{"categories":["DoIt文档"],"content":"戴眼镜的表情 图标 代码 图标 代码 😎 sunglasses 🤓 nerd_face ","date":"2021-04-01","objectID":"/emoji%E6%94%AF%E6%8C%81/:1:9","series":null,"tags":["DoIt"],"title":"Emoji 支持","uri":"/emoji%E6%94%AF%E6%8C%81/#戴眼镜的表情"},{"categories":["DoIt文档"],"content":"担心的表情 图标 代码 图标 代码 😕 confused 😟 worried 🙁 slightly_frowning_face ☹ frowning_face 😮 open_mouth 😯 hushed 😲 astonished 😳 flushed 😦 frowning 😧 anguished 😨 fearful 😰 cold_sweat 😥 disappointed_relieved 😢 cry 😭 sob 😱 scream 😖 confounded 😣 persevere 😞 disappointed 😓 sweat 😩 weary 😫 tired_face ","date":"2021-04-01","objectID":"/emoji%E6%94%AF%E6%8C%81/:1:10","series":null,"tags":["DoIt"],"title":"Emoji 支持","uri":"/emoji%E6%94%AF%E6%8C%81/#担心的表情"},{"categories":["DoIt文档"],"content":"否定的表情 图标 代码 图标 代码 😤 triumph 😡 pout rage 😠 angry 😈 smiling_imp 👿 imp 💀 skull ☠️ skull_and_crossbones ","date":"2021-04-01","objectID":"/emoji%E6%94%AF%E6%8C%81/:1:11","series":null,"tags":["DoIt"],"title":"Emoji 支持","uri":"/emoji%E6%94%AF%E6%8C%81/#否定的表情"},{"categories":["DoIt文档"],"content":"特殊打扮的表情 图标 代码 图标 代码 💩 hankey poop shit 🤡 clown_face 👹 japanese_ogre 👺 japanese_goblin 👻 ghost 👽 alien 👾 space_invader 🤖 robot ","date":"2021-04-01","objectID":"/emoji%E6%94%AF%E6%8C%81/:1:12","series":null,"tags":["DoIt"],"title":"Emoji 支持","uri":"/emoji%E6%94%AF%E6%8C%81/#特殊打扮的表情"},{"categories":["DoIt文档"],"content":"猫脸表情 图标 代码 图标 代码 😺 smiley_cat 😸 smile_cat 😹 joy_cat 😻 heart_eyes_cat 😼 smirk_cat 😽 kissing_cat 🙀 scream_cat 😿 crying_cat_face 😾 pouting_cat ","date":"2021-04-01","objectID":"/emoji%E6%94%AF%E6%8C%81/:1:13","series":null,"tags":["DoIt"],"title":"Emoji 支持","uri":"/emoji%E6%94%AF%E6%8C%81/#猫脸表情"},{"categories":["DoIt文档"],"content":"猴脸表情 图标 代码 图标 代码 🙈 see_no_evil 🙉 hear_no_evil 🙊 speak_no_evil ","date":"2021-04-01","objectID":"/emoji%E6%94%AF%E6%8C%81/:1:14","series":null,"tags":["DoIt"],"title":"Emoji 支持","uri":"/emoji%E6%94%AF%E6%8C%81/#猴脸表情"},{"categories":["DoIt文档"],"content":"情感 图标 代码 图标 代码 💋 kiss 💌 love_letter 💘 cupid 💝 gift_heart 💖 sparkling_heart 💗 heartpulse 💓 heartbeat 💞 revolving_hearts 💕 two_hearts 💟 heart_decoration ❣️ heavy_heart_exclamation 💔 broken_heart ❤️ heart 💛 yellow_heart 💚 green_heart 💙 blue_heart 💜 purple_heart 🖤 black_heart 💯 100 💢 anger 💥 boom collision 💫 dizzy 💦 sweat_drops 💨 dash 🕳️ hole 💣 bomb 💬 speech_balloon 👁️‍🗨️ eye_speech_bubble 🗯️ right_anger_bubble 💭 thought_balloon 💤 zzz ","date":"2021-04-01","objectID":"/emoji%E6%94%AF%E6%8C%81/:1:15","series":null,"tags":["DoIt"],"title":"Emoji 支持","uri":"/emoji%E6%94%AF%E6%8C%81/#情感"},{"categories":["DoIt文档"],"content":"人与身体 ","date":"2021-04-01","objectID":"/emoji%E6%94%AF%E6%8C%81/:2:0","series":null,"tags":["DoIt"],"title":"Emoji 支持","uri":"/emoji%E6%94%AF%E6%8C%81/#人与身体"},{"categories":["DoIt文档"],"content":"张开手掌的手势 图标 代码 图标 代码 👋 wave 🤚 raised_back_of_hand 🖐️ raised_hand_with_fingers_splayed ✋ hand raised_hand 🖖 vulcan_salute ","date":"2021-04-01","objectID":"/emoji%E6%94%AF%E6%8C%81/:2:1","series":null,"tags":["DoIt"],"title":"Emoji 支持","uri":"/emoji%E6%94%AF%E6%8C%81/#张开手掌的手势"},{"categories":["DoIt文档"],"content":"部分手指的手势 图标 代码 图标 代码 👌 ok_hand ✌️ v 🤞 crossed_fingers 🤘 metal 🤙 call_me_hand ","date":"2021-04-01","objectID":"/emoji%E6%94%AF%E6%8C%81/:2:2","series":null,"tags":["DoIt"],"title":"Emoji 支持","uri":"/emoji%E6%94%AF%E6%8C%81/#部分手指的手势"},{"categories":["DoIt文档"],"content":"一根手指的手势 图标 代码 图标 代码 👈 point_left 👉 point_right 👆 point_up_2 🖕 fu middle_finger 👇 point_down ☝️ point_up ","date":"2021-04-01","objectID":"/emoji%E6%94%AF%E6%8C%81/:2:3","series":null,"tags":["DoIt"],"title":"Emoji 支持","uri":"/emoji%E6%94%AF%E6%8C%81/#一根手指的手势"},{"categories":["DoIt文档"],"content":"握紧的手势 图标 代码 图标 代码 👍 +1 thumbsup 👎 -1 thumbsdown ✊ fist fist_raised 👊 facepunch fist_oncoming punch 🤛 fist_left 🤜 fist_right ","date":"2021-04-01","objectID":"/emoji%E6%94%AF%E6%8C%81/:2:4","series":null,"tags":["DoIt"],"title":"Emoji 支持","uri":"/emoji%E6%94%AF%E6%8C%81/#握紧的手势"},{"categories":["DoIt文档"],"content":"两只手 图标 代码 图标 代码 👏 clap 🙌 raised_hands 👐 open_hands 🤝 handshake 🙏 pray ","date":"2021-04-01","objectID":"/emoji%E6%94%AF%E6%8C%81/:2:5","series":null,"tags":["DoIt"],"title":"Emoji 支持","uri":"/emoji%E6%94%AF%E6%8C%81/#两只手"},{"categories":["DoIt文档"],"content":"握住东西的手势 图标 代码 图标 代码 ✍️ writing_hand 💅 nail_care 🤳 selfie ","date":"2021-04-01","objectID":"/emoji%E6%94%AF%E6%8C%81/:2:6","series":null,"tags":["DoIt"],"title":"Emoji 支持","uri":"/emoji%E6%94%AF%E6%8C%81/#握住东西的手势"},{"categories":["DoIt文档"],"content":"身体部位 图标 代码 图标 代码 💪 muscle 👂 ear 👃 nose 👀 eyes 👁️ eye 👅 tongue 👄 lips ","date":"2021-04-01","objectID":"/emoji%E6%94%AF%E6%8C%81/:2:7","series":null,"tags":["DoIt"],"title":"Emoji 支持","uri":"/emoji%E6%94%AF%E6%8C%81/#身体部位"},{"categories":["DoIt文档"],"content":"人 图标 代码 图标 代码 👶 baby 👦 boy 👧 girl :blonde_man: blonde_man person_with_blond_hair 👨 man 👩 woman 👱‍♀️ blonde_woman 👴 older_man 👵 older_woman ","date":"2021-04-01","objectID":"/emoji%E6%94%AF%E6%8C%81/:2:8","series":null,"tags":["DoIt"],"title":"Emoji 支持","uri":"/emoji%E6%94%AF%E6%8C%81/#人"},{"categories":["DoIt文档"],"content":"身体动作 图标 代码 图标 代码 🙍‍♀️ frowning_woman person_frowning 🙍‍♂️ frowning_man 🙎‍♀️ person_with_pouting_face pouting_woman 🙎‍♂️ pouting_man 🙅‍♀️ ng_woman no_good no_good_woman 🙅‍♂️ ng_man no_good_man 🙆‍♀️ ok_woman 🙆‍♂️ ok_man 💁‍♀️ information_desk_person sassy_woman tipping_hand_woman 💁‍♂️ sassy_man tipping_hand_man 🙋‍♀️ raising_hand raising_hand_woman 🙋‍♂️ raising_hand_man 🙇‍♂️ bow bowing_man 🙇‍♀️ bowing_woman 🤦‍♂️ man_facepalming 🤦‍♀️ woman_facepalming 🤷‍♂️ man_shrugging 🤷‍♀️ woman_shrugging ","date":"2021-04-01","objectID":"/emoji%E6%94%AF%E6%8C%81/:2:9","series":null,"tags":["DoIt"],"title":"Emoji 支持","uri":"/emoji%E6%94%AF%E6%8C%81/#身体动作"},{"categories":["DoIt文档"],"content":"人物角色 图标 代码 图标 代码 👨‍⚕️ man_health_worker 👩‍⚕️ woman_health_worker 👨‍🎓 man_student 👩‍🎓 woman_student 👨‍🏫 man_teacher 👩‍🏫 woman_teacher 👨‍⚖️ man_judge 👩‍⚖️ woman_judge 👨‍🌾 man_farmer 👩‍🌾 woman_farmer 👨‍🍳 man_cook 👩‍🍳 woman_cook 👨‍🔧 man_mechanic 👩‍🔧 woman_mechanic 👨‍🏭 man_factory_worker 👩‍🏭 woman_factory_worker 👨‍💼 man_office_worker 👩‍💼 woman_office_worker 👨‍🔬 man_scientist 👩‍🔬 woman_scientist 👨‍💻 man_technologist 👩‍💻 woman_technologist 👨‍🎤 man_singer 👩‍🎤 woman_singer 👨‍🎨 man_artist 👩‍🎨 woman_artist 👨‍✈️ man_pilot 👩‍✈️ woman_pilot 👨‍🚀 man_astronaut 👩‍🚀 woman_astronaut 👨‍🚒 man_firefighter 👩‍🚒 woman_firefighter 👮‍♂️ cop policeman 👮‍♀️ policewoman 🕵 detective male_detective 🕵️‍♀️ female_detective 💂‍♂️ guardsman 💂‍♀️ guardswoman 👷‍♂️ construction_worker construction_worker_man 👷‍♀️ construction_worker_woman 🤴 prince 👸 princess 👳‍♂️ man_with_turban 👳‍♀️ woman_with_turban 👲 man_with_gua_pi_mao 🤵‍♂️ man_in_tuxedo 👰 bride_with_veil 🤰 pregnant_woman ","date":"2021-04-01","objectID":"/emoji%E6%94%AF%E6%8C%81/:2:10","series":null,"tags":["DoIt"],"title":"Emoji 支持","uri":"/emoji%E6%94%AF%E6%8C%81/#人物角色"},{"categories":["DoIt文档"],"content":"幻想的人物 图标 代码 图标 代码 👼 angel 🎅 santa 🤶 mrs_claus ","date":"2021-04-01","objectID":"/emoji%E6%94%AF%E6%8C%81/:2:11","series":null,"tags":["DoIt"],"title":"Emoji 支持","uri":"/emoji%E6%94%AF%E6%8C%81/#幻想的人物"},{"categories":["DoIt文档"],"content":"人物活动 图标 代码 图标 代码 💆‍♀️ massage massage_woman 💆‍♂️ massage_man 💇‍♀️ haircut haircut_woman 💇‍♂️ haircut_man 🚶‍♂️ walking walking_man 🚶‍♀️ walking_woman 🏃‍♂️ runner running running_man 🏃‍♀️ running_woman 💃 dancer 🕺 man_dancing 🕴️ business_suit_levitating 👯‍♀️ dancers dancing_women 👯‍♂️ dancing_men ","date":"2021-04-01","objectID":"/emoji%E6%94%AF%E6%8C%81/:2:12","series":null,"tags":["DoIt"],"title":"Emoji 支持","uri":"/emoji%E6%94%AF%E6%8C%81/#人物活动"},{"categories":["DoIt文档"],"content":"体育 图标 代码 图标 代码 🤺 person_fencing 🏇 horse_racing ⛷️ skier 🏂 snowboarder 🏌️‍♂️ golfing_man 🏌️‍♀️ golfing_woman 🏄‍♂️ surfer surfing_man 🏄‍♀️ surfing_woman 🚣‍♂️ rowboat rowing_man 🚣‍♀️ rowing_woman 🏊‍♂️ swimmer swimming_man 🏊‍♀️ swimming_woman ⛹️‍♂️ basketball_man ⛹️‍♀️ basketball_woman 🏋️‍♂️ weight_lifting_man 🏋️‍♀️ weight_lifting_woman 🚴‍♂️ bicyclist biking_man 🚴‍♀️ biking_woman 🚵‍♂️ mountain_bicyclist mountain_biking_man 🚵‍♀️ mountain_biking_woman 🤸‍♂️ man_cartwheeling 🤸‍♀️ woman_cartwheeling 🤼‍♂️ men_wrestling 🤼‍♀️ women_wrestling 🤽‍♂️ man_playing_water_polo 🤽‍♀️ woman_playing_water_polo 🤾‍♂️ man_playing_handball 🤾‍♀️ woman_playing_handball 🤹‍♂️ man_juggling 🤹‍♀️ woman_juggling ","date":"2021-04-01","objectID":"/emoji%E6%94%AF%E6%8C%81/:2:13","series":null,"tags":["DoIt"],"title":"Emoji 支持","uri":"/emoji%E6%94%AF%E6%8C%81/#体育"},{"categories":["DoIt文档"],"content":"休息 图标 代码 图标 代码 🛀 bath 🛌 sleeping_bed ","date":"2021-04-01","objectID":"/emoji%E6%94%AF%E6%8C%81/:2:14","series":null,"tags":["DoIt"],"title":"Emoji 支持","uri":"/emoji%E6%94%AF%E6%8C%81/#休息"},{"categories":["DoIt文档"],"content":"家庭 图标 代码 图标 代码 👭 two_women_holding_hands 👫 couple 👬 two_men_holding_hands 👩‍❤️‍💋‍👨 couplekiss_man_woman 👨‍❤️‍💋‍👨 couplekiss_man_man 👩‍❤️‍💋‍👩 couplekiss_woman_woman 💑 couple_with_heart couple_with_heart_woman_man 👨‍❤️‍👨 couple_with_heart_man_man 👩‍❤️‍👩 couple_with_heart_woman_woman 👨‍👩‍👦 family family_man_woman_boy 👨‍👩‍👧 family_man_woman_girl 👨‍👩‍👧‍👦 family_man_woman_girl_boy 👨‍👩‍👦‍👦 family_man_woman_boy_boy 👨‍👩‍👧‍👧 family_man_woman_girl_girl 👨‍👨‍👦 family_man_man_boy 👨‍👨‍👧 family_man_man_girl 👨‍👨‍👧‍👦 family_man_man_girl_boy 👨‍👨‍👦‍👦 family_man_man_boy_boy 👨‍👨‍👧‍👧 family_man_man_girl_girl 👩‍👩‍👦 family_woman_woman_boy 👩‍👩‍👧 family_woman_woman_girl 👩‍👩‍👧‍👦 family_woman_woman_girl_boy 👩‍👩‍👦‍👦 family_woman_woman_boy_boy 👩‍👩‍👧‍👧 family_woman_woman_girl_girl 👨‍👦 family_man_boy 👨‍👦‍👦 family_man_boy_boy 👨‍👧 family_man_girl 👨‍👧‍👦 family_man_girl_boy 👨‍👧‍👧 family_man_girl_girl 👩‍👦 family_woman_boy 👩‍👦‍👦 family_woman_boy_boy 👩‍👧 family_woman_girl 👩‍👧‍👦 family_woman_girl_boy 👩‍👧‍👧 family_woman_girl_girl ","date":"2021-04-01","objectID":"/emoji%E6%94%AF%E6%8C%81/:2:15","series":null,"tags":["DoIt"],"title":"Emoji 支持","uri":"/emoji%E6%94%AF%E6%8C%81/#家庭"},{"categories":["DoIt文档"],"content":"人物符号 图标 代码 图标 代码 🗣 speaking_head 👤 bust_in_silhouette 👥 busts_in_silhouette 👣 footprints ","date":"2021-04-01","objectID":"/emoji%E6%94%AF%E6%8C%81/:2:16","series":null,"tags":["DoIt"],"title":"Emoji 支持","uri":"/emoji%E6%94%AF%E6%8C%81/#人物符号"},{"categories":["DoIt文档"],"content":"动物与自然 ","date":"2021-04-01","objectID":"/emoji%E6%94%AF%E6%8C%81/:3:0","series":null,"tags":["DoIt"],"title":"Emoji 支持","uri":"/emoji%E6%94%AF%E6%8C%81/#动物与自然"},{"categories":["DoIt文档"],"content":"哺乳动物 图标 代码 图标 代码 🐵 monkey_face 🐒 monkey 🦍 gorilla 🐶 dog 🐕 dog2 🐩 poodle 🐺 wolf 🦊 fox_face 🐱 cat 🐈 cat2 🦁 lion 🐯 tiger 🐅 tiger2 🐆 leopard 🐴 horse 🐎 racehorse 🦄 unicorn 🦌 deer 🐮 cow 🐂 ox 🐃 water_buffalo 🐄 cow2 🐷 pig 🐖 pig2 🐗 boar 🐽 pig_nose 🐏 ram 🐑 sheep 🐐 goat 🐪 dromedary_camel 🐫 camel 🐘 elephant 🦏 rhinoceros 🐭 mouse 🐁 mouse2 🐀 rat 🐹 hamster 🐰 rabbit 🐇 rabbit2 🐿️ chipmunk 🦇 bat 🐻 bear 🐨 koala 🐼 panda_face 🐾 feet paw_prints ","date":"2021-04-01","objectID":"/emoji%E6%94%AF%E6%8C%81/:3:1","series":null,"tags":["DoIt"],"title":"Emoji 支持","uri":"/emoji%E6%94%AF%E6%8C%81/#哺乳动物"},{"categories":["DoIt文档"],"content":"鸟类 图标 代码 图标 代码 🦃 turkey 🐔 chicken 🐓 rooster 🐣 hatching_chick 🐤 baby_chick 🐥 hatched_chick 🐦 bird 🐧 penguin 🕊 dove 🦅 eagle 🦆 duck 🦉 owl ","date":"2021-04-01","objectID":"/emoji%E6%94%AF%E6%8C%81/:3:2","series":null,"tags":["DoIt"],"title":"Emoji 支持","uri":"/emoji%E6%94%AF%E6%8C%81/#鸟类"},{"categories":["DoIt文档"],"content":"两栖动物 icon code icon code 🐸 frog ","date":"2021-04-01","objectID":"/emoji%E6%94%AF%E6%8C%81/:3:3","series":null,"tags":["DoIt"],"title":"Emoji 支持","uri":"/emoji%E6%94%AF%E6%8C%81/#两栖动物"},{"categories":["DoIt文档"],"content":"爬虫类 图标 代码 图标 代码 🐊 crocodile 🐢 turtle 🦎 lizard 🐍 snake 🐲 dragon_face 🐉 dragon ","date":"2021-04-01","objectID":"/emoji%E6%94%AF%E6%8C%81/:3:4","series":null,"tags":["DoIt"],"title":"Emoji 支持","uri":"/emoji%E6%94%AF%E6%8C%81/#爬虫类"},{"categories":["DoIt文档"],"content":"海洋动物 图标 代码 图标 代码 🐳 whale 🐋 whale2 🐬 dolphin flipper 🐟 fish 🐠 tropical_fish 🐡 blowfish 🦈 shark 🐙 octopus 🐚 shell ","date":"2021-04-01","objectID":"/emoji%E6%94%AF%E6%8C%81/:3:5","series":null,"tags":["DoIt"],"title":"Emoji 支持","uri":"/emoji%E6%94%AF%E6%8C%81/#海洋动物"},{"categories":["DoIt文档"],"content":"虫类 图标 代码 图标 代码 🐌 snail 🦋 butterfly 🐛 bug 🐜 ant 🐝 bee honeybee 🪲 beetle 🕷️ spider 🕸️ spider_web 🦂 scorpion ","date":"2021-04-01","objectID":"/emoji%E6%94%AF%E6%8C%81/:3:6","series":null,"tags":["DoIt"],"title":"Emoji 支持","uri":"/emoji%E6%94%AF%E6%8C%81/#虫类"},{"categories":["DoIt文档"],"content":"花类植物 图标 代码 图标 代码 💐 bouquet 🌸 cherry_blossom 💮 white_flower 🏵️ rosette 🌹 rose 🥀 wilted_flower 🌺 hibiscus 🌻 sunflower 🌼 blossom 🌷 tulip ","date":"2021-04-01","objectID":"/emoji%E6%94%AF%E6%8C%81/:3:7","series":null,"tags":["DoIt"],"title":"Emoji 支持","uri":"/emoji%E6%94%AF%E6%8C%81/#花类植物"},{"categories":["DoIt文档"],"content":"其它植物 图标 代码 图标 代码 🌱 seedling 🌲 evergreen_tree 🌳 deciduous_tree 🌴 palm_tree 🌵 cactus 🌾 ear_of_rice 🌿 herb ☘️ shamrock 🍀 four_leaf_clover 🍁 maple_leaf 🍂 fallen_leaf 🍃 leaves ","date":"2021-04-01","objectID":"/emoji%E6%94%AF%E6%8C%81/:3:8","series":null,"tags":["DoIt"],"title":"Emoji 支持","uri":"/emoji%E6%94%AF%E6%8C%81/#其它植物"},{"categories":["DoIt文档"],"content":"食物与饮料 ","date":"2021-04-01","objectID":"/emoji%E6%94%AF%E6%8C%81/:4:0","series":null,"tags":["DoIt"],"title":"Emoji 支持","uri":"/emoji%E6%94%AF%E6%8C%81/#食物与饮料"},{"categories":["DoIt文档"],"content":"水果 图标 代码 图标 代码 🍇 grapes 🍈 melon 🍉 watermelon 🍊 mandarin orange tangerine 🍋 lemon 🍌 banana 🍍 pineapple 🍎 apple 🍏 green_apple 🍐 pear 🍑 peach 🍒 cherries 🍓 strawberry 🥝 kiwi_fruit 🍅 tomato ","date":"2021-04-01","objectID":"/emoji%E6%94%AF%E6%8C%81/:4:1","series":null,"tags":["DoIt"],"title":"Emoji 支持","uri":"/emoji%E6%94%AF%E6%8C%81/#水果"},{"categories":["DoIt文档"],"content":"蔬菜 图标 代码 图标 代码 🥑 avocado 🍆 eggplant 🥔 potato 🥕 carrot 🌽 corn 🌶️ hot_pepper 🥒 cucumber 🍄 mushroom 🥜 peanuts 🌰 chestnut ","date":"2021-04-01","objectID":"/emoji%E6%94%AF%E6%8C%81/:4:2","series":null,"tags":["DoIt"],"title":"Emoji 支持","uri":"/emoji%E6%94%AF%E6%8C%81/#蔬菜"},{"categories":["DoIt文档"],"content":"快餐 图标 代码 图标 代码 🍞 bread 🥐 croissant 🥖 baguette_bread 🥞 pancakes 🧀 cheese 🍖 meat_on_bone 🍗 poultry_leg 🥓 bacon 🍔 hamburger 🍟 fries 🍕 pizza 🌭 hotdog 🌮 taco 🌯 burrito 🥙 stuffed_flatbread 🥚 egg 🍳 fried_egg 🥘 shallow_pan_of_food 🍲 stew 🥗 green_salad 🍿 popcorn ","date":"2021-04-01","objectID":"/emoji%E6%94%AF%E6%8C%81/:4:3","series":null,"tags":["DoIt"],"title":"Emoji 支持","uri":"/emoji%E6%94%AF%E6%8C%81/#快餐"},{"categories":["DoIt文档"],"content":"亚洲食物 图标 代码 图标 代码 🍱 bento 🍘 rice_cracker 🍙 rice_ball 🍚 rice 🍛 curry 🍜 ramen 🍝 spaghetti 🍠 sweet_potato 🍢 oden 🍣 sushi 🍤 fried_shrimp 🍥 fish_cake 🍡 dango ","date":"2021-04-01","objectID":"/emoji%E6%94%AF%E6%8C%81/:4:4","series":null,"tags":["DoIt"],"title":"Emoji 支持","uri":"/emoji%E6%94%AF%E6%8C%81/#亚洲食物"},{"categories":["DoIt文档"],"content":"海鲜 图标 代码 图标 代码 🦀 crab 🦐 shrimp 🦑 squid ","date":"2021-04-01","objectID":"/emoji%E6%94%AF%E6%8C%81/:4:5","series":null,"tags":["DoIt"],"title":"Emoji 支持","uri":"/emoji%E6%94%AF%E6%8C%81/#海鲜"},{"categories":["DoIt文档"],"content":"甜点 图标 代码 图标 代码 🍦 icecream 🍧 shaved_ice 🍨 ice_cream 🍩 doughnut 🍪 cookie 🎂 birthday 🍰 cake 🍫 chocolate_bar 🍬 candy 🍭 lollipop 🍮 custard 🍯 honey_pot ","date":"2021-04-01","objectID":"/emoji%E6%94%AF%E6%8C%81/:4:6","series":null,"tags":["DoIt"],"title":"Emoji 支持","uri":"/emoji%E6%94%AF%E6%8C%81/#甜点"},{"categories":["DoIt文档"],"content":"饮料 图标 代码 图标 代码 🍼 baby_bottle 🥛 milk_glass ☕ coffee 🍵 tea 🍶 sake 🍾 champagne 🍷 wine_glass 🍸 cocktail 🍹 tropical_drink 🍺 beer 🍻 beers 🥂 clinking_glasses 🥃 tumbler_glass ","date":"2021-04-01","objectID":"/emoji%E6%94%AF%E6%8C%81/:4:7","series":null,"tags":["DoIt"],"title":"Emoji 支持","uri":"/emoji%E6%94%AF%E6%8C%81/#饮料"},{"categories":["DoIt文档"],"content":"餐具 图标 代码 图标 代码 🍽️ plate_with_cutlery 🍴 fork_and_knife 🥄 spoon 🔪 hocho knife 🏺 amphora ","date":"2021-04-01","objectID":"/emoji%E6%94%AF%E6%8C%81/:4:8","series":null,"tags":["DoIt"],"title":"Emoji 支持","uri":"/emoji%E6%94%AF%E6%8C%81/#餐具"},{"categories":["DoIt文档"],"content":"旅游与地理 ","date":"2021-04-01","objectID":"/emoji%E6%94%AF%E6%8C%81/:5:0","series":null,"tags":["DoIt"],"title":"Emoji 支持","uri":"/emoji%E6%94%AF%E6%8C%81/#旅游与地理"},{"categories":["DoIt文档"],"content":"地图 图标 代码 图标 代码 🌍 earth_africa 🌎 earth_americas 🌏 earth_asia 🌐 globe_with_meridians 🗺️ world_map 🗾 japan ","date":"2021-04-01","objectID":"/emoji%E6%94%AF%E6%8C%81/:5:1","series":null,"tags":["DoIt"],"title":"Emoji 支持","uri":"/emoji%E6%94%AF%E6%8C%81/#地图"},{"categories":["DoIt文档"],"content":"地理现象 图标 代码 图标 代码 🏔 mountain_snow ⛰️ mountain 🌋 volcano 🗻 mount_fuji 🏕️ camping ⛱ beach_umbrella 🏜️ desert 🏝️ desert_island 🏞️ national_park ","date":"2021-04-01","objectID":"/emoji%E6%94%AF%E6%8C%81/:5:2","series":null,"tags":["DoIt"],"title":"Emoji 支持","uri":"/emoji%E6%94%AF%E6%8C%81/#地理现象"},{"categories":["DoIt文档"],"content":"建筑物 图标 代码 图标 代码 🏟️ stadium 🏛️ classical_building 🏗️ building_construction 🏘 houses 🏚 derelict_house 🏠 house 🏡 house_with_garden 🏢 office 🏣 post_office 🏤 european_post_office 🏥 hospital 🏦 bank 🏨 hotel 🏩 love_hotel 🏪 convenience_store 🏫 school 🏬 department_store 🏭 factory 🏯 japanese_castle 🏰 european_castle 💒 wedding 🗼 tokyo_tower 🗽 statue_of_liberty ","date":"2021-04-01","objectID":"/emoji%E6%94%AF%E6%8C%81/:5:3","series":null,"tags":["DoIt"],"title":"Emoji 支持","uri":"/emoji%E6%94%AF%E6%8C%81/#建筑物"},{"categories":["DoIt文档"],"content":"宗教建筑 图标 代码 图标 代码 ⛪ church 🕌 mosque 🕍 synagogue ⛩️ shinto_shrine 🕋 kaaba ","date":"2021-04-01","objectID":"/emoji%E6%94%AF%E6%8C%81/:5:4","series":null,"tags":["DoIt"],"title":"Emoji 支持","uri":"/emoji%E6%94%AF%E6%8C%81/#宗教建筑"},{"categories":["DoIt文档"],"content":"其它地点 图标 代码 图标 代码 ⛲ fountain ⛺ tent 🌁 foggy 🌃 night_with_stars 🏙️ cityscape 🌄 sunrise_over_mountains 🌅 sunrise 🌆 city_sunset 🌇 city_sunrise 🌉 bridge_at_night ♨️ hotsprings 🎠 carousel_horse 🎡 ferris_wheel 🎢 roller_coaster 💈 barber 🎪 circus_tent ","date":"2021-04-01","objectID":"/emoji%E6%94%AF%E6%8C%81/:5:5","series":null,"tags":["DoIt"],"title":"Emoji 支持","uri":"/emoji%E6%94%AF%E6%8C%81/#其它地点"},{"categories":["DoIt文档"],"content":"陆路运输 图标 代码 图标 代码 🚂 steam_locomotive 🚃 railway_car 🚄 bullettrain_side 🚅 bullettrain_front 🚆 train2 🚇 metro 🚈 light_rail 🚉 station 🚊 tram 🚝 monorail 🚞 mountain_railway 🚋 train 🚌 bus 🚍 oncoming_bus 🚎 trolleybus 🚐 minibus 🚑 ambulance 🚒 fire_engine 🚓 police_car 🚔 oncoming_police_car 🚕 taxi 🚖 oncoming_taxi 🚗 car red_car 🚘 oncoming_automobile 🚙 blue_car 🚚 truck 🚛 articulated_lorry 🚜 tractor 🏎️ racing_car 🏍 motorcycle 🛵 motor_scooter 🚲 bike 🛴 kick_scooter 🚏 busstop 🛣️ motorway 🛤️ railway_track 🛢️ oil_drum ⛽ fuelpump 🚨 rotating_light 🚥 traffic_light 🚦 vertical_traffic_light 🛑 stop_sign 🚧 construction ","date":"2021-04-01","objectID":"/emoji%E6%94%AF%E6%8C%81/:5:6","series":null,"tags":["DoIt"],"title":"Emoji 支持","uri":"/emoji%E6%94%AF%E6%8C%81/#陆路运输"},{"categories":["DoIt文档"],"content":"水路运输 图标 代码 图标 代码 ⚓ anchor ⛵ boat sailboat 🛶 canoe 🚤 speedboat 🛳️ passenger_ship ⛴️ ferry 🛥️ motor_boat 🚢 ship ","date":"2021-04-01","objectID":"/emoji%E6%94%AF%E6%8C%81/:5:7","series":null,"tags":["DoIt"],"title":"Emoji 支持","uri":"/emoji%E6%94%AF%E6%8C%81/#水路运输"},{"categories":["DoIt文档"],"content":"空中运输 图标 代码 图标 代码 ✈️ airplane 🛩️ small_airplane 🛫 flight_departure 🛬 flight_arrival 💺 seat 🚁 helicopter 🚟 suspension_railway 🚠 mountain_cableway 🚡 aerial_tramway 🛰️ artificial_satellite 🚀 rocket ","date":"2021-04-01","objectID":"/emoji%E6%94%AF%E6%8C%81/:5:8","series":null,"tags":["DoIt"],"title":"Emoji 支持","uri":"/emoji%E6%94%AF%E6%8C%81/#空中运输"},{"categories":["DoIt文档"],"content":"旅馆 icon code icon code 🛎️ bellhop_bell ","date":"2021-04-01","objectID":"/emoji%E6%94%AF%E6%8C%81/:5:9","series":null,"tags":["DoIt"],"title":"Emoji 支持","uri":"/emoji%E6%94%AF%E6%8C%81/#旅馆"},{"categories":["DoIt文档"],"content":"时间 图标 代码 图标 代码 ⌛ hourglass ⏳ hourglass_flowing_sand ⌚ watch ⏰ alarm_clock ⏱️ stopwatch ⏲️ timer_clock 🕰️ mantelpiece_clock 🕛 clock12 🕧 clock1230 🕐 clock1 🕜 clock130 🕑 clock2 🕝 clock230 🕒 clock3 🕞 clock330 🕓 clock4 🕟 clock430 🕔 clock5 🕠 clock530 🕕 clock6 🕡 clock630 🕖 clock7 🕢 clock730 🕗 clock8 🕣 clock830 🕘 clock9 🕤 clock930 🕙 clock10 🕥 clock1030 🕚 clock11 🕦 clock1130 ","date":"2021-04-01","objectID":"/emoji%E6%94%AF%E6%8C%81/:5:10","series":null,"tags":["DoIt"],"title":"Emoji 支持","uri":"/emoji%E6%94%AF%E6%8C%81/#时间"},{"categories":["DoIt文档"],"content":"天空与天气 图标 代码 图标 代码 🌑 new_moon 🌒 waxing_crescent_moon 🌓 first_quarter_moon 🌔 moon waxing_gibbous_moon 🌕 full_moon 🌖 waning_gibbous_moon 🌗 last_quarter_moon 🌘 waning_crescent_moon 🌙 crescent_moon 🌚 new_moon_with_face 🌛 first_quarter_moon_with_face 🌜 last_quarter_moon_with_face 🌡️ thermometer ☀️ sunny 🌝 full_moon_with_face 🌞 sun_with_face ⭐ star 🌟 star2 🌠 stars 🌌 milky_way ☁️ cloud ⛅ partly_sunny ⛈ cloud_with_lightning_and_rain 🌤 sun_behind_small_cloud 🌥 sun_behind_large_cloud 🌦 sun_behind_rain_cloud 🌧 cloud_with_rain 🌨 cloud_with_snow 🌩 cloud_with_lightning 🌪️ tornado 🌫️ fog 🌬 wind_face 🌀 cyclone 🌈 rainbow 🌂 closed_umbrella ☂️ open_umbrella ☂️ umbrella ⛱️ parasol_on_ground ⚡ zap ❄️ snowflake ☃️ snowman_with_snow ☃️ snowman ☄️ comet 🔥 fire 💧 droplet 🌊 ocean ","date":"2021-04-01","objectID":"/emoji%E6%94%AF%E6%8C%81/:5:11","series":null,"tags":["DoIt"],"title":"Emoji 支持","uri":"/emoji%E6%94%AF%E6%8C%81/#天空与天气"},{"categories":["DoIt文档"],"content":"活动 ","date":"2021-04-01","objectID":"/emoji%E6%94%AF%E6%8C%81/:6:0","series":null,"tags":["DoIt"],"title":"Emoji 支持","uri":"/emoji%E6%94%AF%E6%8C%81/#活动"},{"categories":["DoIt文档"],"content":"事件 图标 代码 图标 代码 🎃 jack_o_lantern 🎄 christmas_tree 🎆 fireworks 🎇 sparkler ✨ sparkles 🎈 balloon 🎉 tada 🎊 confetti_ball 🎋 tanabata_tree 🎍 bamboo 🎎 dolls 🎏 flags 🎐 wind_chime 🎑 rice_scene 🎀 ribbon 🎁 gift 🎗️ reminder_ribbon 🎟 tickets 🎫 ticket ","date":"2021-04-01","objectID":"/emoji%E6%94%AF%E6%8C%81/:6:1","series":null,"tags":["DoIt"],"title":"Emoji 支持","uri":"/emoji%E6%94%AF%E6%8C%81/#事件"},{"categories":["DoIt文档"],"content":"奖杯与奖牌 图标 代码 图标 代码 🎖️ medal_military 🏆 trophy 🏅 medal_sports 🥇 1st_place_medal 🥈 2nd_place_medal 🥉 3rd_place_medal ","date":"2021-04-01","objectID":"/emoji%E6%94%AF%E6%8C%81/:6:2","series":null,"tags":["DoIt"],"title":"Emoji 支持","uri":"/emoji%E6%94%AF%E6%8C%81/#奖杯与奖牌"},{"categories":["DoIt文档"],"content":"体育运动 图标 代码 图标 代码 ⚽ soccer ⚾ baseball 🏀 basketball 🏐 volleyball 🏈 football 🏉 rugby_football 🎾 tennis 🎳 bowling 🦗 cricket 🏑 field_hockey 🏒 ice_hockey 🏓 ping_pong 🏸 badminton 🥊 boxing_glove 🥋 martial_arts_uniform 🥅 goal_net ⛳ golf ⛸️ ice_skate 🎣 fishing_pole_and_fish 🎽 running_shirt_with_sash 🎿 ski ","date":"2021-04-01","objectID":"/emoji%E6%94%AF%E6%8C%81/:6:3","series":null,"tags":["DoIt"],"title":"Emoji 支持","uri":"/emoji%E6%94%AF%E6%8C%81/#体育运动"},{"categories":["DoIt文档"],"content":"游戏 图标 代码 图标 代码 🎯 dart 🎱 8ball 🔮 crystal_ball 🎮 video_game 🕹️ joystick 🎰 slot_machine 🎲 game_die ♠️ spades ♥️ hearts ♦️ diamonds ♣️ clubs 🃏 black_joker 🀄 mahjong 🎴 flower_playing_cards ","date":"2021-04-01","objectID":"/emoji%E6%94%AF%E6%8C%81/:6:4","series":null,"tags":["DoIt"],"title":"Emoji 支持","uri":"/emoji%E6%94%AF%E6%8C%81/#游戏"},{"categories":["DoIt文档"],"content":"艺术与工艺 图标 代码 图标 代码 🎭 performing_arts 🖼 framed_picture 🎨 art ","date":"2021-04-01","objectID":"/emoji%E6%94%AF%E6%8C%81/:6:5","series":null,"tags":["DoIt"],"title":"Emoji 支持","uri":"/emoji%E6%94%AF%E6%8C%81/#艺术与工艺"},{"categories":["DoIt文档"],"content":"物品 ","date":"2021-04-01","objectID":"/emoji%E6%94%AF%E6%8C%81/:7:0","series":null,"tags":["DoIt"],"title":"Emoji 支持","uri":"/emoji%E6%94%AF%E6%8C%81/#物品"},{"categories":["DoIt文档"],"content":"服装 图标 代码 图标 代码 👓 eyeglasses 🕶️ dark_sunglasses 👔 necktie 👕 shirt tshirt 👖 jeans 👗 dress 👘 kimono 👙 bikini 👚 womans_clothes 👛 purse 👜 handbag 👝 pouch 🛍️ shopping 🎒 school_satchel 👞 mans_shoe shoe 👟 athletic_shoe 👠 high_heel 👡 sandal 👢 boot 👑 crown 👒 womans_hat 🎩 tophat 🎓 mortar_board ⛑️ rescue_worker_helmet 📿 prayer_beads 💄 lipstick 💍 ring 💎 gem ","date":"2021-04-01","objectID":"/emoji%E6%94%AF%E6%8C%81/:7:1","series":null,"tags":["DoIt"],"title":"Emoji 支持","uri":"/emoji%E6%94%AF%E6%8C%81/#服装"},{"categories":["DoIt文档"],"content":"声音 图标 代码 图标 代码 🔇 mute 🔈 speaker 🔉 sound 🔊 loud_sound 📢 loudspeaker 📣 mega 📯 postal_horn 🔔 bell 🔕 no_bell ","date":"2021-04-01","objectID":"/emoji%E6%94%AF%E6%8C%81/:7:2","series":null,"tags":["DoIt"],"title":"Emoji 支持","uri":"/emoji%E6%94%AF%E6%8C%81/#声音"},{"categories":["DoIt文档"],"content":"音乐 图标 代码 图标 代码 🎼 musical_score 🎵 musical_note 🎶 notes 🎙️ studio_microphone 🎚️ level_slider 🎛️ control_knobs 🎤 microphone 🎧 headphones 📻 radio ","date":"2021-04-01","objectID":"/emoji%E6%94%AF%E6%8C%81/:7:3","series":null,"tags":["DoIt"],"title":"Emoji 支持","uri":"/emoji%E6%94%AF%E6%8C%81/#音乐"},{"categories":["DoIt文档"],"content":"乐器 图标 代码 图标 代码 🎷 saxophone 🎸 guitar 🎹 musical_keyboard 🎺 trumpet 🎻 violin 🥁 drum ","date":"2021-04-01","objectID":"/emoji%E6%94%AF%E6%8C%81/:7:4","series":null,"tags":["DoIt"],"title":"Emoji 支持","uri":"/emoji%E6%94%AF%E6%8C%81/#乐器"},{"categories":["DoIt文档"],"content":"电话 图标 代码 图标 代码 📱 iphone 📲 calling ☎️ phone telephone 📞 telephone_receiver 📟 pager 📠 fax ","date":"2021-04-01","objectID":"/emoji%E6%94%AF%E6%8C%81/:7:5","series":null,"tags":["DoIt"],"title":"Emoji 支持","uri":"/emoji%E6%94%AF%E6%8C%81/#电话"},{"categories":["DoIt文档"],"content":"电脑 图标 代码 图标 代码 🔋 battery 🔌 electric_plug 💻 computer 🖥️ desktop_computer 🖨️ printer ⌨️ keyboard 🖱 computer_mouse 🖲️ trackball 💽 minidisc 💾 floppy_disk 💿 cd 📀 dvd ","date":"2021-04-01","objectID":"/emoji%E6%94%AF%E6%8C%81/:7:6","series":null,"tags":["DoIt"],"title":"Emoji 支持","uri":"/emoji%E6%94%AF%E6%8C%81/#电脑"},{"categories":["DoIt文档"],"content":"灯光与影像 图标 代码 图标 代码 🎥 movie_camera 🎞️ film_strip 📽️ film_projector 🎬 clapper 📺 tv 📷 camera 📸 camera_flash 📹 video_camera 📼 vhs 🔍 mag 🔎 mag_right 🕯️ candle 💡 bulb 🔦 flashlight 🏮 izakaya_lantern lantern ","date":"2021-04-01","objectID":"/emoji%E6%94%AF%E6%8C%81/:7:7","series":null,"tags":["DoIt"],"title":"Emoji 支持","uri":"/emoji%E6%94%AF%E6%8C%81/#灯光与影像"},{"categories":["DoIt文档"],"content":"书与纸张 图标 代码 图标 代码 📔 notebook_with_decorative_cover 📕 closed_book 📖 book open_book 📗 green_book 📘 blue_book 📙 orange_book 📚 books 📓 notebook 📒 ledger 📃 page_with_curl 📜 scroll 📄 page_facing_up 📰 newspaper 🗞️ newspaper_roll 📑 bookmark_tabs 🔖 bookmark 🏷️ label ","date":"2021-04-01","objectID":"/emoji%E6%94%AF%E6%8C%81/:7:8","series":null,"tags":["DoIt"],"title":"Emoji 支持","uri":"/emoji%E6%94%AF%E6%8C%81/#书与纸张"},{"categories":["DoIt文档"],"content":"钱 图标 代码 图标 代码 💰 moneybag 💴 yen 💵 dollar 💶 euro 💷 pound 💸 money_with_wings 💳 credit_card 💹 chart ","date":"2021-04-01","objectID":"/emoji%E6%94%AF%E6%8C%81/:7:9","series":null,"tags":["DoIt"],"title":"Emoji 支持","uri":"/emoji%E6%94%AF%E6%8C%81/#钱"},{"categories":["DoIt文档"],"content":"邮件 图标 代码 图标 代码 ✉️ email envelope 📧 📧 📨 incoming_envelope 📩 envelope_with_arrow 📤 outbox_tray 📥 inbox_tray 📦 package 📫 mailbox 📪 mailbox_closed 📬 mailbox_with_mail 📭 mailbox_with_no_mail 📮 postbox 🗳 ballot_box ","date":"2021-04-01","objectID":"/emoji%E6%94%AF%E6%8C%81/:7:10","series":null,"tags":["DoIt"],"title":"Emoji 支持","uri":"/emoji%E6%94%AF%E6%8C%81/#邮件"},{"categories":["DoIt文档"],"content":"书写 图标 代码 图标 代码 ✏️ pencil2 ✒️ black_nib 🖋 fountain_pen 🖊 pen 🖌 paintbrush 🖍 crayon 📝 memo pencil ","date":"2021-04-01","objectID":"/emoji%E6%94%AF%E6%8C%81/:7:11","series":null,"tags":["DoIt"],"title":"Emoji 支持","uri":"/emoji%E6%94%AF%E6%8C%81/#书写"},{"categories":["DoIt文档"],"content":"办公 图标 代码 图标 代码 💼 briefcase 📁 file_folder 📂 open_file_folder 🗂️ card_index_dividers 📅 date 📆 calendar 🗒 spiral_notepad 🗓 spiral_calendar 📇 card_index 📈 chart_with_upwards_trend 📉 chart_with_downwards_trend 📊 bar_chart 📋 clipboard 📌 pushpin 📍 round_pushpin 📎 paperclip 🖇 paperclips 📏 straight_ruler 📐 triangular_ruler ✂️ scissors 🗃️ card_file_box 🗄️ file_cabinet 🗑️ wastebasket ","date":"2021-04-01","objectID":"/emoji%E6%94%AF%E6%8C%81/:7:12","series":null,"tags":["DoIt"],"title":"Emoji 支持","uri":"/emoji%E6%94%AF%E6%8C%81/#办公"},{"categories":["DoIt文档"],"content":"锁 图标 代码 图标 代码 🔒 lock 🔓 unlock 🔏 lock_with_ink_pen 🔐 closed_lock_with_key 🔑 key 🗝️ old_key ","date":"2021-04-01","objectID":"/emoji%E6%94%AF%E6%8C%81/:7:13","series":null,"tags":["DoIt"],"title":"Emoji 支持","uri":"/emoji%E6%94%AF%E6%8C%81/#锁"},{"categories":["DoIt文档"],"content":"工具 图标 代码 图标 代码 🔨 hammer ⛏️ pick ⚒️ hammer_and_pick 🛠️ hammer_and_wrench 🗡 dagger ⚔️ crossed_swords 🔫 gun 🏹 bow_and_arrow 🛡️ shield 🔧 wrench 🔩 nut_and_bolt ⚙️ gear 🗜 clamp ⚖ balance_scale 🔗 link ⛓️ chains ","date":"2021-04-01","objectID":"/emoji%E6%94%AF%E6%8C%81/:7:14","series":null,"tags":["DoIt"],"title":"Emoji 支持","uri":"/emoji%E6%94%AF%E6%8C%81/#工具"},{"categories":["DoIt文档"],"content":"科学 图标 代码 图标 代码 ⚗️ alembic 🔬 microscope 🔭 telescope 🛰️ satellite ","date":"2021-04-01","objectID":"/emoji%E6%94%AF%E6%8C%81/:7:15","series":null,"tags":["DoIt"],"title":"Emoji 支持","uri":"/emoji%E6%94%AF%E6%8C%81/#科学"},{"categories":["DoIt文档"],"content":"医疗 图标 代码 图标 代码 💉 syringe 💊 pill ","date":"2021-04-01","objectID":"/emoji%E6%94%AF%E6%8C%81/:7:16","series":null,"tags":["DoIt"],"title":"Emoji 支持","uri":"/emoji%E6%94%AF%E6%8C%81/#医疗"},{"categories":["DoIt文档"],"content":"生活用品 图标 代码 图标 代码 🚪 door 🛏️ bed 🛋️ couch_and_lamp 🚽 toilet 🚿 shower 🛁 bathtub 🛒 shopping_cart ","date":"2021-04-01","objectID":"/emoji%E6%94%AF%E6%8C%81/:7:17","series":null,"tags":["DoIt"],"title":"Emoji 支持","uri":"/emoji%E6%94%AF%E6%8C%81/#生活用品"},{"categories":["DoIt文档"],"content":"其它物品 图标 代码 图标 代码 🚬 smoking ⚰️ coffin ⚱️ funeral_urn 🗿 moyai ","date":"2021-04-01","objectID":"/emoji%E6%94%AF%E6%8C%81/:7:18","series":null,"tags":["DoIt"],"title":"Emoji 支持","uri":"/emoji%E6%94%AF%E6%8C%81/#其它物品"},{"categories":["DoIt文档"],"content":"符号 ","date":"2021-04-01","objectID":"/emoji%E6%94%AF%E6%8C%81/:8:0","series":null,"tags":["DoIt"],"title":"Emoji 支持","uri":"/emoji%E6%94%AF%E6%8C%81/#符号"},{"categories":["DoIt文档"],"content":"交通标识 图标 代码 图标 代码 🏧 atm 🚮 put_litter_in_its_place 🚰 potable_water ♿ wheelchair 🚹 mens 🚺 womens 🚻 restroom 🚼 baby_symbol 🚾 wc 🛂 passport_control 🛃 customs 🛄 baggage_claim 🛅 left_luggage ","date":"2021-04-01","objectID":"/emoji%E6%94%AF%E6%8C%81/:8:1","series":null,"tags":["DoIt"],"title":"Emoji 支持","uri":"/emoji%E6%94%AF%E6%8C%81/#交通标识"},{"categories":["DoIt文档"],"content":"警告 图标 代码 图标 代码 ⚠️ warning 🚸 children_crossing ⛔ no_entry 🚫 no_entry_sign 🚳 no_bicycles 🚭 no_smoking 🚯 do_not_litter 🚱 🚱 🚷 no_pedestrians 📵 no_mobile_phones 🔞 underage ☢ radioactive ☣ biohazard ","date":"2021-04-01","objectID":"/emoji%E6%94%AF%E6%8C%81/:8:2","series":null,"tags":["DoIt"],"title":"Emoji 支持","uri":"/emoji%E6%94%AF%E6%8C%81/#警告"},{"categories":["DoIt文档"],"content":"箭头 图标 代码 图标 代码 ⬆️ arrow_up ↗️ arrow_upper_right ➡️ arrow_right ↘️ arrow_lower_right ⬇️ arrow_down ↙️ arrow_lower_left ⬅️ arrow_left ↖️ arrow_upper_left ↕️ arrow_up_down ↔️ left_right_arrow ↩️ leftwards_arrow_with_hook ↪️ arrow_right_hook ⤴️ arrow_heading_up ⤵️ arrow_heading_down 🔃 arrows_clockwise 🔄 arrows_counterclockwise 🔙 back 🔚 end 🔛 on 🔜 soon 🔝 top ","date":"2021-04-01","objectID":"/emoji%E6%94%AF%E6%8C%81/:8:3","series":null,"tags":["DoIt"],"title":"Emoji 支持","uri":"/emoji%E6%94%AF%E6%8C%81/#箭头"},{"categories":["DoIt文档"],"content":"宗教 图标 代码 图标 代码 🛐 place_of_worship ⚛️ atom_symbol 🕉 om ✡️ star_of_david ☸️ wheel_of_dharma ☯️ yin_yang ✝️ latin_cross ☦️ orthodox_cross ☪️ star_and_crescent ☮️ peace_symbol 🕎 menorah 🔯 six_pointed_star ","date":"2021-04-01","objectID":"/emoji%E6%94%AF%E6%8C%81/:8:4","series":null,"tags":["DoIt"],"title":"Emoji 支持","uri":"/emoji%E6%94%AF%E6%8C%81/#宗教"},{"categories":["DoIt文档"],"content":"生肖 图标 代码 图标 代码 ♈ aries ♉ taurus ♊ gemini ♋ cancer ♌ leo ♍ virgo ♎ libra ♏ scorpius ♐ sagittarius ♑ capricorn ♒ aquarius ♓ pisces ⛎ ophiuchus ","date":"2021-04-01","objectID":"/emoji%E6%94%AF%E6%8C%81/:8:5","series":null,"tags":["DoIt"],"title":"Emoji 支持","uri":"/emoji%E6%94%AF%E6%8C%81/#生肖"},{"categories":["DoIt文档"],"content":"影像符号 图标 代码 图标 代码 🔀 twisted_rightwards_arrows 🔁 repeat 🔂 repeat_one ▶️ arrow_forward ⏩ fast_forward ⏭ next_track_button ⏯ play_or_pause_button ◀️ arrow_backward ⏪ rewind ⏮️ previous_track_button 🔼 arrow_up_small ⏫ arrow_double_up 🔽 arrow_down_small ⏬ arrow_double_down ⏸ pause_button ⏹ stop_button ⏺ record_button 🎦 cinema 🔅 low_brightness 🔆 high_brightness 📶 signal_strength 📳 vibration_mode 📴 mobile_phone_off ","date":"2021-04-01","objectID":"/emoji%E6%94%AF%E6%8C%81/:8:6","series":null,"tags":["DoIt"],"title":"Emoji 支持","uri":"/emoji%E6%94%AF%E6%8C%81/#影像符号"},{"categories":["DoIt文档"],"content":"数学 图标 代码 图标 代码 ✖️ heavy_multiplication_x ➕ heavy_plus_sign ➖ heavy_minus_sign ➗ heavy_division_sign ","date":"2021-04-01","objectID":"/emoji%E6%94%AF%E6%8C%81/:8:7","series":null,"tags":["DoIt"],"title":"Emoji 支持","uri":"/emoji%E6%94%AF%E6%8C%81/#数学"},{"categories":["DoIt文档"],"content":"标点符号 图标 代码 图标 代码 ‼️ bangbang ⁉️ interrobang ❓ question ❔ grey_question ❕ grey_exclamation ❗ exclamation heavy_exclamation_mark 〰️ wavy_dash ","date":"2021-04-01","objectID":"/emoji%E6%94%AF%E6%8C%81/:8:8","series":null,"tags":["DoIt"],"title":"Emoji 支持","uri":"/emoji%E6%94%AF%E6%8C%81/#标点符号"},{"categories":["DoIt文档"],"content":"货币 图标 代码 图标 代码 💱 currency_exchange 💲 heavy_dollar_sign ","date":"2021-04-01","objectID":"/emoji%E6%94%AF%E6%8C%81/:8:9","series":null,"tags":["DoIt"],"title":"Emoji 支持","uri":"/emoji%E6%94%AF%E6%8C%81/#货币"},{"categories":["DoIt文档"],"content":"按键符号 图标 代码 图标 代码 #️⃣ hash *️⃣ asterisk 0️⃣ zero 1️⃣ one 2️⃣ two 3️⃣ three 4️⃣ four 5️⃣ five 6️⃣ six 7️⃣ seven 8️⃣ eight 9️⃣ nine 🔟 keycap_ten ","date":"2021-04-01","objectID":"/emoji%E6%94%AF%E6%8C%81/:8:10","series":null,"tags":["DoIt"],"title":"Emoji 支持","uri":"/emoji%E6%94%AF%E6%8C%81/#按键符号"},{"categories":["DoIt文档"],"content":"字母符号 图标 代码 图标 代码 🔠 capital_abcd 🔡 abcd 🔢 1234 🔣 symbols 🔤 abc 🅰️ a 🆎 ab 🅱️ b 🆑 cl 🆒 cool 🆓 free ℹ️ information_source 🆔 id ⓜ️ m 🆕 new 🆖 ng 🅾️ o2 🆗 ok 🅿️ parking 🆘 sos 🆙 up 🆚 vs 🈁 koko 🈂️ sa 🈷️ u6708 🈶 u6709 🈯 u6307 🉐 ideograph_advantage 🈹 u5272 🈚 u7121 🈲 u7981 🉑 accept 🈸 u7533 🈴 u5408 🈳 u7a7a ㊗️ congratulations ㊙️ secret 🈺 u55b6 🈵 u6e80 ","date":"2021-04-01","objectID":"/emoji%E6%94%AF%E6%8C%81/:8:11","series":null,"tags":["DoIt"],"title":"Emoji 支持","uri":"/emoji%E6%94%AF%E6%8C%81/#字母符号"},{"categories":["DoIt文档"],"content":"几何符号 图标 代码 图标 代码 🔴 red_circle 🔵 large_blue_circle ⚫ black_circle ⚪ white_circle ⬛ black_large_square ⬜ white_large_square ◼️ black_medium_square ◻️ white_medium_square ◾ black_medium_small_square ◽ white_medium_small_square ▪️ black_small_square ▫️ white_small_square 🔶 large_orange_diamond 🔷 large_blue_diamond 🔸 small_orange_diamond 🔹 small_blue_diamond 🔺 small_red_triangle 🔻 small_red_triangle_down 💠 diamond_shape_with_a_dot_inside 🔘 radio_button 🔳 white_square_button 🔲 black_square_button ","date":"2021-04-01","objectID":"/emoji%E6%94%AF%E6%8C%81/:8:12","series":null,"tags":["DoIt"],"title":"Emoji 支持","uri":"/emoji%E6%94%AF%E6%8C%81/#几何符号"},{"categories":["DoIt文档"],"content":"其它符合 图标 代码 图标 代码 ♻️ recycle ⚜️ fleur_de_lis 🔱 trident 📛 name_badge 🔰 beginner ⭕ o ✅ white_check_mark ☑️ ballot_box_with_check ✔️ heavy_check_mark ❌ x ❎ negative_squared_cross_mark ➰ curly_loop ➿ loop 〽️ part_alternation_mark ✳️ eight_spoked_asterisk ✴️ eight_pointed_black_star ❇️ sparkle ©️ copyright ®️ registered ™️ tm ","date":"2021-04-01","objectID":"/emoji%E6%94%AF%E6%8C%81/:8:13","series":null,"tags":["DoIt"],"title":"Emoji 支持","uri":"/emoji%E6%94%AF%E6%8C%81/#其它符合"},{"categories":["DoIt文档"],"content":"旗帜 ","date":"2021-04-01","objectID":"/emoji%E6%94%AF%E6%8C%81/:9:0","series":null,"tags":["DoIt"],"title":"Emoji 支持","uri":"/emoji%E6%94%AF%E6%8C%81/#旗帜"},{"categories":["DoIt文档"],"content":"常用旗帜 图标 代码 图标 代码 🏁 checkered_flag 🚩 triangular_flag_on_post 🎌 crossed_flags 🏴 black_flag 🏳 white_flag 🏳️‍🌈 rainbow_flag ","date":"2021-04-01","objectID":"/emoji%E6%94%AF%E6%8C%81/:9:1","series":null,"tags":["DoIt"],"title":"Emoji 支持","uri":"/emoji%E6%94%AF%E6%8C%81/#常用旗帜"},{"categories":["DoIt文档"],"content":"国家和地区旗帜 图标 代码 图标 代码 🇦🇩 andorra 🇦🇪 united_arab_emirates 🇦🇫 afghanistan 🇦🇬 antigua_barbuda 🇦🇮 anguilla 🇦🇱 albania 🇦🇲 armenia 🇦🇴 angola 🇦🇶 antarctica 🇦🇷 argentina 🇦🇸 american_samoa 🇦🇹 austria 🇦🇺 australia 🇦🇼 aruba 🇦🇽 aland_islands 🇦🇿 azerbaijan 🇧🇦 bosnia_herzegovina 🇧🇧 barbados 🇧🇩 bangladesh 🇧🇪 belgium 🇧🇫 burkina_faso 🇧🇬 bulgaria 🇧🇭 bahrain 🇧🇮 burundi 🇧🇯 benin 🇧🇱 st_barthelemy 🇧🇲 bermuda 🇧🇳 brunei 🇧🇴 bolivia 🇧🇶 caribbean_netherlands 🇧🇷 brazil 🇧🇸 bahamas 🇧🇹 bhutan 🇧🇼 botswana 🇧🇾 belarus 🇧🇿 belize 🇨🇦 canada 🇨🇨 cocos_islands 🇨🇩 congo_kinshasa 🇨🇫 central_african_republic 🇨🇬 congo_brazzaville 🇨🇭 switzerland 🇨🇮 cote_divoire 🇨🇰 cook_islands 🇨🇱 chile 🇨🇲 cameroon 🇨🇳 cn 🇨🇴 colombia 🇨🇷 costa_rica 🇨🇺 cuba 🇨🇻 cape_verde 🇨🇼 curacao 🇨🇽 christmas_island 🇨🇾 cyprus 🇨🇿 czech_republic 🇩🇪 de 🇩🇯 djibouti 🇩🇰 denmark 🇩🇲 dominica 🇩🇴 dominican_republic 🇩🇿 algeria 🇪🇨 ecuador 🇪🇪 estonia 🇪🇬 egypt 🇪🇭 western_sahara 🇪🇷 eritrea 🇪🇸 es 🇪🇹 ethiopia 🇪🇺 eu european_union 🇫🇮 finland 🇫🇯 fiji 🇫🇰 falkland_islands 🇫🇲 micronesia 🇫🇴 faroe_islands 🇫🇷 fr 🇬🇦 gabon 🇬🇧 gb uk 🇬🇩 grenada 🇬🇪 georgia 🇬🇫 french_guiana 🇬🇬 guernsey 🇬🇭 ghana 🇬🇮 gibraltar 🇬🇱 greenland 🇬🇲 gambia 🇬🇳 guinea 🇬🇵 guadeloupe 🇬🇶 equatorial_guinea 🇬🇷 greece 🇬🇸 south_georgia_south_sandwich_islands 🇬🇹 guatemala 🇬🇺 guam 🇬🇼 guinea_bissau 🇬🇾 guyana 🇭🇰 hong_kong 🇭🇳 honduras 🇭🇷 croatia 🇭🇹 haiti 🇭🇺 hungary 🇮🇨 canary_islands 🇮🇩 indonesia 🇮🇪 ireland 🇮🇱 israel 🇮🇲 isle_of_man 🇮🇳 india 🇮🇴 british_indian_ocean_territory 🇮🇶 iraq 🇮🇷 iran 🇮🇸 iceland 🇮🇹 it 🇯🇪 jersey 🇯🇲 jamaica 🇯🇴 jordan 🇯🇵 jp 🇰🇪 kenya 🇰🇬 kyrgyzstan 🇰🇭 cambodia 🇰🇮 kiribati 🇰🇲 comoros 🇰🇳 st_kitts_nevis 🇰🇵 north_korea 🇰🇷 kr 🇰🇼 kuwait 🇰🇾 cayman_islands 🇰🇿 kazakhstan 🇱🇦 laos 🇱🇧 lebanon 🇱🇨 st_lucia 🇱🇮 liechtenstein 🇱🇰 sri_lanka 🇱🇷 liberia 🇱🇸 lesotho 🇱🇹 lithuania 🇱🇺 luxembourg 🇱🇻 latvia 🇱🇾 libya 🇲🇦 morocco 🇲🇨 monaco 🇲🇩 moldova 🇲🇪 montenegro 🇲🇬 madagascar 🇲🇭 marshall_islands 🇲🇰 macedonia 🇲🇱 mali 🇲🇲 myanmar 🇲🇳 mongolia 🇲🇴 macau 🇲🇵 northern_mariana_islands 🇲🇶 martinique 🇲🇷 mauritania 🇲🇸 montserrat 🇲🇹 malta 🇲🇺 mauritius 🇲🇻 maldives 🇲🇼 malawi 🇲🇽 mexico 🇲🇾 malaysia 🇲🇿 mozambique 🇳🇦 namibia 🇳🇨 new_caledonia 🇳🇪 niger 🇳🇫 norfolk_island 🇳🇬 nigeria 🇳🇮 nicaragua 🇳🇱 netherlands 🇳🇴 norway 🇳🇵 nepal 🇳🇷 nauru 🇳🇺 niue 🇳🇿 new_zealand 🇴🇲 oman 🇵🇦 panama 🇵🇪 peru 🇵🇫 french_polynesia 🇵🇬 papua_new_guinea 🇵🇭 philippines 🇵🇰 pakistan 🇵🇱 poland 🇵🇲 st_pierre_miquelon 🇵🇳 pitcairn_islands 🇵🇷 puerto_rico 🇵🇸 palestinian_territories 🇵🇹 portugal 🇵🇼 palau 🇵🇾 paraguay 🇶🇦 qatar 🇷🇪 reunion 🇷🇴 romania 🇷🇸 serbia 🇷🇺 ru 🇷🇼 rwanda 🇸🇦 saudi_arabia 🇸🇧 solomon_islands 🇸🇨 seychelles 🇸🇩 sudan 🇸🇪 sweden 🇸🇬 singapore 🇸🇭 st_helena 🇸🇮 slovenia 🇸🇰 slovakia 🇸🇱 sierra_leone 🇸🇲 san_marino 🇸🇳 senegal 🇸🇴 somalia 🇸🇷 suriname 🇸🇸 south_sudan 🇸🇹 sao_tome_principe 🇸🇻 el_salvador 🇸🇽 sint_maarten 🇸🇾 syria 🇸🇿 swaziland 🇹🇨 turks_caicos_islands 🇹🇩 chad 🇹🇫 french_southern_territories 🇹🇬 togo 🇹🇭 thailand 🇹🇯 tajikistan 🇹🇰 tokelau 🇹🇱 timor_leste 🇹🇲 turkmenistan 🇹🇳 tunisia 🇹🇴 tonga 🇹🇷 tr 🇹🇹 trinidad_tobago 🇹🇻 tuvalu 🇹🇼 taiwan 🇹🇿 tanzania 🇺🇦 ukraine 🇺🇬 uganda 🇺🇸 us 🇺🇾 uruguay 🇺🇿 uzbekistan 🇻🇦 vatican_city 🇻🇨 st_vincent_grenadines 🇻🇪 venezuela 🇻🇬 british_virgin_islands 🇻🇮 us_virgin_islands 🇻🇳 vietnam 🇻🇺 vanuatu 🇼🇫 wallis_futuna 🇼🇸 samoa 🇽🇰 kosovo 🇾🇪 yemen 🇾🇹 mayotte 🇿🇦 south_africa 🇿🇲 zambia 🇿🇼 zimbabwe ","date":"2021-04-01","objectID":"/emoji%E6%94%AF%E6%8C%81/:9:2","series":null,"tags":["DoIt"],"title":"Emoji 支持","uri":"/emoji%E6%94%AF%E6%8C%81/#国家和地区旗帜"},{"categories":["DoIt文档"],"content":"了解如何在 DoIt 主题中快速, 直观地创建和组织内容.","date":"2021-04-01","objectID":"/%E4%B8%BB%E9%A2%98%E6%96%87%E6%A1%A3%E5%86%85%E5%AE%B9/","series":null,"tags":["DoIt"],"title":"主题文档 - 内容","uri":"/%E4%B8%BB%E9%A2%98%E6%96%87%E6%A1%A3%E5%86%85%E5%AE%B9/"},{"categories":["DoIt文档"],"content":"了解如何在 DoIt 主题中快速, 直观地创建和组织内容. ","date":"2021-04-01","objectID":"/%E4%B8%BB%E9%A2%98%E6%96%87%E6%A1%A3%E5%86%85%E5%AE%B9/:0:0","series":null,"tags":["DoIt"],"title":"主题文档 - 内容","uri":"/%E4%B8%BB%E9%A2%98%E6%96%87%E6%A1%A3%E5%86%85%E5%AE%B9/#"},{"categories":["DoIt文档"],"content":"1 内容组织 以下是一些方便你清晰管理和生成文章的目录结构建议: 保持博客文章存放在 content/posts 目录, 例如: content/posts/我的第一篇文章.md 保持简单的静态页面存放在 content 目录, 例如: content/about.md 本地资源组织 本地资源引用 \u003cimg class=“lazyload version” data-src=\"/svg/version/0.2.10-new.min.svg\" data-srcset=\"/svg/version/0.2.10-new.min.svg, /svg/version/0.2.10-new.min.svg 1.5x, /svg/version/0.2.10-new.min.svg 2x\" data-sizes=“auto” alt=“DoIt 新增 | 0.2.10” title=“DoIt 新增 | 0.2.10” /\u003e 有三种方法来引用图片和音乐等本地资源: 使用页面包中的页面资源. 你可以使用适用于 Resources.GetMatch 的值或者直接使用相对于当前页面目录的文件路径来引用页面资源. 将本地资源放在 assets 目录中, 默认路径是 /assets. 引用资源的文件路径是相对于 assets 目录的. 将本地资源放在 static 目录中, 默认路径是 /static. 引用资源的文件路径是相对于 static 目录的. 引用的优先级符合以上的顺序. 在这个主题中的很多地方可以使用上面的本地资源引用, 例如 链接, 图片, image shortcode, music shortcode 和前置参数中的部分参数. 页面资源或者 assets 目录中的图片处理会在未来的版本中得到支持. 非常酷的功能! ","date":"2021-04-01","objectID":"/%E4%B8%BB%E9%A2%98%E6%96%87%E6%A1%A3%E5%86%85%E5%AE%B9/:1:0","series":null,"tags":["DoIt"],"title":"主题文档 - 内容","uri":"/%E4%B8%BB%E9%A2%98%E6%96%87%E6%A1%A3%E5%86%85%E5%AE%B9/#contents-organization"},{"categories":["DoIt文档"],"content":"2 作者配置 我们鼓励你在 mysite/data/authors 下创建你的作者个人资料 author_name.toml. 在你的资料中, 你可以添加个人链接, 邮箱, 以及支持 i18n 的姓名. 以下是 Alice.toml 的示例: link = \"https://alice.example.com\" email = \"alice@example.com\" name = \"Alice\" [zh-cn] name = \"爱丽丝\" 在创建作者个人资料后, 您可以在文章的前置参数中指定您的姓名. 之后, 该文章将自动著上你的名字, 并可以根据作者进行分类. ---authors:[Alice]--- 您也可以为一篇文章注明多个作者. ---authors:[Alice, Bob, Catherine]--- ","date":"2021-04-01","objectID":"/%E4%B8%BB%E9%A2%98%E6%96%87%E6%A1%A3%E5%86%85%E5%AE%B9/:2:0","series":null,"tags":["DoIt"],"title":"主题文档 - 内容","uri":"/%E4%B8%BB%E9%A2%98%E6%96%87%E6%A1%A3%E5%86%85%E5%AE%B9/#author-setup"},{"categories":["DoIt文档"],"content":"3 前置参数 Hugo 允许你在文章内容前面添加 yaml, toml 或者 json 格式的前置参数. 注意 不是所有的以下前置参数都必须在你的每篇文章中设置. 只有在文章的参数和你的 网站设置 中的 page 部分不一致时才有必要这么做. 这是一个前置参数例子: ---title:\"我的第一篇文章\"subtitle:\"\"date:2020-03-04T15:58:26+08:00lastmod:2020-03-04T15:58:26+08:00draft:trueauthors:[]description:\"\"license:\"\"images:[]tags:[]categories:[]series:[]series_weight:1seriesNavigation:truefeaturedImage:\"\"featuredImagePreview:\"\"hiddenFromHomePage:falsehiddenFromSearch:falsetwemoji:falselightgallery:trueruby:truefraction:truefontawesome:truelinkToMarkdown:truelinkToEdit:falserssFullText:falsetoc:enable:trueauto:truecode:copy:true# ...math:enable:true# ...mapbox:accessToken:\"\"# ...share:enable:true# ...comment:enable:true# ...library:css:# someCSS = \"some.css\"# 位于 \"assets/\"# 或者# someCSS = \"https://cdn.example.com/some.css\"js:# someJS = \"some.js\"# 位于 \"assets/\"# 或者# someJS = \"https://cdn.example.com/some.js\"seo:images:[]# ...outdatedArticleReminder:enable:false# ...sponsor:enable:false# ...--- title: 文章标题. subtitle: 文章副标题. date: 这篇文章创建的日期时间. 它通常是从文章的前置参数中的 date 字段获取的, 但是也可以在 网站配置 中设置. lastmod: 上次修改内容的日期时间. draft: 如果设为 true, 除非 hugo 命令使用了 --buildDrafts/-D 参数, 这篇文章不会被渲染. authors: 文章作者. description: 文章内容的描述. license: 这篇文章特殊的许可. images: 页面图片, 用于 Open Graph 和 Twitter Cards. tags: 文章的标签. categories: 文章所属的类别. series: 文章所属的系列. series_weight: 自定义文章在系列中的位置. seriesNavigation: 是否使用系列导航. featuredImage: 文章的特色图片. featuredImagePreview: 用在主页预览的文章特色图片. hiddenFromHomePage: 如果设为 true, 这篇文章将不会显示在主页上. hiddenFromSearch: 如果设为 true, 这篇文章将不会显示在搜索结果中. twemoji: 如果设为 true, 这篇文章会使用 twemoji. lightgallery: 如果设为 true, 文章中的图片将可以按照画廊形式呈现. ruby: 如果设为 true, 这篇文章会使用 上标注释扩展语法. fraction: 如果设为 true, 这篇文章会使用 分数扩展语法. fontawesome: 如果设为 true, 这篇文章会使用 Font Awesome 扩展语法. linkToMarkdown: 如果设为 true, 内容的页脚将显示指向原始 Markdown 文件的链接. linkToEdit: 如果设为 false, 则关闭页脚 编辑此页 的链接. 你可以将其设置为一个用于编辑这个页面的链接. 使用魔法变量 {path} 来获取这篇文章的相对路径, 这篇文章的 {path} 是 posts/theme-documentation-content/index.zh-cn.md. rssFullText: 如果设为 true, 在 RSS 中将会显示全文内容. pageStyle: 调整页面样式, 可选择\"normal\"或\"wide\". toc: 和 网站配置 中的 params.page.toc 部分相同. code: 和 网站配置 中的 params.page.code 部分相同. math: 和 网站配置 中的 params.page.math 部分相同. mapbox: 和 网站配置 中的 params.page.mapbox 部分相同. share: 和 网站配置 中的 params.page.share 部分相同. comment: 和 网站配置 中的 params.page.comment 部分相同. library: 和 网站配置 中的 params.page.library 部分相同. seo: 和 网站配置 中的 params.page.seo 部分相同. outdatedArticleReminder: 和 网站配置 中的 params.page.outdatedArticleReminder 部分相同. sponsor: 和 网站配置 中的 params.sponsor 部分相同. 技巧 \u003cimg class=“lazyload version” data-src=\"/svg/version/0.2.10-new.min.svg\" data-srcset=\"/svg/version/0.2.10-new.min.svg, /svg/version/0.2.10-new.min.svg 1.5x, /svg/version/0.2.10-new.min.svg 2x\" data-sizes=“auto” alt=“DoIt 新增 | 0.2.10” title=“DoIt 新增 | 0.2.10” /\u003e featuredImage 和 featuredImagePreview 支持本地资源引用的完整用法. 如果带有在前置参数中设置了 name: featured-image 或 name: featured-image-preview 属性的页面资源, 没有必要在设置 featuredImage 或 featuredImagePreview: resources:- name:featured-imagesrc:featured-image.jpg- name:featured-image-previewsrc:featured-image-preview.jpg ","date":"2021-04-01","objectID":"/%E4%B8%BB%E9%A2%98%E6%96%87%E6%A1%A3%E5%86%85%E5%AE%B9/:3:0","series":null,"tags":["DoIt"],"title":"主题文档 - 内容","uri":"/%E4%B8%BB%E9%A2%98%E6%96%87%E6%A1%A3%E5%86%85%E5%AE%B9/#front-matter"},{"categories":["DoIt文档"],"content":"4 内容摘要 DoIt 主题使用内容摘要在主页中显示大致文章信息. Hugo 支持生成文章的摘要. 文章摘要预览\" 文章摘要预览 ","date":"2021-04-01","objectID":"/%E4%B8%BB%E9%A2%98%E6%96%87%E6%A1%A3%E5%86%85%E5%AE%B9/:4:0","series":null,"tags":["DoIt"],"title":"主题文档 - 内容","uri":"/%E4%B8%BB%E9%A2%98%E6%96%87%E6%A1%A3%E5%86%85%E5%AE%B9/#4-内容摘要"},{"categories":["DoIt文档"],"content":"自动摘要拆分 默认情况下, Hugo 自动将内容的前 70 个单词作为摘要. 你可以通过在 网站配置 中设置 summaryLength 来自定义摘要长度. 如果您要使用 CJK中文/日语/韩语 语言创建内容, 并且想使用 Hugo 的自动摘要拆分功能, 请在 网站配置 中将 hasCJKLanguage 设置为 true. ","date":"2021-04-01","objectID":"/%E4%B8%BB%E9%A2%98%E6%96%87%E6%A1%A3%E5%86%85%E5%AE%B9/:4:1","series":null,"tags":["DoIt"],"title":"主题文档 - 内容","uri":"/%E4%B8%BB%E9%A2%98%E6%96%87%E6%A1%A3%E5%86%85%E5%AE%B9/#自动摘要拆分"},{"categories":["DoIt文档"],"content":"手动摘要拆分 另外, 你也可以添加 \u003c!--more--\u003e 摘要分割符来拆分文章生成摘要. 摘要分隔符之前的内容将用作该文章的摘要. 注意 请小心输入\u003c!--more--\u003e ; 即全部为小写且没有空格. ","date":"2021-04-01","objectID":"/%E4%B8%BB%E9%A2%98%E6%96%87%E6%A1%A3%E5%86%85%E5%AE%B9/:4:2","series":null,"tags":["DoIt"],"title":"主题文档 - 内容","uri":"/%E4%B8%BB%E9%A2%98%E6%96%87%E6%A1%A3%E5%86%85%E5%AE%B9/#手动摘要拆分"},{"categories":["DoIt文档"],"content":"前置参数摘要 你可能希望摘要不是文章开头的文字. 在这种情况下, 你可以在文章前置参数的 summary 变量中设置单独的摘要. ","date":"2021-04-01","objectID":"/%E4%B8%BB%E9%A2%98%E6%96%87%E6%A1%A3%E5%86%85%E5%AE%B9/:4:3","series":null,"tags":["DoIt"],"title":"主题文档 - 内容","uri":"/%E4%B8%BB%E9%A2%98%E6%96%87%E6%A1%A3%E5%86%85%E5%AE%B9/#前置参数摘要"},{"categories":["DoIt文档"],"content":"使用文章描述作为摘要 你可能希望将文章前置参数中的 description 变量的内容作为摘要. 你仍然需要在文章开头添加 \u003c!--more--\u003e 摘要分割符. 将摘要分隔符之前的内容保留为空. 然后 DoIt 主题会将你的文章描述作为摘要. ","date":"2021-04-01","objectID":"/%E4%B8%BB%E9%A2%98%E6%96%87%E6%A1%A3%E5%86%85%E5%AE%B9/:4:4","series":null,"tags":["DoIt"],"title":"主题文档 - 内容","uri":"/%E4%B8%BB%E9%A2%98%E6%96%87%E6%A1%A3%E5%86%85%E5%AE%B9/#使用文章描述作为摘要"},{"categories":["DoIt文档"],"content":"摘要选择的优先级顺序 由于可以通过多种方式指定摘要, 因此了解顺序很有用. 如下: 如果文章中有 \u003c!--more--\u003e 摘要分隔符, 但分隔符之前没有内容, 则使用描述作为摘要. 如果文章中有 \u003c!--more--\u003e 摘要分隔符, 则将按照手动摘要拆分的方法获得摘要. 如果文章前置参数中有摘要变量, 那么将以该值作为摘要. 按照自动摘要拆分方法. 注意 不建议在摘要内容中包含富文本块元素, 这会导致渲染错误. 例如代码块, 图片, 表格等. ","date":"2021-04-01","objectID":"/%E4%B8%BB%E9%A2%98%E6%96%87%E6%A1%A3%E5%86%85%E5%AE%B9/:4:5","series":null,"tags":["DoIt"],"title":"主题文档 - 内容","uri":"/%E4%B8%BB%E9%A2%98%E6%96%87%E6%A1%A3%E5%86%85%E5%AE%B9/#摘要选择的优先级顺序"},{"categories":["DoIt文档"],"content":"5 Markdown 基本语法 这部分内容在 Markdown 基本语法页面 中介绍. ","date":"2021-04-01","objectID":"/%E4%B8%BB%E9%A2%98%E6%96%87%E6%A1%A3%E5%86%85%E5%AE%B9/:5:0","series":null,"tags":["DoIt"],"title":"主题文档 - 内容","uri":"/%E4%B8%BB%E9%A2%98%E6%96%87%E6%A1%A3%E5%86%85%E5%AE%B9/#5-markdown-基本语法"},{"categories":["DoIt文档"],"content":"6 Markdown 扩展语法 DoIt 主题提供了一些扩展的语法便于你撰写文章. ","date":"2021-04-01","objectID":"/%E4%B8%BB%E9%A2%98%E6%96%87%E6%A1%A3%E5%86%85%E5%AE%B9/:6:0","series":null,"tags":["DoIt"],"title":"主题文档 - 内容","uri":"/%E4%B8%BB%E9%A2%98%E6%96%87%E6%A1%A3%E5%86%85%E5%AE%B9/#extended-markdown-syntax"},{"categories":["DoIt文档"],"content":"Emoji 支持 这部分内容在 Emoji 支持页面 中介绍. ","date":"2021-04-01","objectID":"/%E4%B8%BB%E9%A2%98%E6%96%87%E6%A1%A3%E5%86%85%E5%AE%B9/:6:1","series":null,"tags":["DoIt"],"title":"主题文档 - 内容","uri":"/%E4%B8%BB%E9%A2%98%E6%96%87%E6%A1%A3%E5%86%85%E5%AE%B9/#emoji-支持"},{"categories":["DoIt文档"],"content":"数学公式 DoIt 基于 $ \\KaTeX $ 提供数学公式的支持. 在你的 网站配置 中的 [params.math] 下面设置属性 enable = true, 并在文章的前置参数中设置属性 math: true来启用数学公式的自动渲染. 技巧 有一份 $ \\KaTeX $ 中支持的 $ \\TeX $ 函数 清单. 公式块 默认的公式块分割符是 $$/$$ 和 \\\\[/\\\\]: $$ c = \\pm\\sqrt{a^2 + b^2} $$ \\\\[ f(x)=\\int_{-\\infty}^{\\infty} \\hat{f}(\\xi) e^{2 \\pi i \\xi x} d \\xi \\\\] 呈现的输出效果如下: $$ c = \\pm\\sqrt{a^2 + b^2} $$ \\[ f(x)=\\int_{-\\infty}^{\\infty} \\hat{f}(\\xi) e^{2 \\pi i \\xi x} d \\xi \\] 行内公式 默认的行内公式分割符是 $/$ 和 \\\\(/\\\\): $ c = \\pm\\sqrt{a^2 + b^2} $ 和 \\\\( f(x)=\\int_{-\\infty}^{\\infty} \\hat{f}(\\xi) e^{2 \\pi i \\xi x} d \\xi \\\\) 呈现的输出效果如下: $ c = \\pm\\sqrt{a^2 + b^2} $ 和 \\( f(x)=\\int_{-\\infty}^{\\infty} \\hat{f}(\\xi) e^{2 \\pi i \\xi x} d \\xi \\) 技巧 你可以在 网站配置 中自定义公式块和行内公式的分割符. 信息 你可以使用 math shortcode 以避免特殊字符造成问题. Copy-tex Copy-tex 是一个 $ \\KaTeX $ 的插件. 通过这个扩展, 在选择并复制 $ \\KaTeX $ 渲染的公式时, 会将其 $ \\LaTeX $ 源代码复制到剪贴板. 在你的 网站配置 中的 [params.math] 下面设置属性 copyTex = true 来启用 Copy-tex. 选择并复制上一节中渲染的公式, 可以发现复制的内容为 LaTeX 源代码. mhchem mhchem 是一个 $ \\KaTeX $ 的插件. 通过这个扩展, 你可以在文章中轻松编写漂亮的化学方程式. 在你的 网站配置 中的 [params.math] 下面设置属性 mhchem = true 来启用 mhchem. $$ \\ce{CO2 + C -\u003e 2 CO} $$ $$ \\ce{Hg^2+ -\u003e[I-] HgI2 -\u003e[I-] [Hg^{II}I4]^2-} $$ 呈现的输出效果如下: $$ \\ce{CO2 + C -\u003e 2 CO} $$ $$ \\ce{Hg^2+ -\u003e[I-] HgI2 -\u003e[I-] [Hg^{II}I4]^2-} $$ ","date":"2021-04-01","objectID":"/%E4%B8%BB%E9%A2%98%E6%96%87%E6%A1%A3%E5%86%85%E5%AE%B9/:6:2","series":null,"tags":["DoIt"],"title":"主题文档 - 内容","uri":"/%E4%B8%BB%E9%A2%98%E6%96%87%E6%A1%A3%E5%86%85%E5%AE%B9/#数学公式"},{"categories":["DoIt文档"],"content":"数学公式 DoIt 基于 $ \\KaTeX $ 提供数学公式的支持. 在你的 网站配置 中的 [params.math] 下面设置属性 enable = true, 并在文章的前置参数中设置属性 math: true来启用数学公式的自动渲染. 技巧 有一份 $ \\KaTeX $ 中支持的 $ \\TeX $ 函数 清单. 公式块 默认的公式块分割符是 $$/$$ 和 \\\\[/\\\\]: $$ c = \\pm\\sqrt{a^2 + b^2} $$ \\\\[ f(x)=\\int_{-\\infty}^{\\infty} \\hat{f}(\\xi) e^{2 \\pi i \\xi x} d \\xi \\\\] 呈现的输出效果如下: $$ c = \\pm\\sqrt{a^2 + b^2} $$ \\[ f(x)=\\int_{-\\infty}^{\\infty} \\hat{f}(\\xi) e^{2 \\pi i \\xi x} d \\xi \\] 行内公式 默认的行内公式分割符是 $/$ 和 \\\\(/\\\\): $ c = \\pm\\sqrt{a^2 + b^2} $ 和 \\\\( f(x)=\\int_{-\\infty}^{\\infty} \\hat{f}(\\xi) e^{2 \\pi i \\xi x} d \\xi \\\\) 呈现的输出效果如下: $ c = \\pm\\sqrt{a^2 + b^2} $ 和 \\( f(x)=\\int_{-\\infty}^{\\infty} \\hat{f}(\\xi) e^{2 \\pi i \\xi x} d \\xi \\) 技巧 你可以在 网站配置 中自定义公式块和行内公式的分割符. 信息 你可以使用 math shortcode 以避免特殊字符造成问题. Copy-tex Copy-tex 是一个 $ \\KaTeX $ 的插件. 通过这个扩展, 在选择并复制 $ \\KaTeX $ 渲染的公式时, 会将其 $ \\LaTeX $ 源代码复制到剪贴板. 在你的 网站配置 中的 [params.math] 下面设置属性 copyTex = true 来启用 Copy-tex. 选择并复制上一节中渲染的公式, 可以发现复制的内容为 LaTeX 源代码. mhchem mhchem 是一个 $ \\KaTeX $ 的插件. 通过这个扩展, 你可以在文章中轻松编写漂亮的化学方程式. 在你的 网站配置 中的 [params.math] 下面设置属性 mhchem = true 来启用 mhchem. $$ \\ce{CO2 + C - 2 CO} $$ $$ \\ce{Hg^2+ -[I-] HgI2 -[I-] [Hg^{II}I4]^2-} $$ 呈现的输出效果如下: $$ \\ce{CO2 + C - 2 CO} $$ $$ \\ce{Hg^2+ -[I-] HgI2 -[I-] [Hg^{II}I4]^2-} $$ ","date":"2021-04-01","objectID":"/%E4%B8%BB%E9%A2%98%E6%96%87%E6%A1%A3%E5%86%85%E5%AE%B9/:6:2","series":null,"tags":["DoIt"],"title":"主题文档 - 内容","uri":"/%E4%B8%BB%E9%A2%98%E6%96%87%E6%A1%A3%E5%86%85%E5%AE%B9/#公式块"},{"categories":["DoIt文档"],"content":"数学公式 DoIt 基于 $ \\KaTeX $ 提供数学公式的支持. 在你的 网站配置 中的 [params.math] 下面设置属性 enable = true, 并在文章的前置参数中设置属性 math: true来启用数学公式的自动渲染. 技巧 有一份 $ \\KaTeX $ 中支持的 $ \\TeX $ 函数 清单. 公式块 默认的公式块分割符是 $$/$$ 和 \\\\[/\\\\]: $$ c = \\pm\\sqrt{a^2 + b^2} $$ \\\\[ f(x)=\\int_{-\\infty}^{\\infty} \\hat{f}(\\xi) e^{2 \\pi i \\xi x} d \\xi \\\\] 呈现的输出效果如下: $$ c = \\pm\\sqrt{a^2 + b^2} $$ \\[ f(x)=\\int_{-\\infty}^{\\infty} \\hat{f}(\\xi) e^{2 \\pi i \\xi x} d \\xi \\] 行内公式 默认的行内公式分割符是 $/$ 和 \\\\(/\\\\): $ c = \\pm\\sqrt{a^2 + b^2} $ 和 \\\\( f(x)=\\int_{-\\infty}^{\\infty} \\hat{f}(\\xi) e^{2 \\pi i \\xi x} d \\xi \\\\) 呈现的输出效果如下: $ c = \\pm\\sqrt{a^2 + b^2} $ 和 \\( f(x)=\\int_{-\\infty}^{\\infty} \\hat{f}(\\xi) e^{2 \\pi i \\xi x} d \\xi \\) 技巧 你可以在 网站配置 中自定义公式块和行内公式的分割符. 信息 你可以使用 math shortcode 以避免特殊字符造成问题. Copy-tex Copy-tex 是一个 $ \\KaTeX $ 的插件. 通过这个扩展, 在选择并复制 $ \\KaTeX $ 渲染的公式时, 会将其 $ \\LaTeX $ 源代码复制到剪贴板. 在你的 网站配置 中的 [params.math] 下面设置属性 copyTex = true 来启用 Copy-tex. 选择并复制上一节中渲染的公式, 可以发现复制的内容为 LaTeX 源代码. mhchem mhchem 是一个 $ \\KaTeX $ 的插件. 通过这个扩展, 你可以在文章中轻松编写漂亮的化学方程式. 在你的 网站配置 中的 [params.math] 下面设置属性 mhchem = true 来启用 mhchem. $$ \\ce{CO2 + C - 2 CO} $$ $$ \\ce{Hg^2+ -[I-] HgI2 -[I-] [Hg^{II}I4]^2-} $$ 呈现的输出效果如下: $$ \\ce{CO2 + C - 2 CO} $$ $$ \\ce{Hg^2+ -[I-] HgI2 -[I-] [Hg^{II}I4]^2-} $$ ","date":"2021-04-01","objectID":"/%E4%B8%BB%E9%A2%98%E6%96%87%E6%A1%A3%E5%86%85%E5%AE%B9/:6:2","series":null,"tags":["DoIt"],"title":"主题文档 - 内容","uri":"/%E4%B8%BB%E9%A2%98%E6%96%87%E6%A1%A3%E5%86%85%E5%AE%B9/#行内公式"},{"categories":["DoIt文档"],"content":"数学公式 DoIt 基于 $ \\KaTeX $ 提供数学公式的支持. 在你的 网站配置 中的 [params.math] 下面设置属性 enable = true, 并在文章的前置参数中设置属性 math: true来启用数学公式的自动渲染. 技巧 有一份 $ \\KaTeX $ 中支持的 $ \\TeX $ 函数 清单. 公式块 默认的公式块分割符是 $$/$$ 和 \\\\[/\\\\]: $$ c = \\pm\\sqrt{a^2 + b^2} $$ \\\\[ f(x)=\\int_{-\\infty}^{\\infty} \\hat{f}(\\xi) e^{2 \\pi i \\xi x} d \\xi \\\\] 呈现的输出效果如下: $$ c = \\pm\\sqrt{a^2 + b^2} $$ \\[ f(x)=\\int_{-\\infty}^{\\infty} \\hat{f}(\\xi) e^{2 \\pi i \\xi x} d \\xi \\] 行内公式 默认的行内公式分割符是 $/$ 和 \\\\(/\\\\): $ c = \\pm\\sqrt{a^2 + b^2} $ 和 \\\\( f(x)=\\int_{-\\infty}^{\\infty} \\hat{f}(\\xi) e^{2 \\pi i \\xi x} d \\xi \\\\) 呈现的输出效果如下: $ c = \\pm\\sqrt{a^2 + b^2} $ 和 \\( f(x)=\\int_{-\\infty}^{\\infty} \\hat{f}(\\xi) e^{2 \\pi i \\xi x} d \\xi \\) 技巧 你可以在 网站配置 中自定义公式块和行内公式的分割符. 信息 你可以使用 math shortcode 以避免特殊字符造成问题. Copy-tex Copy-tex 是一个 $ \\KaTeX $ 的插件. 通过这个扩展, 在选择并复制 $ \\KaTeX $ 渲染的公式时, 会将其 $ \\LaTeX $ 源代码复制到剪贴板. 在你的 网站配置 中的 [params.math] 下面设置属性 copyTex = true 来启用 Copy-tex. 选择并复制上一节中渲染的公式, 可以发现复制的内容为 LaTeX 源代码. mhchem mhchem 是一个 $ \\KaTeX $ 的插件. 通过这个扩展, 你可以在文章中轻松编写漂亮的化学方程式. 在你的 网站配置 中的 [params.math] 下面设置属性 mhchem = true 来启用 mhchem. $$ \\ce{CO2 + C - 2 CO} $$ $$ \\ce{Hg^2+ -[I-] HgI2 -[I-] [Hg^{II}I4]^2-} $$ 呈现的输出效果如下: $$ \\ce{CO2 + C - 2 CO} $$ $$ \\ce{Hg^2+ -[I-] HgI2 -[I-] [Hg^{II}I4]^2-} $$ ","date":"2021-04-01","objectID":"/%E4%B8%BB%E9%A2%98%E6%96%87%E6%A1%A3%E5%86%85%E5%AE%B9/:6:2","series":null,"tags":["DoIt"],"title":"主题文档 - 内容","uri":"/%E4%B8%BB%E9%A2%98%E6%96%87%E6%A1%A3%E5%86%85%E5%AE%B9/#copy-tex"},{"categories":["DoIt文档"],"content":"数学公式 DoIt 基于 $ \\KaTeX $ 提供数学公式的支持. 在你的 网站配置 中的 [params.math] 下面设置属性 enable = true, 并在文章的前置参数中设置属性 math: true来启用数学公式的自动渲染. 技巧 有一份 $ \\KaTeX $ 中支持的 $ \\TeX $ 函数 清单. 公式块 默认的公式块分割符是 $$/$$ 和 \\\\[/\\\\]: $$ c = \\pm\\sqrt{a^2 + b^2} $$ \\\\[ f(x)=\\int_{-\\infty}^{\\infty} \\hat{f}(\\xi) e^{2 \\pi i \\xi x} d \\xi \\\\] 呈现的输出效果如下: $$ c = \\pm\\sqrt{a^2 + b^2} $$ \\[ f(x)=\\int_{-\\infty}^{\\infty} \\hat{f}(\\xi) e^{2 \\pi i \\xi x} d \\xi \\] 行内公式 默认的行内公式分割符是 $/$ 和 \\\\(/\\\\): $ c = \\pm\\sqrt{a^2 + b^2} $ 和 \\\\( f(x)=\\int_{-\\infty}^{\\infty} \\hat{f}(\\xi) e^{2 \\pi i \\xi x} d \\xi \\\\) 呈现的输出效果如下: $ c = \\pm\\sqrt{a^2 + b^2} $ 和 \\( f(x)=\\int_{-\\infty}^{\\infty} \\hat{f}(\\xi) e^{2 \\pi i \\xi x} d \\xi \\) 技巧 你可以在 网站配置 中自定义公式块和行内公式的分割符. 信息 你可以使用 math shortcode 以避免特殊字符造成问题. Copy-tex Copy-tex 是一个 $ \\KaTeX $ 的插件. 通过这个扩展, 在选择并复制 $ \\KaTeX $ 渲染的公式时, 会将其 $ \\LaTeX $ 源代码复制到剪贴板. 在你的 网站配置 中的 [params.math] 下面设置属性 copyTex = true 来启用 Copy-tex. 选择并复制上一节中渲染的公式, 可以发现复制的内容为 LaTeX 源代码. mhchem mhchem 是一个 $ \\KaTeX $ 的插件. 通过这个扩展, 你可以在文章中轻松编写漂亮的化学方程式. 在你的 网站配置 中的 [params.math] 下面设置属性 mhchem = true 来启用 mhchem. $$ \\ce{CO2 + C - 2 CO} $$ $$ \\ce{Hg^2+ -[I-] HgI2 -[I-] [Hg^{II}I4]^2-} $$ 呈现的输出效果如下: $$ \\ce{CO2 + C - 2 CO} $$ $$ \\ce{Hg^2+ -[I-] HgI2 -[I-] [Hg^{II}I4]^2-} $$ ","date":"2021-04-01","objectID":"/%E4%B8%BB%E9%A2%98%E6%96%87%E6%A1%A3%E5%86%85%E5%AE%B9/:6:2","series":null,"tags":["DoIt"],"title":"主题文档 - 内容","uri":"/%E4%B8%BB%E9%A2%98%E6%96%87%E6%A1%A3%E5%86%85%E5%AE%B9/#mhchem"},{"categories":["DoIt文档"],"content":"字符注音或者注释 DoIt 主题支持一种 字符注音或者注释 Markdown 扩展语法: [Hugo]^(一个开源的静态网站生成工具) 呈现的输出效果如下: Hugo一个开源的静态网站生成工具 ","date":"2021-04-01","objectID":"/%E4%B8%BB%E9%A2%98%E6%96%87%E6%A1%A3%E5%86%85%E5%AE%B9/:6:3","series":null,"tags":["DoIt"],"title":"主题文档 - 内容","uri":"/%E4%B8%BB%E9%A2%98%E6%96%87%E6%A1%A3%E5%86%85%E5%AE%B9/#ruby"},{"categories":["DoIt文档"],"content":"分数 DoIt 主题支持一种 分数 Markdown 扩展语法: [浅色]/[深色] [99]/[100] 呈现的输出效果如下: 浅色/深色 90/100 ","date":"2021-04-01","objectID":"/%E4%B8%BB%E9%A2%98%E6%96%87%E6%A1%A3%E5%86%85%E5%AE%B9/:6:4","series":null,"tags":["DoIt"],"title":"主题文档 - 内容","uri":"/%E4%B8%BB%E9%A2%98%E6%96%87%E6%A1%A3%E5%86%85%E5%AE%B9/#fraction"},{"categories":["DoIt文档"],"content":"Font Awesome DoIt 主题使用 Font Awesome 作为图标库. 你同样可以在文章中轻松使用这些图标. 从 Font Awesome 网站 上获取所需的图标 class. 去露营啦! :(fas fa-campground fa-fw): 很快就回来. 真开心! :(far fa-grin-tears): 呈现的输出效果如下: 去露营啦!  很快就回来. 真开心! ","date":"2021-04-01","objectID":"/%E4%B8%BB%E9%A2%98%E6%96%87%E6%A1%A3%E5%86%85%E5%AE%B9/:6:5","series":null,"tags":["DoIt"],"title":"主题文档 - 内容","uri":"/%E4%B8%BB%E9%A2%98%E6%96%87%E6%A1%A3%E5%86%85%E5%AE%B9/#fontawesome"},{"categories":["DoIt文档"],"content":"转义字符 在某些特殊情况下 (编写这个主题文档时 ), 你的文章内容会与 Markdown 的基本或者扩展语法冲突, 并且无法避免. 转义字符语法可以帮助你渲染出想要的内容: {?X} -\u003e X 例如, 两个 : 会启用 emoji 语法. 但有时候这不是你想要的结果. 可以像这样使用转义字符语法: {?:}joy: 呈现的输出效果如下: :joy: 而不是 😂 技巧 这个方法可以间接解决一个还未解决的 Hugo 的 issue. 另一个例子是: [link{?]}(#escape-character) 呈现的输出效果如下: [link](#escape-character) 而不是 link. ","date":"2021-04-01","objectID":"/%E4%B8%BB%E9%A2%98%E6%96%87%E6%A1%A3%E5%86%85%E5%AE%B9/:6:6","series":null,"tags":["DoIt"],"title":"主题文档 - 内容","uri":"/%E4%B8%BB%E9%A2%98%E6%96%87%E6%A1%A3%E5%86%85%E5%AE%B9/#escape-character"},{"categories":["DoIt文档"],"content":"这篇文章展示了基本的 Markdown 语法和格式.","date":"2021-04-01","objectID":"/markdown%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/","series":null,"tags":["DoIt"],"title":"Markdown 基本语法","uri":"/markdown%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/"},{"categories":["DoIt文档"],"content":"这篇文章提供了可以在 Hugo 的文章中使用的基本 Markdown 语法示例. 注意 这篇文章借鉴了一篇很棒的来自 Grav 的文章. 如果你想了解 DoIt 主题的扩展 Markdown 语法, 请阅读扩展 Markdown 语法页面. 事实上, 编写 Web 内容很麻烦. WYSIWYG所见即所得 编辑器帮助减轻了这一任务. 但通常会导致代码太糟, 或更糟糕的是, 网页也会很丑. 没有通常伴随的所有复杂和丑陋的问题, Markdown 是一种更好的生成 HTML 内容的方式. 一些主要好处是: Markdown 简单易学, 几乎没有多余的字符, 因此编写内容也更快. 用 Markdown 书写时出错的机会更少. 可以产生有效的 XHTML 输出. 将内容和视觉显示保持分开, 这样就不会打乱网站的外观. 可以在你喜欢的任何文本编辑器或 Markdown 应用程序中编写内容. Markdown 使用起来很有趣! John Gruber, Markdown 的作者如是说: Markdown 格式的首要设计目标是更具可读性. 最初的想法是 Markdown 格式的文档应当以纯文本形式发布, 而不会看起来像被标签或格式说明所标记. 虽然 Markdown 的语法受到几种现有的文本到 HTML 转换工具的影响, 但 Markdown 语法的最大灵感来源是纯文本电子邮件的格式. – John Gruber 话不多说, 我们来回顾一下 Markdown 的主要语法以及生成的 HTML 样式! 技巧  将此页保存为书签, 以备将来参考! ","date":"2021-04-01","objectID":"/markdown%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/:0:0","series":null,"tags":["DoIt"],"title":"Markdown 基本语法","uri":"/markdown%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/#"},{"categories":["DoIt文档"],"content":"1 标题 从 h2 到 h6 的标题在每个级别上都加上一个 ＃: ## h2 标题 ### h3 标题 #### h4 标题 ##### h5 标题 ###### h6 标题 输出的 HTML 看起来像这样: \u003ch2\u003eh2 标题\u003c/h2\u003e \u003ch3\u003eh3 标题\u003c/h3\u003e \u003ch4\u003eh4 标题\u003c/h4\u003e \u003ch5\u003eh5 标题\u003c/h5\u003e \u003ch6\u003eh6 标题\u003c/h6\u003e 标题 ID 要添加自定义标题 ID, 请在与标题相同的行中将自定义 ID 放在花括号中: ### 一个很棒的标题 {#custom-id} 输出的 HTML 看起来像这样: \u003ch3 id=\"custom-id\"\u003e一个很棒的标题\u003c/h3\u003e ","date":"2021-04-01","objectID":"/markdown%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/:1:0","series":null,"tags":["DoIt"],"title":"Markdown 基本语法","uri":"/markdown%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/#1-标题"},{"categories":["DoIt文档"],"content":"2 注释 注释是和 HTML 兼容的： \u003c!-- 这是一段注释 --\u003e 不能看到以下的注释: ","date":"2021-04-01","objectID":"/markdown%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/:2:0","series":null,"tags":["DoIt"],"title":"Markdown 基本语法","uri":"/markdown%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/#2-注释"},{"categories":["DoIt文档"],"content":"3 水平线 HTML 中的 \u003chr\u003e 标签是用来在段落元素之间创建一个 “专题间隔” 的. 使用 Markdown, 你可以用以下方式创建一个 \u003chr\u003e 标签: ___: 三个连续的下划线 ---: 三个连续的破折号 ***: 三个连续的星号 呈现的输出效果如下: ","date":"2021-04-01","objectID":"/markdown%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/:3:0","series":null,"tags":["DoIt"],"title":"Markdown 基本语法","uri":"/markdown%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/#3-水平线"},{"categories":["DoIt文档"],"content":"4 段落 按照纯文本的方式书写段落, 纯文本在呈现的 HTML 中将用 \u003cp\u003e/\u003c/p\u003e 标签包裹. 如下段落: Lorem ipsum dolor sit amet, graecis denique ei vel, at duo primis mandamus. Et legere ocurreret pri, animal tacimates complectitur ad cum. Cu eum inermis inimicus efficiendi. Labore officiis his ex, soluta officiis concludaturque ei qui, vide sensibus vim ad. 输出的 HTML 看起来像这样: \u003cp\u003eLorem ipsum dolor sit amet, graecis denique ei vel, at duo primis mandamus. Et legere ocurreret pri, animal tacimates complectitur ad cum. Cu eum inermis inimicus efficiendi. Labore officiis his ex, soluta officiis concludaturque ei qui, vide sensibus vim ad.\u003c/p\u003e 可以使用一个空白行进行换行. ","date":"2021-04-01","objectID":"/markdown%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/:4:0","series":null,"tags":["DoIt"],"title":"Markdown 基本语法","uri":"/markdown%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/#4-段落"},{"categories":["DoIt文档"],"content":"5 内联 HTML 元素 如果你需要某个 HTML 标签 (带有一个类), 则可以简单地像这样使用: Markdown 格式的段落. \u003cdiv class=\"class\"\u003e 这是 \u003cb\u003eHTML\u003c/b\u003e \u003c/div\u003e Markdown 格式的段落. ","date":"2021-04-01","objectID":"/markdown%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/:5:0","series":null,"tags":["DoIt"],"title":"Markdown 基本语法","uri":"/markdown%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/#5-内联-html-元素"},{"categories":["DoIt文档"],"content":"6 强调 ","date":"2021-04-01","objectID":"/markdown%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/:6:0","series":null,"tags":["DoIt"],"title":"Markdown 基本语法","uri":"/markdown%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/#6-强调"},{"categories":["DoIt文档"],"content":"加粗 用于强调带有较粗字体的文本片段. 以下文本片段会被 渲染为粗体. **渲染为粗体** __渲染为粗体__ 输出的 HTML 看起来像这样: \u003cstrong\u003e渲染为粗体\u003c/strong\u003e ","date":"2021-04-01","objectID":"/markdown%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/:6:1","series":null,"tags":["DoIt"],"title":"Markdown 基本语法","uri":"/markdown%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/#加粗"},{"categories":["DoIt文档"],"content":"斜体 用于强调带有斜体的文本片段. 以下文本片段被 渲染为斜体. *渲染为斜体* _渲染为斜体_ 输出的 HTML 看起来像这样: \u003cem\u003e渲染为斜体\u003c/em\u003e ","date":"2021-04-01","objectID":"/markdown%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/:6:2","series":null,"tags":["DoIt"],"title":"Markdown 基本语法","uri":"/markdown%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/#斜体"},{"categories":["DoIt文档"],"content":"删除线 按照 GFMGitHub flavored Markdown 你可以使用删除线. ~~这段文本带有删除线.~~ 呈现的输出效果如下: 这段文本带有删除线. 输出的 HTML 看起来像这样: \u003cdel\u003e这段文本带有删除线.\u003c/del\u003e ","date":"2021-04-01","objectID":"/markdown%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/:6:3","series":null,"tags":["DoIt"],"title":"Markdown 基本语法","uri":"/markdown%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/#删除线"},{"categories":["DoIt文档"],"content":"组合 加粗, 斜体, 和删除线可以 组合使用. ***加粗和斜体*** ~~**删除线和加粗**~~ ~~*删除线和斜体*~~ ~~***加粗, 斜体和删除线***~~ 呈现的输出效果如下: 加粗和斜体 删除线和加粗 删除线和斜体 加粗, 斜体和删除线 输出的 HTML 看起来像这样: \u003cem\u003e\u003cstrong\u003e加粗和斜体\u003c/strong\u003e\u003c/em\u003e \u003cdel\u003e\u003cstrong\u003e删除线和加粗\u003c/strong\u003e\u003c/del\u003e \u003cdel\u003e\u003cem\u003e删除线和斜体\u003c/em\u003e\u003c/del\u003e \u003cdel\u003e\u003cem\u003e\u003cstrong\u003e加粗, 斜体和删除线\u003c/strong\u003e\u003c/em\u003e\u003c/del\u003e ","date":"2021-04-01","objectID":"/markdown%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/:6:4","series":null,"tags":["DoIt"],"title":"Markdown 基本语法","uri":"/markdown%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/#组合"},{"categories":["DoIt文档"],"content":"7 引用 用于在文档中引用其他来源的内容块. 在要引用的任何文本之前添加 \u003e: \u003e **Fusion Drive** combines a hard drive with a flash storage (solid-state drive) and presents it as a single logical volume with the space of both drives combined. 呈现的输出效果如下: Fusion Drive combines a hard drive with a flash storage (solid-state drive) and presents it as a single logical volume with the space of both drives combined. 输出的 HTML 看起来像这样: \u003cblockquote\u003e \u003cp\u003e \u003cstrong\u003eFusion Drive\u003c/strong\u003e combines a hard drive with a flash storage (solid-state drive) and presents it as a single logical volume with the space of both drives combined. \u003c/p\u003e \u003c/blockquote\u003e 引用也可以嵌套: \u003e Donec massa lacus, ultricies a ullamcorper in, fermentum sed augue. Nunc augue augue, aliquam non hendrerit ac, commodo vel nisi. \u003e\u003e Sed adipiscing elit vitae augue consectetur a gravida nunc vehicula. Donec auctor odio non est accumsan facilisis. Aliquam id turpis in dolor tincidunt mollis ac eu diam. 呈现的输出效果如下: Donec massa lacus, ultricies a ullamcorper in, fermentum sed augue. Nunc augue augue, aliquam non hendrerit ac, commodo vel nisi. Sed adipiscing elit vitae augue consectetur a gravida nunc vehicula. Donec auctor odio non est accumsan facilisis. Aliquam id turpis in dolor tincidunt mollis ac eu diam. ","date":"2021-04-01","objectID":"/markdown%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/:7:0","series":null,"tags":["DoIt"],"title":"Markdown 基本语法","uri":"/markdown%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/#7-引用"},{"categories":["DoIt文档"],"content":"8 列表 ","date":"2021-04-01","objectID":"/markdown%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/:8:0","series":null,"tags":["DoIt"],"title":"Markdown 基本语法","uri":"/markdown%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/#8-列表"},{"categories":["DoIt文档"],"content":"无序列表 一系列项的列表, 其中项的顺序没有明显关系. 你可以使用以下任何符号来表示无序列表中的项: * 一项内容 - 一项内容 + 一项内容 例如: * Lorem ipsum dolor sit amet * Consectetur adipiscing elit * Integer molestie lorem at massa * Facilisis in pretium nisl aliquet * Nulla volutpat aliquam velit * Phasellus iaculis neque * Purus sodales ultricies * Vestibulum laoreet porttitor sem * Ac tristique libero volutpat at * Faucibus porta lacus fringilla vel * Aenean sit amet erat nunc * Eget porttitor lorem 呈现的输出效果如下: Lorem ipsum dolor sit amet Consectetur adipiscing elit Integer molestie lorem at massa Facilisis in pretium nisl aliquet Nulla volutpat aliquam velit Phasellus iaculis neque Purus sodales ultricies Vestibulum laoreet porttitor sem Ac tristique libero volutpat at Faucibus porta lacus fringilla vel Aenean sit amet erat nunc Eget porttitor lorem 输出的 HTML 看起来像这样: \u003cul\u003e \u003cli\u003eLorem ipsum dolor sit amet\u003c/li\u003e \u003cli\u003eConsectetur adipiscing elit\u003c/li\u003e \u003cli\u003eInteger molestie lorem at massa\u003c/li\u003e \u003cli\u003eFacilisis in pretium nisl aliquet\u003c/li\u003e \u003cli\u003eNulla volutpat aliquam velit \u003cul\u003e \u003cli\u003ePhasellus iaculis neque\u003c/li\u003e \u003cli\u003ePurus sodales ultricies\u003c/li\u003e \u003cli\u003eVestibulum laoreet porttitor sem\u003c/li\u003e \u003cli\u003eAc tristique libero volutpat at\u003c/li\u003e \u003c/ul\u003e \u003c/li\u003e \u003cli\u003eFaucibus porta lacus fringilla vel\u003c/li\u003e \u003cli\u003eAenean sit amet erat nunc\u003c/li\u003e \u003cli\u003eEget porttitor lorem\u003c/li\u003e \u003c/ul\u003e ","date":"2021-04-01","objectID":"/markdown%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/:8:1","series":null,"tags":["DoIt"],"title":"Markdown 基本语法","uri":"/markdown%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/#无序列表"},{"categories":["DoIt文档"],"content":"有序列表 一系列项的列表, 其中项的顺序确实很重要. 1. Lorem ipsum dolor sit amet 2. Consectetur adipiscing elit 3. Integer molestie lorem at massa 4. Facilisis in pretium nisl aliquet 5. Nulla volutpat aliquam velit 6. Faucibus porta lacus fringilla vel 7. Aenean sit amet erat nunc 8. Eget porttitor lorem 呈现的输出效果如下: Lorem ipsum dolor sit amet Consectetur adipiscing elit Integer molestie lorem at massa Facilisis in pretium nisl aliquet Nulla volutpat aliquam velit Faucibus porta lacus fringilla vel Aenean sit amet erat nunc Eget porttitor lorem 输出的 HTML 看起来像这样: \u003col\u003e \u003cli\u003eLorem ipsum dolor sit amet\u003c/li\u003e \u003cli\u003eConsectetur adipiscing elit\u003c/li\u003e \u003cli\u003eInteger molestie lorem at massa\u003c/li\u003e \u003cli\u003eFacilisis in pretium nisl aliquet\u003c/li\u003e \u003cli\u003eNulla volutpat aliquam velit\u003c/li\u003e \u003cli\u003eFaucibus porta lacus fringilla vel\u003c/li\u003e \u003cli\u003eAenean sit amet erat nunc\u003c/li\u003e \u003cli\u003eEget porttitor lorem\u003c/li\u003e \u003c/ol\u003e 技巧 如果你对每一项使用 1., Markdown 将自动为每一项编号. 例如: 1. Lorem ipsum dolor sit amet 1. Consectetur adipiscing elit 1. Integer molestie lorem at massa 1. Facilisis in pretium nisl aliquet 1. Nulla volutpat aliquam velit 1. Faucibus porta lacus fringilla vel 1. Aenean sit amet erat nunc 1. Eget porttitor lorem 呈现的输出效果如下: Lorem ipsum dolor sit amet Consectetur adipiscing elit Integer molestie lorem at massa Facilisis in pretium nisl aliquet Nulla volutpat aliquam velit Faucibus porta lacus fringilla vel Aenean sit amet erat nunc Eget porttitor lorem ","date":"2021-04-01","objectID":"/markdown%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/:8:2","series":null,"tags":["DoIt"],"title":"Markdown 基本语法","uri":"/markdown%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/#有序列表"},{"categories":["DoIt文档"],"content":"任务列表 任务列表使你可以创建带有复选框的列表. 要创建任务列表, 请在任务列表项之前添加破折号 (-) 和带有空格的方括号 ([ ]). 要选择一个复选框, 请在方括号之间添加 x ([x]). - [x] Write the press release - [ ] Update the website - [ ] Contact the media 呈现的输出效果如下: Write the press release Update the website Contact the media ","date":"2021-04-01","objectID":"/markdown%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/:8:3","series":null,"tags":["DoIt"],"title":"Markdown 基本语法","uri":"/markdown%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/#任务列表"},{"categories":["DoIt文档"],"content":"9 代码 ","date":"2021-04-01","objectID":"/markdown%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/:9:0","series":null,"tags":["DoIt"],"title":"Markdown 基本语法","uri":"/markdown%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/#9-代码"},{"categories":["DoIt文档"],"content":"行内代码 用 ` 包装行内代码段. 在这个例子中, `\u003csection\u003e\u003c/section\u003e` 会被包裹成 **代码**. 呈现的输出效果如下: 在这个例子中, \u003csection\u003e\u003c/section\u003e 会被包裹成 代码. 输出的 HTML 看起来像这样: \u003cp\u003e 在这个例子中, \u003ccode\u003e\u0026lt;section\u0026gt;\u0026lt;/section\u0026gt;\u003c/code\u003e 会被包裹成 \u003cstrong\u003e代码\u003c/strong\u003e. \u003c/p\u003e ","date":"2021-04-01","objectID":"/markdown%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/:9:1","series":null,"tags":["DoIt"],"title":"Markdown 基本语法","uri":"/markdown%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/#行内代码"},{"categories":["DoIt文档"],"content":"缩进代码 将几行代码缩进至少四个空格, 例如: // Some comments line 1 of code line 2 of code line 3 of code 呈现的输出效果如下: // Some comments\rline 1 of code\rline 2 of code\rline 3 of code\r 输出的 HTML 看起来像这样: \u003cpre\u003e \u003ccode\u003e // Some comments line 1 of code line 2 of code line 3 of code \u003c/code\u003e \u003c/pre\u003e ","date":"2021-04-01","objectID":"/markdown%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/:9:2","series":null,"tags":["DoIt"],"title":"Markdown 基本语法","uri":"/markdown%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/#缩进代码"},{"categories":["DoIt文档"],"content":"围栏代码块 使用 “围栏” ``` 来生成一段带有语言属性的代码块. ```markdown Sample text here... ``` 输出的 HTML 看起来像这样: \u003cpre language-html\u003e \u003ccode\u003eSample text here...\u003c/code\u003e \u003c/pre\u003e ","date":"2021-04-01","objectID":"/markdown%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/:9:3","series":null,"tags":["DoIt"],"title":"Markdown 基本语法","uri":"/markdown%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/#围栏代码块"},{"categories":["DoIt文档"],"content":"语法高亮 GFMGitHub Flavored Markdown 也支持语法高亮. 要激活它, 只需在第一个代码 “围栏” 之后直接添加你要使用的语言的文件扩展名, ```js, 语法高亮显示将自动应用于渲染的 HTML 中. 例如, 在以下 JavaScript 代码中应用语法高亮: ```js grunt.initConfig({ assemble: { options: { assets: 'docs/assets', data: 'src/data/*.{json,yml}', helpers: 'src/custom-helpers.js', partials: ['src/partials/**/*.{hbs,md}'] }, pages: { options: { layout: 'default.hbs' }, files: { './': ['src/templates/pages/index.hbs'] } } } }; ``` 呈现的输出效果如下: grunt.initConfig({ assemble: { options: { assets: 'docs/assets', data: 'src/data/*.{json,yml}', helpers: 'src/custom-helpers.js', partials: ['src/partials/**/*.{hbs,md}'] }, pages: { options: { layout: 'default.hbs' }, files: { './': ['src/templates/pages/index.hbs'] } } } }; 注意 Hugo 文档中的 语法高亮页面 介绍了有关语法高亮的更多信息, 包括语法高亮的 shortcode. ","date":"2021-04-01","objectID":"/markdown%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/:9:4","series":null,"tags":["DoIt"],"title":"Markdown 基本语法","uri":"/markdown%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/#语法高亮"},{"categories":["DoIt文档"],"content":"10 表格 通过在每个单元格之间添加竖线作为分隔线, 并在标题下添加一行破折号 (也由竖线分隔) 来创建表格. 注意, 竖线不需要垂直对齐. | Option | Description | | ------ | ----------- | | data | path to data files to supply the data that will be passed into templates. | | engine | engine to be used for processing templates. Handlebars is the default. | | ext | extension to be used for dest files. | 呈现的输出效果如下: Option Description data path to data files to supply the data that will be passed into templates. engine engine to be used for processing templates. Handlebars is the default. ext extension to be used for dest files. 输出的 HTML 看起来像这样: \u003ctable\u003e \u003cthead\u003e \u003ctr\u003e \u003cth\u003eOption\u003c/th\u003e \u003cth\u003eDescription\u003c/th\u003e \u003c/tr\u003e \u003c/thead\u003e \u003ctbody\u003e \u003ctr\u003e \u003ctd\u003edata\u003c/td\u003e \u003ctd\u003epath to data files to supply the data that will be passed into templates.\u003c/td\u003e \u003c/tr\u003e \u003ctr\u003e \u003ctd\u003eengine\u003c/td\u003e \u003ctd\u003eengine to be used for processing templates. Handlebars is the default.\u003c/td\u003e \u003c/tr\u003e \u003ctr\u003e \u003ctd\u003eext\u003c/td\u003e \u003ctd\u003eextension to be used for dest files.\u003c/td\u003e \u003c/tr\u003e \u003c/tbody\u003e \u003c/table\u003e 文本右对齐或居中对齐 在任何标题下方的破折号右侧添加冒号将使该列的文本右对齐. 在任何标题下方的破折号两边添加冒号将使该列的对齐文本居中. | Option | Description | |:------:| -----------:| | data | path to data files to supply the data that will be passed into templates. | | engine | engine to be used for processing templates. Handlebars is the default. | | ext | extension to be used for dest files. | 呈现的输出效果如下: Option Description data path to data files to supply the data that will be passed into templates. engine engine to be used for processing templates. Handlebars is the default. ext extension to be used for dest files. ","date":"2021-04-01","objectID":"/markdown%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/:10:0","series":null,"tags":["DoIt"],"title":"Markdown 基本语法","uri":"/markdown%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/#10-表格"},{"categories":["DoIt文档"],"content":"11 链接 ","date":"2021-04-01","objectID":"/markdown%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/:11:0","series":null,"tags":["DoIt"],"title":"Markdown 基本语法","uri":"/markdown%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/#links"},{"categories":["DoIt文档"],"content":"基本链接 \u003chttps://assemble.io\u003e \u003ccontact@revolunet.com\u003e [Assemble](https://assemble.io) 呈现的输出效果如下 (将鼠标悬停在链接上, 没有提示): https://assemble.io contact@revolunet.com Assemble 输出的 HTML 看起来像这样: \u003ca href=\"https://assemble.io\"\u003ehttps://assemble.io\u003c/a\u003e \u003ca href=\"mailto:contact@revolunet.com\"\u003econtact@revolunet.com\u003c/a\u003e \u003ca href=\"https://assemble.io\"\u003eAssemble\u003c/a\u003e ","date":"2021-04-01","objectID":"/markdown%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/:11:1","series":null,"tags":["DoIt"],"title":"Markdown 基本语法","uri":"/markdown%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/#基本链接"},{"categories":["DoIt文档"],"content":"添加一个标题 [Upstage](https://github.com/upstage/ \"Visit Upstage!\") 呈现的输出效果如下 (将鼠标悬停在链接上, 会有一行提示): Upstage 输出的 HTML 看起来像这样: \u003ca href=\"https://github.com/upstage/\" title=\"Visit Upstage!\"\u003eUpstage\u003c/a\u003e ","date":"2021-04-01","objectID":"/markdown%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/:11:2","series":null,"tags":["DoIt"],"title":"Markdown 基本语法","uri":"/markdown%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/#添加一个标题"},{"categories":["DoIt文档"],"content":"定位标记 定位标记使你可以跳至同一页面上的指定锚点. 例如, 每个章节: ## Table of Contents * [Chapter 1](#chapter-1) * [Chapter 2](#chapter-2) * [Chapter 3](#chapter-3) 将跳转到这些部分: ## Chapter 1 \u003ca id=\"chapter-1\"\u003e\u003c/a\u003e Content for chapter one. ## Chapter 2 \u003ca id=\"chapter-2\"\u003e\u003c/a\u003e Content for chapter one. ## Chapter 3 \u003ca id=\"chapter-3\"\u003e\u003c/a\u003e Content for chapter one. 注意 定位标记的位置几乎是任意的. 因为它们并不引人注目, 所以它们通常被放在同一行了. ","date":"2021-04-01","objectID":"/markdown%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/:11:3","series":null,"tags":["DoIt"],"title":"Markdown 基本语法","uri":"/markdown%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/#定位标记"},{"categories":["DoIt文档"],"content":"12 脚注 脚注使你可以添加注释和参考, 而不会使文档正文混乱. 当你创建脚注时, 会在添加脚注引用的位置出现带有链接的上标编号. 读者可以单击链接以跳至页面底部的脚注内容. 要创建脚注引用, 请在方括号中添加插入符号和标识符 ([^1]). 标识符可以是数字或单词, 但不能包含空格或制表符. 标识符仅将脚注引用与脚注本身相关联 - 在脚注输出中, 脚注按顺序编号. 在中括号内使用插入符号和数字以及用冒号和文本来添加脚注内容 ([^1]：这是一段脚注). 你不一定要在文档末尾添加脚注. 可以将它们放在除列表, 引用和表格等元素之外的任何位置. 这是一个数字脚注[^1]. 这是一个带标签的脚注[^label] [^1]: 这是一个数字脚注 [^label]: 这是一个带标签的脚注 这是一个数字脚注1. 这是一个带标签的脚注2 ","date":"2021-04-01","objectID":"/markdown%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/:12:0","series":null,"tags":["DoIt"],"title":"Markdown 基本语法","uri":"/markdown%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/#12-脚注"},{"categories":["DoIt文档"],"content":"13 图片 图片的语法与链接相似, 但包含一个在前面的感叹号. ![Minion](https://octodex.github.com/images/minion.png) 或者: ![Alt text](https://octodex.github.com/images/stormtroopocat.jpg \"The Stormtroopocat\") The StormtroopocatAlt text \" The Stormtroopocat 像链接一样, 图片也具有脚注样式的语法: ![Alt text][id] The DojocatAlt text \" The Dojocat 稍后在文档中提供参考内容, 用来定义 URL 的位置: [id]: https://octodex.github.com/images/dojocat.jpg \"The Dojocat\" 技巧 DoIt 主题提供了一个包含更多功能的 图片的 shortcode. 这是一个数字脚注 ↩︎ 这是一个带标签的脚注 ↩︎ ","date":"2021-04-01","objectID":"/markdown%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/:13:0","series":null,"tags":["DoIt"],"title":"Markdown 基本语法","uri":"/markdown%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/#13-图片"},{"categories":null,"content":"\rHigh!!! 前方高能♂ \r","date":"0001-01-01","objectID":"/interesting/:0:0","series":null,"tags":null,"title":"Everybody~ High起来!","uri":"/interesting/#"},{"categories":null,"content":"关于作者 Hello World！ ","date":"0001-01-01","objectID":"/about/:0:0","series":null,"tags":null,"title":"关于","uri":"/about/#"},{"categories":null,"content":"游戏规则 点击小圆点，围住小猫。 你点击一次，小猫走一次。 直到你把小猫围住（赢），或者小猫走到边界并逃跑（输）。 \r\r\r\r\r","date":"0001-01-01","objectID":"/cat/:1:0","series":null,"tags":null,"title":"逮住那只猫!","uri":"/cat/#游戏规则"}]